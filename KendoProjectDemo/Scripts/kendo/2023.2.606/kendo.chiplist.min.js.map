{"version":3,"file":"kendo.chiplist.min.js","names":["factory","define","amd","$","kendo","ui","Widget","keys","isPlainObject","isEmptyObject","NS","DOT","SELECT","REMOVE","html","chipListStyles","ChipList","window","jQuery","widget","item","selected","disabled","enabledItemSelector","extend","init","element","options","that","this","fn","call","renderChipList","_selectable","selectable","_bindEvents","_items","name","items","fillMode","rounded","size","itemSize","events","destroy","_keydownProxy","unbind","_selectProxy","_removeProxy","off","find","each","_getChipFromElement","_updateCssClasses","styles","removeClass","index","className","indexOf","addClass","getValidCssClass","_getInitializeChipOptions","itemOptions","attributes","tabindex","role","removable","remove","select","getKendoChip","chipOptions","selectedItems","chipEl","firstNavigatableItem","i","length","append","_createChip","_getFirstNavigatableItem","_applyTabIndex","filter","ind","ch","chip","_isItem","is","itemElement","el","attr","kendoChip","_keydown","bind","_select","_remove","on","ev","sender","_triggerSelect","preventDefault","trigger","originalEvent","selectedChipElement","_removeItem","wrapper","_focusNavigatableItem","target","closest","key","keyCode","LEFT","RIGHT","nextCandidate","_getNavigatableItem","focus","first","_getLastNavigatableItem","last","current","prevAll","nextAll","children","state","enable","isNaN","eq","itemById","id","add","before","method","targetElement","setOptions","empty","plugin"],"sources":["kendo.chiplist.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.chip', 'kendo.html.chiplist'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"chiplist\",\n        name: \"ChipList\",\n        category: \"web\",\n        docsCategory: \"navigation\",\n        description: \"The ChipList component.\",\n        depends: [\"core\", \"chip\", \"html.chiplist\"]\n    };\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            keys = kendo.keys,\n            isPlainObject = $.isPlainObject,\n            isEmptyObject = $.isEmptyObject,\n\n            NS = \".kendoChipList\",\n            PREFIX = \"k-chip-list-\",\n            DOT = \".\",\n\n            SELECT = \"select\",\n            REMOVE = \"remove\";\n        var html = kendo.html;\n\n        var chipListStyles = {\n            widget: \"k-chip-list\",\n            item: \"k-chip\",\n            selected: \"k-selected\",\n            disabled: \"k-disabled\",\n            enabledItemSelector: \"k-chip:not(.k-disabled)\"\n        };\n\n        var ChipList = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                options = options || {};\n                Widget.fn.init.call(that, element, options);\n\n                html.renderChipList(element, $.extend({}, options));\n\n                that._selectable = that.options.selectable;\n                that._bindEvents();\n                that._items();\n            },\n\n            options: {\n                name: \"ChipList\",\n                selectable: \"none\",\n                items: [],\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                size: \"medium\",\n                itemSize: \"medium\"\n            },\n\n            events: [\n                SELECT,\n                REMOVE\n            ],\n\n            destroy: function() {\n                var that = this;\n\n                if (that._keydownProxy) {\n                    that.unbind(that._keydownProxy);\n                    that._keydownProxy = null;\n                }\n\n                if (that._selectProxy) {\n                    that.unbind(that._selectProxy);\n                    that._selectProxy = null;\n                }\n\n                if (that._removeProxy) {\n                    that.unbind(that._removeProxy);\n                    that._removeProxy = null;\n                }\n\n                that.element.off(NS);\n                that.element.find(\"[data-role='chip']\").each(function() {\n                    that._getChipFromElement(this).destroy();\n                });\n\n                Widget.fn.destroy.call(this);\n            },\n\n            _updateCssClasses: function() {\n                var that = this,\n                    options = that.options,\n                    styles = chipListStyles;\n\n                // Remove all class names\n                that.element.removeClass(function(index, className) {\n                    if (className.indexOf('k-') === 0) {\n                        that.element.removeClass(className);\n                    }\n                });\n\n                that.element.addClass(styles.widget);\n                that.element.addClass(kendo.getValidCssClass(PREFIX, \"size\", options.size));\n            },\n\n            _getInitializeChipOptions: function(itemOptions) {\n                var that = this,\n                    options = that.options;\n\n                var attributes = $.extend(itemOptions.attributes || {}, {\n                    tabindex: \"-1\"\n                });\n\n                if (options.selectable !== \"none\") {\n                    attributes.role = \"option\";\n                    attributes[\"aria-selected\"] = itemOptions.selected;\n                }\n\n                if (options.removable || itemOptions.removable) {\n                    attributes[\"aria-keyshortcuts\"] = \"Enter Delete\";\n                }\n\n                return $.extend({\n                    fillMode: options.fillMode,\n                    size: options.itemSize,\n                    rounded: options.rounded,\n                    selectable: options.selectable !== \"none\",\n                    removable: options.removable,\n                    remove: that._removeProxy,\n                    select: that._selectProxy,\n                }, itemOptions, { attributes: attributes });\n            },\n\n            _getChipFromElement: function(element) {\n                return $(element).getKendoChip() || $(element).find(\"[data-role='chip']\").getKendoChip();\n            },\n\n            _items: function() {\n                var that = this,\n                    options = that.options,\n                    items = options.items,\n                    chipOptions,\n                    selectedItems,\n                    chipEl,\n                    firstNavigatableItem,\n                    item;\n\n                for (var i = 0; i < items.length; i++) {\n                    chipOptions = that._getInitializeChipOptions(items[i]);\n                    chipEl = $(\"<span></span>\");\n                    that.element.append(chipEl);\n                    item = that._createChip(chipEl, chipOptions);\n                }\n\n                firstNavigatableItem = that._getFirstNavigatableItem();\n                if (firstNavigatableItem) {\n                    that._applyTabIndex(that.items().index(firstNavigatableItem));\n                }\n\n                if (that._selectable === \"single\") {\n                    selectedItems = that.items().filter(DOT + chipListStyles.selected);\n                    selectedItems.each(function(ind, ch) {\n                        if (ind !== selectedItems.length - 1) {\n                            var chip = that._getChipFromElement(ch);\n                            if (chip) {\n                                chip.select(false);\n                            }\n                        }\n                    });\n                }\n            },\n\n            _isItem: function(item) {\n                var that = this;\n\n                item = $(item);\n\n                return item.is(DOT + chipListStyles.item) && !!that.element.find(item).length;\n            },\n\n            _applyTabIndex: function(index) {\n                var that = this;\n                var itemElement = that.item(+index ? +index : 0);\n\n                that.items().each(function(ind, el) {\n                    $(el).attr(\"tabindex\", \"-1\");\n                });\n\n                itemElement.attr(\"tabindex\", \"0\");\n            },\n\n            _createChip: function(element, chipOptions) {\n                return element.kendoChip(chipOptions);\n            },\n\n            _bindEvents: function() {\n                var that = this;\n                that._keydownProxy = that._keydown.bind(that);\n                that._selectProxy = that._select.bind(that);\n                that._removeProxy = that._remove.bind(that);\n\n                that.element.on(\"keydown\" + NS, DOT + chipListStyles.item, that._keydownProxy);\n            },\n\n            _select: function(ev) {\n                var that = this,\n                    chip = ev.sender;\n\n                if (that._selectable == \"none\") {\n                    ev.preventDefault();\n                    return;\n                }\n\n                that._triggerSelect(chip, ev);\n            },\n\n            _triggerSelect: function(item, ev) {\n                var that = this,\n                    selectedItems;\n\n                if (that.element.is(DOT + chipListStyles.disabled)) {\n                    return;\n                }\n\n                if (that.trigger(SELECT, { originalEvent: ev, item: item })) {\n                    return;\n                }\n\n                if (that._selectable === \"single\") {\n                    selectedItems = that.select();\n                    if (selectedItems.length > 0) {\n                        selectedItems.each(function(ind, selectedChipElement) {\n                            var chip = that._getChipFromElement(selectedChipElement);\n                            if (chip && chip !== item) {\n                                chip.select(false);\n                            }\n                        });\n                    }\n                }\n            },\n\n            _remove: function(ev) {\n                var that = this,\n                    chip = ev.sender;\n\n                if (that.trigger(REMOVE, { originalEvent: ev, item: ev.sender })) {\n                    return;\n                }\n\n                that._removeItem(chip);\n            },\n\n            _removeItem: function(chip) {\n                var that = this;\n                if (chip) {\n                    var el = chip.wrapper;\n                    chip.destroy();\n                    el.remove();\n                    that._focusNavigatableItem();\n                }\n            },\n\n            _keydown: function(ev) {\n                // change the tabindex to the next/prev chip\n                // and remove it from the others\n                var that = this,\n                    target = $(ev.target).closest(DOT + chipListStyles.item),\n                    key = ev.keyCode;\n\n                if (key === keys.LEFT || key === keys.RIGHT) {\n                    that._focusNavigatableItem(key, target);\n                }\n                // add support for Home and End keys?\n            },\n\n            _focusNavigatableItem: function(key, target) {\n                var that = this;\n                var nextCandidate = that._getNavigatableItem(key, target);\n                if (nextCandidate) {\n                    that._applyTabIndex(that.items().index(nextCandidate));\n                    nextCandidate.focus();\n                }\n            },\n\n            _getFirstNavigatableItem: function() {\n                var that = this;\n                return that.items().filter(DOT + chipListStyles.enabledItemSelector).first();\n            },\n\n            _getLastNavigatableItem: function() {\n                var that = this;\n                return that.items().filter(DOT + chipListStyles.enabledItemSelector).last();\n            },\n\n            _getNavigatableItem: function(key, target) {\n                var that = this;\n                var current;\n\n                if (target) {\n                    current = target;\n                } else {\n                    current = that._getFirstNavigatableItem();\n                }\n\n                if (key === keys.LEFT && target) {\n                    current = target.prevAll(DOT + chipListStyles.enabledItemSelector).first();\n                }\n\n                if (key === keys.RIGHT && target) {\n                    current = target.nextAll(DOT + chipListStyles.enabledItemSelector).first();\n                }\n\n                return current.length ? current : null;\n            },\n\n            items: function() {\n                var that = this;\n                return that.element.children();\n            },\n\n            select: function(item, state) {\n                var that = this,\n                    chip,\n                    selectedItems = that.items().filter(DOT + chipListStyles.selected);\n\n                if (!item) {\n                    return selectedItems;\n                }\n\n                state = state !== false;\n\n                chip = that._getChipFromElement(item);\n                if (chip) {\n                    if (that._selectable === \"single\") {\n                        selectedItems = that.select();\n                        if (selectedItems.length > 0) {\n                            selectedItems.each(function(ind, selectedChipElement) {\n                                var chip = that._getChipFromElement(selectedChipElement);\n                                if (chip && chip !== item) {\n                                    chip.select(false);\n                                }\n                            });\n                        }\n                    }\n\n                    chip.select(state);\n                }\n            },\n\n            enable: function(item, state) {\n                var chip = this._getChipFromElement(item);\n                state = state !== false;\n\n                if (chip) {\n                    chip.enable(state);\n                }\n            },\n\n            item: function(index) {\n                var that = this;\n\n                if (isNaN(index)) {\n                    return null;\n                }\n\n                return that.items().eq(index);\n            },\n\n            itemById: function(id) {\n                var that = this;\n\n                return that.element.find(\"#\" + id);\n            },\n\n            add: function(item, before) {\n                // add validation to get element, options object and a Chip widget\n                var that = this,\n                    method = \"append\",\n                    chip,\n                    chipEl,\n                    targetElement = that.element;\n\n                if (before && that._isItem(before)) {\n                    method = \"before\";\n                    targetElement = $(before);\n                }\n\n                chip = that._getChipFromElement(item);\n                if (chip) {\n                    if (that._selectable !== \"none\") {\n                        chip.wrapper.attr(\"role\", \"option\");\n                    }\n\n                    targetElement[method](chip.wrapper);\n                } else if (item && isPlainObject(item) && !isEmptyObject(item)) {\n                    chipEl = $(\"<span></span>\");\n                    targetElement[method](chipEl);\n                    that._createChip(chipEl, that._getInitializeChipOptions(item));\n                }\n            },\n\n            remove: function(item) {\n                var that = this;\n\n                if (item && that._isItem(item)) {\n                    kendo.destroy(item);\n                    item.remove();\n                    that._focusNavigatableItem();\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                Widget.fn.setOptions.call(this, options);\n                that._updateCssClasses();\n\n                if (options.items) {\n                    that.element.empty();\n                    that._items();\n                }\n            }\n        });\n\n        ui.plugin(ChipList);\n    })(window.kendo.jQuery);\n\n}));\n"]}