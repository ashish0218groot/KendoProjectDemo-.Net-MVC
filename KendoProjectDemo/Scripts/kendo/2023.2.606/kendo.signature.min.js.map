{"version":3,"file":"kendo.signature.min.js","names":["factory","define","amd","exports","kendoDrawing","_a","elementOffset","limitValue","Point","Rect","transform","noop","SignaturePad","window","kendo","inputs","common","drawing","util","geometry","element","options","this","lastMoveTime","Object","assign","scale","precision","samplingRate","smooth","color","backgroundColor","strokeWidth","onChange","onDraw","onDrawEnd","pathOptions","stroke","width","lineCap","lineJoin","initSurface","attachEvents","prototype","destroy","detachEvents","clear","rootGroup","path","defineProperty","get","Boolean","points","enumerable","configurable","toString","set","value","MultiPath","parse","append","loadImage","data","size","height","contentWidth","contentHeight","importWidth","importHeight","scaleX","scaleY","Math","min","img","Image","exportImage","_b","exportWidth","exportHeight","exportRect","exportGroup","Group","clip","Path","fromRect","contentGroup","frame","fill","children","push","apply","resize","surface","setOptions","background","Surface","create","type","style","touchAction","offsetWidth","offsetHeight","draw","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","removeEventListener","touchPoint","e","offset","pageX","pageY","left","top","readonly","isPrimary","button","isMainButton","setPointerCapture","pointerId","point","moveTo","now","Date","getTime","lastPoint","length","minDelta","distanceTo","lineTo","segments","curveFromPoints","paths","splice","pathData","$","undefined$1","Widget","ui","Dialog","html","outerWidth","_outerWidth","outerHeight","_outerHeight","Pad","ns","CHANGE","OPEN","CLOSE","CLICK","Signature","extend","init","that","fn","call","_createElements","maximizable","_createInput","wrapper","getComputedStyle","_createPad","_createDialogPad","_attachHandlers","_assignLabel","_pad","_dialogPad","enable","name","fillMode","hideLine","label","popupScale","rounded","exportScale","events","currentOptions","oldBtnClass","getValidCssClass","btns","add","_dialogPadEl","find","targets","removeClass","_clearCssClasses","deepExtend","_destroyPad","_destroyDialog","pad","i","copyPath","_hideLine","_applyCssClasses","toggle","addClass","removeAttr","close","_dialog","open","off","empty","toggleClass","renderButton","icon","insertAfter","_dialogEl","_value","_input","val","reset","attr","_ariaLabel","on","trigger","autocomplete","required","appendTo","remove","line","maximize","padOptions","then","hide","show","canvas","title","closable","keyCode","keys","ESC","cssProperties","registerPrefix","plugin","jQuery"],"sources":["kendo.signature.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.drawing', 'kendo.dialog', 'kendo.html.button'], factory) :\n    factory();\n})((function () {\n    (function () {\n\n    window.kendo = window.kendo || {};\n    window.kendo.inputs = window.kendo.inputs || {};\n    (function (exports, kendoDrawing) {\n\n        var _a = kendoDrawing.util, elementOffset = _a.elementOffset, limitValue = _a.limitValue;\n\n        var Point = kendo.geometry.Point, Rect = kendo.geometry.Rect, transform = kendo.geometry.transform;\n        var noop = function () { };\n        var DECIMAL_DIGITS = 3;\n        var DEFAULT_COLOR = '#000';\n        var DEFAULT_BACKGROUND_COLOR = '#fff';\n        var DEFAULT_PRECISION = 1;\n        var DEFAULT_SAMPLING_RATE = 200; // Updates per second\n        var DEFAULT_STROKE_WIDTH = 1;\n        var DEFAULT_WIDTH = 750;\n        var DEFAULT_HEIGHT = 250;\n        var DEFAULT_SCALE = 1;\n        // Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\n        var DEFAULT_EXPORT_SCALE = 6;\n        var SignaturePad = /** @class */ (function () {\n            function SignaturePad(element, options) {\n                if (options === void 0) { options = {}; }\n                this.element = element;\n                this.lastMoveTime = 0;\n                this.options = Object.assign({\n                    scale: DEFAULT_SCALE,\n                    precision: DEFAULT_PRECISION,\n                    samplingRate: DEFAULT_SAMPLING_RATE,\n                    smooth: options.smooth !== false,\n                    color: options.color || DEFAULT_COLOR,\n                    backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n                    strokeWidth: DEFAULT_STROKE_WIDTH,\n                    onChange: noop,\n                    onDraw: noop,\n                    onDrawEnd: noop\n                }, options);\n                this.pathOptions = {\n                    stroke: {\n                        color: this.options.color,\n                        width: this.options.strokeWidth,\n                        lineCap: 'round',\n                        lineJoin: 'round'\n                    }\n                };\n                this.initSurface();\n                this.attachEvents();\n            }\n            SignaturePad.prototype.destroy = function () {\n                this.detachEvents();\n            };\n            SignaturePad.prototype.clear = function () {\n                this.rootGroup.clear();\n                this.path = null;\n            };\n            Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n                get: function () {\n                    return Boolean(this.points);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n                get: function () {\n                    var _a;\n                    return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n                },\n                set: function (value) {\n                    this.clear();\n                    this.path = kendoDrawing.MultiPath.parse(value, this.pathOptions);\n                    this.rootGroup.append(this.path);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            SignaturePad.prototype.loadImage = function (data, size) {\n                if (size === void 0) { size = []; }\n                if (!data) {\n                    this.clear();\n                    return;\n                }\n                var _a = this.size, width = _a[0], height = _a[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n                var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = contentWidth / importWidth;\n                var scaleY = contentHeight / importHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var img = new kendoDrawing.Image(data, new kendo.geometry.Rect([0, 0], [importWidth, importHeight]));\n                img.transform(transform().scale(scale, scale));\n                this.clear();\n                this.rootGroup.append(img);\n            };\n            SignaturePad.prototype.exportImage = function (options) {\n                var _a;\n                var _b = this.size, width = _b[0], height = _b[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n                var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = exportWidth / contentWidth;\n                var scaleY = exportHeight / contentHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n                var exportGroup = new kendoDrawing.Group({\n                    clip: kendoDrawing.Path.fromRect(exportRect)\n                });\n                var contentGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                var frame = kendoDrawing.Path.fromRect(exportRect, {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                exportGroup.append(frame);\n                exportGroup.append(contentGroup);\n                (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n                return kendoDrawing.exportImage(exportGroup, Object.assign({\n                    width: exportWidth,\n                    height: exportHeight\n                }, options));\n            };\n            SignaturePad.prototype.resize = function () {\n                this.surface.resize(true);\n            };\n            SignaturePad.prototype.setOptions = function (options) {\n                Object.assign(this.options, options);\n                this.pathOptions.stroke.color = this.options.color;\n                this.pathOptions.stroke.width = this.options.strokeWidth;\n                if (this.path) {\n                    this.path.options.set('stroke.color', this.options.color);\n                    this.path.options.set('stroke.width', this.options.strokeWidth);\n                }\n                this.background.options.set('fill.color', this.options.backgroundColor);\n            };\n            SignaturePad.prototype.initSurface = function () {\n                this.surface = kendoDrawing.Surface.create(this.element, { type: 'canvas' });\n                this.element.style.touchAction = 'none';\n                var scale = this.options.scale;\n                this.rootGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                // The signature is not resizable, store initial dimensions.\n                var width = this.element.offsetWidth || DEFAULT_WIDTH;\n                var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n                this.size = [width, height];\n                this.background = kendoDrawing.Path.fromRect(new Rect([0, 0], this.size), {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                this.surface.draw(this.background);\n                this.surface.draw(this.rootGroup);\n            };\n            SignaturePad.prototype.attachEvents = function () {\n                this.onPointerDown = this.onPointerDown.bind(this);\n                this.onPointerMove = this.onPointerMove.bind(this);\n                this.onPointerUp = this.onPointerUp.bind(this);\n                this.element.addEventListener('pointerdown', this.onPointerDown);\n                this.element.addEventListener('pointermove', this.onPointerMove);\n                this.element.addEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.detachEvents = function () {\n                this.element.removeEventListener('pointerdown', this.onPointerDown);\n                this.element.removeEventListener('pointermove', this.onPointerMove);\n                this.element.removeEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.touchPoint = function (e) {\n                var offset = elementOffset(this.element);\n                var pageX = e.pageX;\n                var pageY = e.pageY;\n                var scale = 1 / this.options.scale;\n                return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n            };\n            SignaturePad.prototype.onPointerDown = function (e) {\n                if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n                    return;\n                }\n                if (!this.path) {\n                    this.path = new kendoDrawing.MultiPath(this.pathOptions);\n                    this.rootGroup.append(this.path);\n                }\n                this.options.onDraw();\n                this.element.setPointerCapture(e.pointerId);\n                var point = this.touchPoint(e);\n                this.points = [point];\n                this.path.moveTo(point);\n            };\n            SignaturePad.prototype.onPointerMove = function (e) {\n                if (!this.points || !e.isPrimary) {\n                    return;\n                }\n                var now = (new Date()).getTime();\n                var elapsed = now - this.lastMoveTime;\n                var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n                if (elapsed < minTimeDelta) {\n                    return;\n                }\n                else {\n                    this.lastMoveTime = now;\n                }\n                var point = this.touchPoint(e);\n                var lastPoint = this.points[this.points.length - 1];\n                var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n                if (point.distanceTo(lastPoint) < minDelta) {\n                    return;\n                }\n                this.points.push(point);\n                this.path.lineTo(point);\n            };\n            SignaturePad.prototype.onPointerUp = function (e) {\n                if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n                    return;\n                }\n                if (this.options.smooth) {\n                    var segments = kendoDrawing.Path.curveFromPoints(this.points);\n                    this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n                }\n                this.points = null;\n                this.options.onDrawEnd();\n                this.options.onChange(this.pathData);\n            };\n            return SignaturePad;\n        }());\n        function isMainButton(e) {\n            return typeof (e.button) !== 'number' || e.button === 0;\n        }\n\n        exports.SignaturePad = SignaturePad;\n\n    })(window.kendo.inputs.common = window.kendo.inputs.common || {}, window.kendo.drawing);\n\n\n    })();\n\n    var __meta__ = {\n        id: \"signature\",\n        name: \"Signature\",\n        category: \"web\",\n        description: \"The Signature component ...\",\n        depends: [ \"core\", \"dialog\", \"html.button\", \"drawing\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            Dialog = kendo.ui.Dialog,\n            html = kendo.html,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Pad = kendo.inputs.common.SignaturePad,\n            ns = \".kendoSignature\",\n            DEFAULT_BACKGROUND_COLOR = '#ffffff',\n            CHANGE = \"change\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CLICK = \"click\",\n            TABINDEX = \"tabindex\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_LABELLEDBY = \"aria-labelledby\";\n\n        var Signature = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._createElements(that.element, that.options.maximizable ? \"maxi\" : \"\", false, 1);\n                that._createInput();\n                that.wrapper = that.element;\n                if (!that.options.backgroundColor) {\n                    that.options.backgroundColor = getComputedStyle(that.element[0]).backgroundColor || DEFAULT_BACKGROUND_COLOR;\n                }\n\n                that._createPad();\n                that._createDialogPad();\n                that._attachHandlers();\n                that._assignLabel();\n\n                if (that.options.value) {\n                    that._pad.loadImage(that.options.value);\n                    that._dialogPad.loadImage(that.options.value);\n                }\n\n                if (that.options.readonly) {\n                    that.readonly();\n                }\n\n                if (!that.options.enable) {\n                    that.enable(false);\n                }\n            },\n\n            options: {\n                name: \"Signature\",\n                color: \"#000000\",\n                enable: true,\n                fillMode: \"solid\",\n                hideLine: false,\n                label: \"\",\n                maximizable: true,\n                popupScale: 3,\n                readonly: false,\n                rounded: \"medium\",\n                size: \"medium\",\n                smooth: false,\n                strokeWidth: 1,\n                exportScale: 2,\n                value: \"\"\n            },\n\n            events: [ CHANGE, OPEN, CLOSE],\n\n            setOptions: function(options) {\n                var currentOptions = this.options;\n                var path;\n                var oldBtnClass = kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size);\n                var btns = this.element.add(this._dialogPadEl).find(\".\" + oldBtnClass);\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                btns.removeClass(oldBtnClass);\n                this._clearCssClasses(currentOptions);\n                this.element.removeClass(kendo.getValidCssClass(\"k-signature-\", \"size\", currentOptions.size));\n                kendo.deepExtend(currentOptions, options);\n                this.options = currentOptions;\n                this.element.width(currentOptions.width);\n                this.element.height(currentOptions.height);\n                this._dialogPadEl.width(currentOptions.width * currentOptions.popupScale);\n                this._dialogPadEl.height(currentOptions.height * currentOptions.popupScale);\n                path = this._pad.path;\n                this._destroyPad();\n                this._destroyDialog();\n                this._createPad();\n                this._createDialogPad();\n                copyPath(this._pad, path);\n                this.enable(currentOptions.enable);\n                this.readonly(currentOptions.readonly);\n                this._hideLine(this.element);\n                this._hideLine(this._dialogPadEl);\n                this._applyCssClasses(this.element);\n                this.element.find(\".k-signature-maximize\").toggle(currentOptions.maximizable);\n                this.element.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                this.element.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n                btns.addClass(kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size));\n\n                targets.removeAttr(\"aria-label\");\n                this._assignLabel();\n            },\n\n            close: function() {\n                if (!this._dialog) {\n                    return;\n                }\n                this._dialog.close();\n            },\n\n            open: function() {\n                if (!this.options.maximizable || !this._dialog) {\n                    return;\n                }\n                this._dialog.open();\n            },\n\n            destroy: function() {\n                var that = this;\n                that._destroyPad();\n\n                that._destroyDialog();\n\n                that.element.off(ns);\n                that.element.empty();\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enable) {\n                var enable = enable !== false;\n                if (!enable) {\n                    this._dialog.close();\n                }\n\n                this.element.find(\".k-button\").toggle(enable);\n                this.element.toggleClass(\"k-disabled\", !enable);\n                this._pad.options.readonly = !enable;\n                this._dialogPad.options.readonly = !enable;\n            },\n\n            readonly: function(toggle) {\n                var that = this;\n                var toggle = toggle !== false;\n\n                that._pad.options.readonly = toggle;\n                that._dialogPad.options.readonly = toggle;\n\n                var clearButton = that.element.find(\".k-signature-clear\");\n\n                if (!clearButton.length && !toggle) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that.element.find(\".k-signature-actions-bottom\"));\n\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that._dialogEl.find(\".k-signature-actions-bottom\"));\n                }\n\n                that.element.find(\".k-signature-clear\").toggle(!toggle);\n                that._dialogEl.find(\".k-signature-clear\").toggle(!toggle);\n            },\n\n            value: function(value) {\n                if (value !== undefined$1) {\n                    this._value = value;\n                    this._input.val(value);\n                    this._pad.loadImage(value);\n                }\n\n                return this._value;\n            },\n\n            reset: function() {\n                this._dialogPad.clear();\n                this._pad.clear();\n                this._value = \"\";\n            },\n\n            _assignLabel: function() {\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                if (this.options.label) {\n                    targets.attr(ARIA_LABEL, this.options.label);\n                } else {\n                    this._ariaLabel(targets);\n                }\n\n                this.element.removeAttr(ARIA_LABELLEDBY);\n            },\n\n            _attachHandlers: function() {\n                var that = this;\n                that.element\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-maximize\", function() {\n                        that._dialog.open();\n                        that._dialog.wrapper.find(\".k-signature-minimize\").trigger(\"focus\");\n                    });\n            },\n\n            _createInput: function() {\n                var that = this;\n                var name = that.element.attr(\"name\");\n                var autocomplete = that.element.attr(\"autocomplete\");\n                var required = that.element.attr(\"required\");\n\n                that._input = $(\"<input class='k-hidden' aria-hidden='true'/>\").appendTo(that.element);\n\n                if (name) {\n                    that._input.attr(\"name\", name);\n                    that.element.removeAttr(\"name\");\n                }\n\n                if (autocomplete) {\n                    that._input.attr(\"autocomplete\", autocomplete);\n                    that.element.removeAttr(\"autocomplete\");\n                }\n\n                if (required) {\n                    that._input.attr(\"required\", required);\n                    that.element.removeAttr(\"required\");\n                }\n            },\n\n            _destroyPad: function() {\n                if (this._pad) {\n                    kendo.destroy(this.element.find(\".k-signature-canvas\"));\n                    this._pad = null;\n                    this.element.find(\".k-signature-canvas\").empty();\n                }\n            },\n\n            _destroyDialog: function() {\n                if (this._dialogPad) {\n                    this._dialogPad.destroy();\n                    this._dialogPad = null;\n                    this._dialogEl.off(ns);\n                    this._dialog.destroy();\n                    this._dialog = null;\n                    this._dialogEl.remove();\n                    this._dialogEl = null;\n                }\n            },\n\n            _hideLine: function(wrapper) {\n                var line = wrapper.find(\".k-signature-line\");\n                if (!this.options.hideLine && !line.length) {\n                    $(\"<div class='k-signature-line'>\").appendTo(wrapper);\n                }\n\n                if (this.options.hideLine) {\n                    line.remove();\n                }\n            },\n\n            _createElements: function(wrapper, button, maximize, scale) {\n                $(\"<div class='k-signature-canvas' role='img' tabindex='0'>\").appendTo(wrapper);\n\n                this._hideLine(wrapper);\n\n                $(\"<div class='k-signature-actions k-signature-actions-top'></div>\").appendTo(wrapper);\n\n                if (button == \"mini\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-minimize k-rotate-180\" aria-label=\"Minimize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                if (button == \"maxi\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-maximize\" aria-label=\"Maximize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                $(\"<div class='k-signature-actions k-signature-actions-bottom'></div>\").appendTo(wrapper);\n\n                if (!this.options.readonly) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"  aria-label=\"Clear signature\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-bottom\"));\n                }\n\n                wrapper.addClass(\"k-input k-signature\");\n\n                wrapper.width(this.options.width * scale);\n                wrapper.height(this.options.height * scale);\n\n                if (maximize) {\n                    wrapper.addClass(\"k-signature-maximized\");\n                }\n\n                this._applyCssClasses(wrapper);\n                //workaround as the sizings are added to -signature- but roundings to -input-\n                wrapper.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                wrapper.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n            },\n\n            _createPad: function() {\n                var that = this;\n                var padOptions = $.extend(true, {}, that.options, {\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale * that.options.popupScale,\n                            height: height * that.options.exportScale * that.options.popupScale\n                        }).then(function(val) {\n                            that._dialogPad.loadImage(val);\n                        });\n                    },\n                    onDraw: function() {\n                        that.element.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that.element.find(\".k-button\").show();\n                    }\n                });\n\n                that._pad = new Pad(that.element.find(\".k-signature-canvas\")[0], padOptions);\n            },\n\n            _createDialogPad: function() {\n                var that = this;\n                var canvas = null;\n\n                that._dialogEl = $(\"<div>\").appendTo(that.element);\n                that._dialog = new Dialog(that._dialogEl, {\n                    title: false,\n                    closable: false,\n                    open: function() {\n                        that.trigger(OPEN);\n                    },\n                    close: function() {\n                        that.trigger(CLOSE);\n                    }\n                });\n\n                that._dialogEl\n                    .removeAttr(TABINDEX)\n                    .on(\"keydown\", function(e) {\n                        if (e.keyCode === kendo.keys.ESC) {\n                            that._dialog.close();\n                        }\n                    });\n\n                that._dialogPadEl = $(\"<div>\").appendTo(that._dialog.element);\n                that._createElements(that._dialogPadEl, \"mini\", true, this.options.popupScale);\n                canvas = that._dialogPadEl.find(\".k-signature-canvas\")[0];\n\n                that._dialogPad = new Pad(canvas, $.extend(true, {}, that.options, {\n                    scale: that.options.popupScale,\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._dialogPad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._pad.loadImage(val);\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n                    },\n                    onDraw: function() {\n                        that._dialogEl.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that._dialogEl.find(\".k-button\").show();\n                    }\n                }));\n\n                // Dialog should be opened at first for drawing to work\n                that._dialog.close();\n                that._dialogEl\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-minimize\", function() {\n                        that._dialog.close();\n                    });\n            }\n        });\n\n        function copyPath(pad, path) {\n            if (!path || !path.paths || !path.paths.length) {\n                return;\n            }\n            pad.path = new kendo.drawing.MultiPath(pad.pathOptions);\n            pad.rootGroup.append(pad.path);\n\n            for (var i = 0; i < path.paths.length; i++) {\n                pad.path.paths.push(path.paths[i]);\n            }\n            pad.options.onChange();\n        }\n\n        kendo.cssProperties.registerPrefix(\"Signature\", \"k-input-\");\n\n        kendo.ui.plugin(Signature);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}