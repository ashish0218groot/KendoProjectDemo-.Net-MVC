{"version":3,"file":"kendo.mediaplayer.min.js","names":["factory","define","amd","$","kendo","END","PAUSE","PLAY","READY","TIMECHANGE","VOLUMECHANGE","FULLSCREEN_ENTER","FULLSCREEN_EXIT","MUTE","LOW_VOLUME","HIGH_VOLUME","VIDEO_QUALITY","STATE_PLAY","STATE_PAUSE","TITLEBAR","TOOLBAR","SLIDER","VOLUME_SLIDER","MEDIA","OVERLAY","YTPLAYER","DOT","STATE_PLAY_SELECTOR","FULLSCREEN_ENTER_SELECTOR","FULLSCREEN_EXIT_SELECTOR","MUTE_SELECTOR","LOW_VOLUME_SELECTOR","HIGH_VOLUME_SELECTOR","ui","ns","baseTime","timeZoneSec","Widget","isArray","timeFormats","template","keys","templates","MediaPlayer","window","jQuery","Date","getTimezoneOffset","Array","htmlPlayer","titleBar","toolBar","youtubePlayer","toolBarTime","slider","volumeSlider","qualityDropDown","toolTip","ref","value","toString","extend","init","element","options","this","wrapper","fn","call","addClass","_currentIndex","_createTitlebar","_createToolbar","_createDropDown","_createSlider","_createVolumeSlider","_timers","_aria","_navigatable","fullScreen","media","notify","events","name","autoPlay","autoRepeat","volume","mute","navigatable","forwardSeek","messages","pause","play","unmute","quality","fullscreen","_msToTime","ms","time","getTime","setSeconds","_timeToSec","_titleBar","find","length","append","sliderElement","_slider","_sliderDragChangeHandler","_sliderDragChange","bind","_sliderDraggingHandler","_sliderDragging","Slider","smallStep","tickPlacement","showButtons","change","slide","tooltip","dragHandleTitle","volumeSliderElement","_volumeSlider","_volumeDraggingHandler","_volumeDragging","_volumeChangeHandler","_volumeChange","width","min","max","enabled","_resetTime","_youTubeVideo","_ytmedia","seekTo","_media","currentTime","_mediaTimeUpdate","grep","_toolBar","items","e","_currentUrl","source","url","_isYouTubeUrl","match","_setPlayerUrl","oldPlayer","stop","toggle","initialized","_initializePlayer","_videoOverlay","hide","loadVideoById","_getMediaId","_playStateToggle","cueVideoById","show","remove","attr","toolBarElement","_toolbarClickHandler","_toolbarClick","ToolBar","click","resizable","type","attributes","class","icon","fillMode","off","before","_volumeButton","_fullscreenButton","_currentTimeElement","_durationElement","_playButton","_playButtonSpan","support","cssFlexbox","wrapAll","hdIcon","dropDownElement","data","_dropDownSelectHandler","_dropDownSelect","_dropDown","DropDownList","dataTextField","dataValueField","popup","position","origin","appendTo","animation","open","effects","duration","select","setDataSource","replaceWith","list","item","index","target","children","first","isPaused","is","_isInFullScreen","muted","_isDragging","that","sender","tzOffset","_sliderChangeFired","_seekBarLastPosition","setTimeout","trigger","_preventPlay","_changeVolumeButtonImage","volumeButton","volumeElement","getCurrentTime","timeInMs","text","_timeFormat","isPlaying","_mediaEnded","_mediaPlay","_mediaReady","_mediaDurationChange","durationTime","getDuration","getHours","setOptions","_isFirstRun","_createYoutubePlayer","_mediaTimeUpdateHandler","_mediaDurationChangeHandler","prepend","_ytPlayer","css","height","YT","Player","_configurePlayer","onYouTubeIframeAPIReadyRegister","getScript","onYouTubeIframeAPIReady","i","_youtubeApiReady","_poll","callback","interval","context","clearTimeout","callLater","vars","autoplay","wmode","controls","rel","showinfo","_onYouTubePlayerReady","onYouTubePlayerReady","_onPlayerStateChangeHandler","_onPlayerStateChange","onPlayerStateChange","videoId","playerVars","onReady","onStateChange","event","getIframe","style","_updateTitle","titlebar","title","_paused","setVolume","_uiDisplay","result","_mouseClick","_mouseMoveHandler","_mouseMove","_mouseInHandler","_mouseIn","_mouseOutHandler","_mouseOut","on","_createHtmlPlayer","_mouseClickHanlder","_mediaEndedHandler","_mediaCanPlayHandler","_mediaPlayHandler","after","ontimeupdate","ondurationchange","oncanplay","onplay","onended","loop","_mouseIdle","state","animationSpeed","uiElements","add","parent","fadeIn","fadeOut","destroy","_keyDownHandler","_fullscreenHandler","_youtubeApiReadyHandler","src","_mouseMoveTimer","seek","seconds","playVideo","mobileOS","stopVideo","pauseVideo","toolbar","dropdown","enterFullScreen","get","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","document","cancelFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msCancelFullscreen","exitFullscreen","msExitFullscreen","removeClass","resize","_volume","currentState","isMuted","unMute","getVolume","isEnded","getPlayerState","ended","_mediaData","_fullscreen","_keyDown","isFullScreen","mozFullScreen","webkitIsFullScreen","fullscreenSpan","preventDefault","fsButton","keyCode","SPACEBAR","ENTER","ESC","_error","_progress","plugin"],"sources":["kendo.mediaplayer.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.slider', 'kendo.toolbar', 'kendo.dropdownlist', 'kendo.tooltip', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n            id: \"mediaplayer\",\n            name: \"MediaPlayer\",\n            category: \"web\",\n            description: \"\",\n            depends: [\"slider\", \"toolbar\", \"dropdownlist\", \"tooltip\", \"icons\"]\n        };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                END = \"end\",\n                PAUSE = \"pause\",\n                PLAY = \"play\",\n                READY = \"ready\",\n                TIMECHANGE = \"timeChange\",\n                VOLUMECHANGE = \"volumeChange\",\n                FULLSCREEN_ENTER = \"fullscreen\",\n                FULLSCREEN_EXIT = \"fullscreen-exit\",\n                MUTE = \"volume-mute\",\n                LOW_VOLUME = \"volume-down\",\n                HIGH_VOLUME = \"volume-up\",\n                VIDEO_QUALITY = \"k-mediaplayer-quality\",\n                STATE_PLAY = \"play\",\n                STATE_PAUSE = \"pause\",\n                TITLEBAR = \"k-mediaplayer-titlebar\",\n                TITLE = \"k-title\",\n                TOOLBARWRAP = \"k-mediaplayer-toolbar-wrap\",\n                TOOLBAR = \"k-mediaplayer-toolbar\",\n                SLIDER = \"k-mediaplayer-seekbar\",\n                VOLUME_SLIDER = \"k-mediaplayer-volume\",\n                MEDIA = \"k-mediaplayer-media\",\n                OVERLAY = \"k-mediaplayer-overlay\",\n                YTPLAYER = \"k-mediaplayer-yt\",\n                DOT = \".\",\n                STATE_PLAY_SELECTOR = 'span[class*=\"i-' + STATE_PLAY + '\"]',\n                STATE_PAUSE_SELECTOR = 'span[class*=\"i-' + STATE_PAUSE + '\"]',\n                FULLSCREEN_ENTER_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_ENTER + '\"]',\n                FULLSCREEN_EXIT_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_EXIT + '\"]',\n                MUTE_SELECTOR = 'span[class*=\"i-' + MUTE + '\"]',\n                LOW_VOLUME_SELECTOR = 'span[class*=\"i-' + LOW_VOLUME + '\"]',\n                HIGH_VOLUME_SELECTOR = 'span[class*=\"i-' + HIGH_VOLUME + '\"]',\n                ui = kendo.ui,\n                ns = \".kendoMediaPlayer\",\n                baseTime = new Date(1970, 0, 1),\n                timeZoneSec = baseTime.getTimezoneOffset() * 60,\n                Widget = kendo.ui.Widget,\n                isArray = Array.isArray,\n                timeFormats = {\n                    shortTime: \"mm:ss\",\n                    longTime: \"HH:mm:ss\"\n                },\n                template = kendo.template,\n                keys = kendo.keys,\n                templates = {\n                    htmlPlayer: function () { return \"<video class='\" + MEDIA + \"'> </video>\"; },\n                    titleBar: template(function () { return \"<div class='\" + TITLEBAR + \"'><span class='\" + TITLE + \"'>Video Title</span></div>\"; }),\n                    toolBar: function () { return \"<div class='\" + TOOLBARWRAP + \"'><div class='\" + TOOLBAR + \"'></div></div>\"; },\n                    youtubePlayer: function () { return \"<div class='\" + YTPLAYER + \"'> </div>\"; },\n                    toolBarTime: function () { return \"<span class='k-mediaplayer-currenttime'>00:00:00</span> / <span class='k-mediaplayer-duration'>00:00:00</span>\"; },\n                    slider: function () { return \"<input class='\" + SLIDER + \"' value='0' title='seekbar' />\"; },\n                    volumeSlider: function () { return \"<input class='\" + VOLUME_SLIDER + \"' title='volume'/>\"; },\n                    qualityDropDown: function () { return \"<input class='\" + VIDEO_QUALITY + \"' title='video quality' />\"; },\n                    toolTip: function (ref) {\n                        var value = ref.value;\n\n                        return (\"\" + (kendo.toString(new Date(value), 'HH:mm:ss')));\n            }\n                };\n\n            var MediaPlayer = Widget.extend({\n                init: function(element, options) {\n                    this.wrapper = $(element);\n\n                    Widget.fn.init.call(this, element, options);\n\n                    this.wrapper.addClass(\"k-mediaplayer k-widget\");\n\n                    options = this.options;\n\n                    this._currentIndex = 0;\n\n                    this._createTitlebar();\n\n                    this._createToolbar();\n\n                    this._createDropDown();\n\n                    this._createSlider();\n\n                    this._createVolumeSlider();\n\n                    this._timers = {};\n\n                    this._aria();\n\n                    this._navigatable();\n\n                    if (options.fullScreen) {\n                        this.fullScreen(true);\n                    }\n\n                    if (options.media) {\n                        this.media(this.options.media);\n                    }\n\n                    kendo.notify(this);\n                },\n\n                events: [\n                    END,\n                    PAUSE,\n                    PLAY,\n                    READY,\n                    TIMECHANGE,\n                    VOLUMECHANGE\n                ],\n\n                options: {\n                    name: \"MediaPlayer\",\n                    autoPlay: false,\n                    autoRepeat: false,\n                    volume: 100,\n                    fullScreen: false,\n                    mute: false,\n                    navigatable: false,\n                    forwardSeek: true,\n                    media: null,\n                    messages: {\n                        \"pause\": \"Pause\",\n                        \"play\": \"Play\",\n                        \"mute\": \"Mute\",\n                        \"unmute\": \"Unmute\",\n                        \"quality\": \"Quality\",\n                        \"fullscreen\": \"Full Screen\"\n                    }\n                },\n\n                _msToTime: function(ms) {\n                    var time = new Date(baseTime.getTime());\n                    time.setSeconds(ms);\n                    return time;\n                },\n\n                _timeToSec: function(time) {\n                    var curTime = new Date(time).getTime();\n                    return curTime / 1000;\n                },\n\n                _createTitlebar: function() {\n                    this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                    if (this._titleBar.length === 0) {\n                        this.wrapper.append(templates.titleBar);\n                        this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                    }\n                },\n\n                _createSlider: function() {\n                    var sliderElement = this.wrapper.find(DOT + SLIDER);\n                    if (!this._slider) {\n                        this._sliderDragChangeHandler = this._sliderDragChange.bind(this);\n                        this._sliderDraggingHandler = this._sliderDragging.bind(this);\n                        sliderElement = this.wrapper.find(DOT + SLIDER);\n\n                        this._slider = new ui.Slider(sliderElement[0], {\n                            smallStep: 1000,\n                            tickPlacement: \"none\",\n                            showButtons: false,\n                            change: this._sliderDragChangeHandler,\n                            slide: this._sliderDraggingHandler,\n                            tooltip: {\n                                template: templates.toolTip\n                            },\n                            dragHandleTitle: this.options.messages.time\n                        });\n                    }\n                },\n\n                _createVolumeSlider: function() {\n                    var volumeSliderElement = this.wrapper.find(DOT + VOLUME_SLIDER);\n                    if (!this._volumeSlider) {\n                        this._volumeDraggingHandler = this._volumeDragging.bind(this);\n                        this._volumeChangeHandler = this._volumeChange.bind(this);\n                        volumeSliderElement.width(87);\n                        this._volumeSlider = new ui.Slider(volumeSliderElement[0], {\n                            smallStep: 1,\n                            min: 0,\n                            max: 100,\n                            value: this.options.volume,\n                            slide: this._volumeDraggingHandler,\n                            change: this._volumeChangeHandler,\n                            tickPlacement: \"none\",\n                            showButtons: false,\n                            tooltip: { enabled: false },\n                            dragHandleTitle: this.options.messages.volume\n                        });\n                    }\n                },\n\n                _resetTime: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.seekTo(0, true);\n                    } else {\n                        this._media.currentTime = 0;\n                    }\n\n                    this._mediaTimeUpdate();\n                    $.grep(this._toolBar.options.items, function(e) { return !!e.template; }).template = templates.toolBarTime;\n                },\n\n                _currentUrl: function() {\n                    var media = this.media();\n                    return isArray(media.source) ? media.source[this._currentIndex].url : media.source;\n                },\n\n                _isYouTubeUrl: function() {\n                    return !!this._currentUrl().match(\"youtube.com/|youtu.be/\");\n                },\n\n                _setPlayerUrl: function() {\n                    var oldPlayer = this._youTubeVideo;\n                    this.stop();\n\n                    this._youTubeVideo = this._isYouTubeUrl();\n\n                    if (oldPlayer !== this._youTubeVideo) {\n                        this.wrapper.find(DOT + YTPLAYER).toggle();\n                        this.wrapper.find(DOT + MEDIA).toggle();\n                    }\n\n                    var initialized = this._media || this._ytmedia;\n\n                    this._initializePlayer();\n\n                    if (initialized) { //mute and volume settings should be persisted when switching between html and youtube players\n                        this.mute(this.mute());\n                        this.volume(this.volume());\n                    }\n\n                    if (!this._youTubeVideo) {\n                        this._videoOverlay.show();\n                        this.wrapper.find(DOT + MEDIA + \" > source\").remove();\n                        this.wrapper.find(DOT + MEDIA).attr(\"src\", this._currentUrl());\n\n                        if (this.options.autoPlay) {\n                            this.play();\n                        }\n                    }\n                    else if (this._ytmedia) {\n                        if (this._videoOverlay) {\n                            this._videoOverlay.hide();\n                        }\n                        if (this.options.autoPlay) {\n                            this._ytmedia.loadVideoById(this._getMediaId());\n                            this._playStateToggle(true);\n                        }\n                        else {\n                            this._ytmedia.cueVideoById(this._getMediaId());\n                            this._playStateToggle(true);\n                        }\n                    }\n                },\n\n                _createToolbar: function() {\n                    var toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                    if (toolBarElement.length === 0) {\n                        this._toolbarClickHandler = this._toolbarClick.bind(this);\n                        this.wrapper.append(templates.toolBar);\n                        toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                        toolBarElement.width(this.wrapper.find(DOT + MEDIA).width());\n                        this._toolBar = new ui.ToolBar(toolBarElement, {\n                            click: this._toolbarClickHandler,\n                            resizable: false,\n                            items: [\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-play-button\" },\n                                    icon: \"play\",\n                                    fillMode: \"flat\"\n                                },\n                                {\n                                    template: templates.toolBarTime,\n                                    attributes: { \"class\": \"k-mediaplayer-currenttime-wrap\" }\n                                },\n                                {\n                                    type: \"spacer\"\n                                },\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-volume-button\" },\n                                    icon: \"volume-up\",\n                                    fillMode: \"flat\"\n                                },\n                                {\n                                    template: templates.volumeSlider,\n                                    attributes: { \"class\": \"k-mediaplayer-volume-wrap\" }\n                                },\n                                {\n                                    template: templates.qualityDropDown,\n                                    attributes: { \"class\": \"k-mediaplayer-quality-wrap\" }\n                                },\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-fullscreen-button\" },\n                                    icon: \"fullscreen\",\n                                    fillMode: \"flat\"\n                                }\n                            ]\n                        });\n\n                        this._toolBar.wrapper.off(\"keydown\");\n                        toolBarElement.before(templates.slider);\n\n                        this._volumeButton = toolBarElement.find(\".k-volume-button\");\n                        this._fullscreenButton = toolBarElement.find(\".k-fullscreen-button\");\n                        this._volumeButton.attr(\"title\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                        this._volumeButton.attr(\"aria-label\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                        this._fullscreenButton.attr(\"title\", this.options.messages.fullscreen);\n                        this._fullscreenButton.attr(\"aria-label\", this.options.messages.fullscreen);\n\n                        toolBarElement.width(\"auto\");\n                        this._currentTimeElement = toolBarElement.find(\".k-mediaplayer-currenttime\");\n                        this._durationElement = toolBarElement.find(\".k-mediaplayer-duration\");\n                        this._playButton = toolBarElement.find(\".k-play-button\");\n                        this._playButtonSpan = this._playButton.find(STATE_PLAY_SELECTOR);\n\n                        if (this.options.autoPlay) {\n                            this._playStateToggle(true);\n                        }\n\n                        if ( kendo.support.cssFlexbox === false ) {\n                            $([\n                                this._volumeButton[0],\n                                toolBarElement.find(\".k-mediaplayer-volume-wrap\")[0],\n                                toolBarElement.find(\".k-mediaplayer-quality-wrap\")[0],\n                                this._fullscreenButton[0]\n                            ]).wrapAll(\"<div class='k-align-right' />\");\n                        }\n                    }\n                },\n\n                _createDropDown: function() {\n                    var hdIcon = kendo.ui.icon(\"hd\");\n                    var dropDownElement = this.wrapper.find(DOT + VIDEO_QUALITY);\n                    var media = this.media();\n                    if (typeof dropDownElement.data(\"kendoDropDownList\") === \"undefined\") {\n                        this._dropDownSelectHandler = this._dropDownSelect.bind(this);\n                        this._dropDown = new ui.DropDownList(dropDownElement, {\n                            dataTextField: \"quality\",\n                            dataValueField: \"url\",\n                            popup: {\n                                position: \"bottom\",\n                                origin: \"top\",\n                                appendTo: this.wrapper\n                            },\n                            animation: {\n                                open: {\n                                    effects: \"slideIn:up\",\n                                    duration: 1\n                                }\n                            },\n                            select: this._dropDownSelectHandler\n                        });\n\n                        if (media && isArray(media.source)) {\n                            this._dropDown.setDataSource(media.source);\n                            this._dropDown.select(0);\n                        }\n\n                        this._dropDown.wrapper.addClass(\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n                        this._dropDown.wrapper.attr(\"title\", this.options.messages.quality).hide();\n                        this._dropDown.wrapper.find('span[class*=\"i-caret-alt-down\"]')\n                            .replaceWith(hdIcon);\n                        this._dropDown.list.addClass(\"k-quality-list\");\n                    }\n                },\n\n                _dropDownSelect: function(e) {\n                    if (this._currentIndex !== e.item.index()) {\n                        this._currentIndex = e.item.index();\n                        this._setPlayerUrl();\n                    }\n                },\n\n                _toolbarClick: function(e) {\n                    var target = $(e.target).children().first();\n                    var isPaused = target.is(STATE_PLAY_SELECTOR);\n\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    if (target.is(STATE_PLAY_SELECTOR) || target.is(STATE_PAUSE_SELECTOR)) {\n                        if (isPaused) {\n                            this.play();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }\n\n                    if (target.is(FULLSCREEN_ENTER_SELECTOR) || target.is(FULLSCREEN_EXIT_SELECTOR)) {\n                        if (this._isInFullScreen) {\n                            kendo.ui.icon(target, { icon: FULLSCREEN_ENTER });\n                            this.fullScreen(false);\n                        } else {\n                            kendo.ui.icon(target, { icon: FULLSCREEN_EXIT });\n                            this.fullScreen(true);\n                        }\n                    }\n\n                    if (target.is(MUTE_SELECTOR) || target.is(LOW_VOLUME_SELECTOR) || target.is(HIGH_VOLUME_SELECTOR)) {\n                        var muted = this.mute();\n                        this.mute(!muted);\n                    }\n                },\n\n                _sliderDragging: function() {\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    this._isDragging = true;\n                },\n\n                _sliderDragChange: function(e) {\n                    var that = this;\n                    var slider = e.sender;\n                    var tzOffset = timeZoneSec * 1000;\n\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    that._sliderChangeFired = true;\n                    that._isDragging = false;\n\n                    if (!this.options.forwardSeek && slider.value() > this._seekBarLastPosition) {\n                        setTimeout(function() {\n                            slider.value(that._seekBarLastPosition);\n                        }, 1);\n                    } else if (this._youTubeVideo) {\n                        that._ytmedia.seekTo(that._timeToSec(e.value - tzOffset));\n                    } else {\n                        that._media.currentTime = that._timeToSec(e.value - tzOffset);\n                    }\n                    that.trigger(TIMECHANGE);\n                    that._preventPlay = true;\n                },\n\n                _changeVolumeButtonImage: function(volume) {\n                    var volumeButton = this._volumeButton;\n                    var volumeElement = volumeButton.find(\"span\");\n\n                    if (volume === 0) {\n                        kendo.ui.icon(volumeElement, { icon: MUTE });\n                        volumeButton.attr(\"title\", this.options.messages.unmute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.unmute);\n                    } else if (volume > 0 && volume < 51) {\n                        kendo.ui.icon(volumeElement, { icon: LOW_VOLUME });\n                        volumeButton.attr(\"title\", this.options.messages.mute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                    } else {\n                        kendo.ui.icon(volumeElement, { icon: HIGH_VOLUME });\n                        volumeButton.attr(\"title\", this.options.messages.mute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                    }\n                },\n\n                _volumeDragging: function(e) {\n                    if (!this.media()) {\n                        return;\n                    }\n                    this.volume(e.value);\n                    this._changeVolumeButtonImage(e.value);\n                    this.trigger(VOLUMECHANGE);\n                },\n\n                _volumeChange: function(e) {\n                    if (!this.media()) {\n                        return;\n                    }\n                    this.volume(e.value);\n                    this._changeVolumeButtonImage(e.value);\n                    this.trigger(VOLUMECHANGE);\n                },\n\n                _mediaTimeUpdate: function() {\n                    var currentTime = (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : this._media.currentTime;\n                    currentTime = currentTime ? currentTime : 0;\n                    var timeInMs = this._msToTime(currentTime);\n                    this._currentTimeElement.text(kendo.toString(timeInMs, this._timeFormat));\n                    if (!this._isDragging) {\n                        this._seekBarLastPosition = (currentTime + timeZoneSec) * 1000;\n                        this._slider.value(this._seekBarLastPosition);\n                    }\n\n                    return this.isPlaying();\n                },\n\n                _playStateToggle: function(play) {\n                    if (typeof play === \"undefined\") {\n                        play = this._playButtonSpan.is(STATE_PLAY_SELECTOR);\n                    }\n\n                    if (play) {\n                        kendo.ui.icon(this._playButtonSpan, { icon: STATE_PAUSE });\n                        this._playButton.attr(\"title\", this.options.messages.pause);\n                        this._playButton.attr(\"aria-label\", this.options.messages.pause);\n                    }\n                    else {\n                        kendo.ui.icon(this._playButtonSpan, { icon: STATE_PLAY });\n                        this._playButton.attr(\"title\", this.options.messages.play);\n                        this._playButton.attr(\"aria-label\", this.options.messages.play);\n                    }\n                },\n\n                _mediaEnded: function() {\n                    this._playStateToggle(false);\n                    this._currentTimeElement.text(kendo.toString(this._msToTime(0), this._timeFormat));\n                    this._slider.value((0 + timeZoneSec) * 1000);\n                    this.trigger(END);\n                },\n\n                _mediaPlay: function() {\n                    this.trigger(PLAY);\n                },\n\n                _mediaReady: function() {\n                    this.trigger(READY);\n                },\n\n                _mediaDurationChange: function() {\n                    var durationTime = this._msToTime((this._youTubeVideo) ? this._ytmedia.getDuration() : this._media.duration);\n\n                    this._timeFormat = durationTime.getHours() === 0 ? timeFormats.shortTime : timeFormats.longTime;\n\n                    this._durationElement.text(kendo.toString(durationTime, this._timeFormat));\n                    this._slider.setOptions({\n                        min: baseTime.getTime(),\n                        max: durationTime.getTime()\n                    });\n\n                    if (!this._isFirstRun) {\n                        this._resetTime();\n                        this._isFirstRun = true;\n                    }\n                },\n\n                _createYoutubePlayer: function() {\n                    this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                    this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n\n                    this.wrapper.prepend(templates.youtubePlayer);\n                    this._ytPlayer = this.wrapper.find(DOT + YTPLAYER)[0];\n                    $(this._ytPlayer)\n                        .css({\n                            width: this.wrapper.width(),\n                            height: this.wrapper.height()\n                        });\n\n                    if (!window.YT || !window.YT.Player) {\n                        if (!window.onYouTubeIframeAPIReadyRegister) {\n                            window.onYouTubeIframeAPIReadyRegister = [];\n                            $.getScript(\"https://www.youtube.com/iframe_api\");\n                            window.onYouTubeIframeAPIReady =\n                                function() {\n                                    if (window.onYouTubeIframeAPIReadyRegister) {\n                                        for (var i = 0; i < window.onYouTubeIframeAPIReadyRegister.length; i++) {\n                                            window.onYouTubeIframeAPIReadyRegister[i]._youtubeApiReady();\n                                        }\n                                    }\n                                    window.onYouTubeIframeAPIReadyRegister.length = 0;\n                                    window.onYouTubeIframeAPIReadyRegister = undefined$1;\n                                };\n                        }\n                        window.onYouTubeIframeAPIReadyRegister[window.onYouTubeIframeAPIReadyRegister.length] = this;\n                    }\n                    else {\n                        this._configurePlayer();\n                    }\n                },\n\n                _poll: function(name, callback, interval, context) {\n                    var that = this;\n\n                    if (that._timers[name] !== null) {\n                        clearTimeout(that._timers[name]);\n                    }\n\n                    that._timers[name] = setTimeout((function(context) {\n                        return function callLater() {\n                            if (callback.call(context)) {\n                                that._timers[name] = setTimeout(callLater, interval);\n                            }\n                        };\n                    })(context), interval);\n\n                    return that._timers[name];\n                },\n\n                _youtubeApiReady: function() {\n                    this._configurePlayer();\n                },\n\n                _configurePlayer: function() {\n                    var vars = {\n                        'autoplay': +this.options.autoPlay,\n                        'wmode': 'transparent',\n                        'controls': 0,\n                        'rel': 0,\n                        'showinfo': 0\n                    };\n\n                    this._onYouTubePlayerReady = this._onYouTubePlayerReady.bind(this);\n                    window.onYouTubePlayerReady = this._onYouTubePlayerReady;\n                    this._onPlayerStateChangeHandler = this._onPlayerStateChange.bind(this);\n                    window.onPlayerStateChange = this._onPlayerStateChange;\n\n\n                    var player = new window.YT.Player(this.wrapper.find(DOT + YTPLAYER)[0], {\n                        height: this.wrapper.height(),\n                        width: this.wrapper.width(),\n                        videoId: this._getMediaId(),\n                        playerVars: vars,\n                        events: {\n                            'onReady': this._onYouTubePlayerReady,\n                            'onStateChange': this._onPlayerStateChangeHandler\n                        }\n                    });\n                },\n\n                _onYouTubePlayerReady: function(event) {\n                    this._ytmedia = event.target;\n                    this._ytmedia.getIframe().style.width = \"100%\";\n                    this._ytmedia.getIframe().style.height = \"100%\";\n                    this._youTubeVideo = true;\n                    this._mediaDurationChangeHandler();\n\n                    if (this.options.autoPlay) {\n                        this._playStateToggle(true);\n                        this._ytmedia.loadVideoById(this._getMediaId());\n                    }\n                    else {\n                        this._ytmedia.cueVideoById(this._getMediaId());\n                    }\n\n                    if (this.options.mute) {\n                        this.mute(true);\n                    }\n\n                    this.trigger(READY);\n                },\n\n                _updateTitle: function() {\n                    this.titlebar().text(this.media().title || this.media().source);\n                },\n\n                _onPlayerStateChange: function(event) {\n\n                    if (event.data === 0) {\n                        this._slider.value(0);\n                        this._paused = false;\n                        this._playStateToggle(true);\n                        this.trigger(END);\n                        if (this.options.autoRepeat) {\n                            this.play();\n                        }\n                    }\n                    else if (event.data === 1) {\n                        this._mediaDurationChange();\n                        this._ytmedia.setVolume(this.volume());\n                        if (this._sliderChangeFired) {\n                            this._sliderChangeFired = false;\n                        } else {\n                            this._uiDisplay(false);\n                        }\n                        this.trigger(PLAY);\n                        this._playStateToggle(true);\n\n                        this._poll(\"progress\", this._mediaTimeUpdate, 500, this);\n                        this._paused = false;\n                    }\n                    else if (event.data === 2) {\n                        if (!this._paused) {\n                            this._uiDisplay(true);\n                            this._playStateToggle(false);\n                            this.trigger(PAUSE);\n                            this._paused = true;\n                        }\n                    }\n                },\n\n                _getMediaId: function() {\n                    var result = this._currentUrl();\n                    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n                    var match = result.match(regExp);\n\n                    if (match && match[7].length === 11) {\n                        result = match[7];\n                    }\n\n                    return result;\n                },\n\n                _mouseClick: function() {\n                    if (this.isPaused()) {\n                        this.play();\n                    } else {\n                        this.pause();\n                    }\n                },\n\n                _initializePlayer: function() {\n                    if (!this._mouseMoveHandler) {\n                        this._mouseMoveHandler = this._mouseMove.bind(this);\n                        this._mouseInHandler = this._mouseIn.bind(this);\n                        this._mouseOutHandler = this._mouseOut.bind(this);\n\n                        $(this.wrapper)\n                            .on(\"mouseenter\" + ns, this._mouseInHandler)\n                            .on(\"mouseleave\" + ns, this._mouseOutHandler)\n                            .on(\"mousemove\" + ns, this._mouseMoveHandler);\n                    }\n\n                    if (!this._ytmedia && this._youTubeVideo) {\n                        this._createYoutubePlayer();\n                    }\n                    else if (!this._media && !this._youTubeVideo) {\n                        this._createHtmlPlayer();\n                    }\n                },\n\n                _createHtmlPlayer: function() {\n                    if (!this._videoOverlay) {\n                        this._mouseClickHanlder = this._mouseClick.bind(this);\n                        this.wrapper.append(\"<div class='\" + OVERLAY + \"'></div>\");\n                        this._videoOverlay = this.wrapper.find(\".k-mediaplayer-overlay\")\n                            .on(\"click\" + ns, this._mouseClickHanlder);\n                    }\n\n                    this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                    this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n                    this._mediaEndedHandler = this._mediaEnded.bind(this);\n                    this._mediaCanPlayHandler = this._mediaReady.bind(this);\n                    this._mediaPlayHandler = this._mediaPlay.bind(this);\n                    this._videoOverlay.after(templates.htmlPlayer);\n                    this._media = this.wrapper.find(DOT + MEDIA)[0];\n                    $(this._media)\n                        .css({\n                            width: \"100%\",\n                            height: \"100%\"\n                        });\n\n                    if (this.options.mute) {\n                        this.mute(true);\n                    }\n\n                    this._media.ontimeupdate = this._mediaTimeUpdateHandler;\n                    this._media.ondurationchange = this._mediaDurationChangeHandler;\n                    this._media.oncanplay = this._mediaCanPlayHandler;\n                    this._media.onplay = this._mediaPlayHandler;\n                    this._media.onended = this._mediaEndedHandler;\n                    this._media.loop = this.options.autoRepeat;\n                },\n\n                _mouseIn: function() {\n                    this._uiDisplay(true);\n                },\n\n                _mouseOut: function() {\n                    this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n                },\n\n                _mouseIdle: function() {\n                    this._uiDisplay(false);\n                    return false;\n                },\n\n                _mouseMove: function() {\n                    if (!(this._titleBar.is(':animated') || this._toolBar.element.is(':animated') || this._slider.wrapper.is(':animated'))) {\n                        this._uiDisplay(true);\n                    }\n                    this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n                },\n\n                _uiDisplay: function(state) {\n                    var animationSpeed = 'slow';\n                    var uiElements = this._titleBar\n                        .add(this._toolBar.element.parent());\n\n                    if (state) {\n                        uiElements.fadeIn(animationSpeed);\n                    }\n                    else {\n                        uiElements.fadeOut(animationSpeed);\n                        if (this.options.navigatable) {\n                            this.wrapper.trigger(\"focus\");\n                        }\n                    }\n                },\n\n                setOptions: function(options) {\n                    Widget.fn.setOptions.call(this, options);\n                },\n\n                destroy: function() {\n                    Widget.fn.destroy.call(this);\n\n                    if (!this.isPaused()) {\n                        this.pause();\n                    }\n\n                    this.element.off(ns);\n                    this.element.find(DOT + OVERLAY).off(ns);\n                    this._timers = null;\n                    this._mouseMoveHandler = null;\n                    this._mouseOutHandler = null;\n                    this._mouseInHandler = null;\n                    this._mouseClickHanlder = null;\n                    this._keyDownHandler = null;\n                    this._fullscreenHandler = null;\n\n                    this._toolbarClickHandler = null;\n                    this._sliderDragChangeHandler = null;\n                    this._sliderDraggingHandler = null;\n                    this._volumeDraggingHandler = null;\n                    this._volumeChangeHandler = null;\n                    this._youtubeApiReadyHandler = null;\n                    this._onYouTubePlayerReady = null;\n                    this._onPlayerStateChangeHandler = null;\n                    this._dropDownSelectHandler = null;\n\n                    if (this._youTubeVideo) {\n                        this._ytmedia.destroy();\n                    }\n                    else {\n                        this._media.ontimeupdate = this._mediaTimeUpdateHandler = null;\n                        this._media.ondurationchange = this._mediaDurationChangeHandler = null;\n                        this._media.oncanplay = this._mediaCanPlayHandler = null;\n                        this._media.onplay = this._mediaPlayHandler = null;\n                        this._media.onended = this._mediaEndedHandler = null;\n                        this._media.src = \"\";\n                        this._media.remove();\n                    }\n\n                    this._mouseMoveTimer = null;\n                    clearTimeout(this._mouseMoveTimer);\n\n                    kendo.destroy(this.element);\n                },\n\n                seek: function(ms) {\n                    if (typeof ms === 'undefined') {\n                        return 1000 * (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : (this._media ? this._media.currentTime : 0);\n                    }\n                    var seconds = ms / 1000;\n                    if (this._youTubeVideo) {\n                        if (seconds + 3 >= this._ytmedia.getDuration() | 0) {\n                            //avoid infinite bad request loop in youtube player.\n                            this._ytmedia.seekTo(this._ytmedia.getDuration() - 3 | 0, true);\n                        } else {\n                            this._ytmedia.seekTo(seconds, true);\n                        }\n                    } else {\n                        this._media.currentTime = seconds;\n                    }\n\n                    return this;\n                },\n\n                play: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.playVideo();\n                    } else {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(false);\n                        }\n                        this._media.play();\n                    }\n                    this._paused = false;\n\n                    this._playStateToggle(true);\n\n                    return this;\n                },\n\n                stop: function() {\n                    if (this._youTubeVideo && this._ytmedia) {\n                        this._ytmedia.stopVideo();\n                    } else if (this._media && !this._youTubeVideo) {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(true);\n                        }\n                        this._media.pause();\n                        this._media.currentTime = 0;\n                    }\n                    this._paused = true;\n\n                    this._playStateToggle(false);\n                    return this;\n                },\n\n                pause: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.pauseVideo();\n                    } else {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(true);\n                        }\n                        this._media.pause();\n                    }\n                    this._paused = true;\n                    this._playStateToggle(false);\n                    this.trigger(PAUSE);\n                    return this;\n                },\n\n                toolbar: function() {\n                    return this._toolBar;\n                },\n\n                dropdown: function() {\n                    return this._dropDown;\n                },\n\n                titlebar: function() {\n                    return this._titleBar;\n                },\n\n                fullScreen: function(enterFullScreen) {\n                    if (typeof enterFullScreen === 'undefined') {\n                        return this._isInFullScreen || false;\n                    }\n                    var element = this.element.get(0);\n                    if (enterFullScreen) {\n                        // Handles the case when the action is triggered by code and not by user iteraction\n                        this.element.addClass(\"k-mediaplayer-fullscreen\");\n                        if (element.requestFullscreen) {\n                            element.requestFullscreen();\n                        } else if (element.webkitRequestFullscreen) {\n                            element.webkitRequestFullscreen();\n                        } else if (element.mozRequestFullScreen) {\n                            element.mozRequestFullScreen();\n                        } else if (element.msRequestFullscreen) {\n                            element.msRequestFullscreen();\n                        }\n                        this._isInFullScreen = true;\n                    } else {\n\n                        if (document.cancelFullscreen) {\n                            document.cancelFullscreen();\n                        } else if (document.webkitCancelFullScreen) {\n                            document.webkitCancelFullScreen();\n                        } else if (document.mozCancelFullScreen) {\n                            document.mozCancelFullScreen();\n                        } else if (document.msCancelFullscreen) {\n                            document.msCancelFullscreen();\n                        } else if (document.exitFullscreen) {\n                            document.exitFullscreen();\n                        } else if (document.msExitFullscreen) {\n                            document.msExitFullscreen();\n                        }\n                        // Handles the case when the action is triggered by code and not by user iteraction\n                        this.element.removeClass(\"k-mediaplayer-fullscreen\");\n                        this._isInFullScreen = false;\n                    }\n                    this._slider.resize();\n                },\n\n                volume: function(value) {\n                    if (typeof value === 'undefined') {\n                        return (typeof this._volume !== 'undefined') ? this._volume : this._volume = this.options.volume;\n                    }\n                    this._volume = value;\n                    this.mute(value <= 0);\n\n                    if (this._youTubeVideo) {\n                        this._ytmedia.setVolume(this._volume);\n                    } else {\n                        this._media.volume = this._volume / 100;\n                    }\n\n                    this._volumeSlider.value(value);\n                },\n\n                mute: function(muted) {\n                    var currentState = this._youTubeVideo ? (this._ytmedia && this._ytmedia.isMuted()) : (this._media && this._media.muted);\n                    if (typeof muted === 'undefined' || muted === currentState) {\n                        return currentState;\n                    }\n                    if (this._youTubeVideo) {\n                        if (muted) {\n                            this._ytmedia.mute();\n                        }\n                        else {\n                            this._ytmedia.unMute();\n                        }\n                    }\n                    else {\n                        this._media.muted = muted;\n                    }\n\n                    if (muted) {\n                        this._volumeSlider.value(0);\n                    }\n                    else {\n                        this._volumeSlider.value((this._media && this._media.volume * 100) || (this._ytmedia && this._ytmedia.getVolume()));\n                    }\n                    this.trigger(VOLUMECHANGE);\n                    this._changeVolumeButtonImage(this._volumeSlider.value());\n                },\n\n                isEnded: function() {\n                    if (this._youTubeVideo) {\n                        return this._ytmedia.getPlayerState() === 0;\n                    } else {\n                        return this._media.ended;\n                    }\n                },\n\n                media: function(value) {\n                    var dropdown = this.dropdown();\n                    if (typeof value === 'undefined') {\n                        return (typeof this._mediaData !== 'undefined') ? this._mediaData : this._mediaData = this.options.media;\n                    }\n\n                    if (isArray(value.source)) {\n                        dropdown.setDataSource(value.source);\n                        dropdown.wrapper.show();\n                    }\n                    else {\n                        dropdown.wrapper.hide();\n                    }\n\n                    this._mediaData = value;\n\n                    this._updateTitle();\n\n                    this._setPlayerUrl();\n                },\n\n                isPaused: function() {\n                    return this._paused;\n                },\n\n                isPlaying: function() {\n                    return !this.isEnded() && !this._paused;\n                },\n\n                _aria: function() {\n                    this.wrapper.attr(\"role\", \"region\");\n                    //this.wrapper.attr(\"aria-labelledby\", \"mediaplayerTitleBar\");\n                    //add onfocus with aria active descendant\n                },\n\n                _navigatable: function() {\n                    this._fullscreenHandler = this._fullscreen.bind(this);\n                    $(document)\n                        .on(\"webkitfullscreenchange mozfullscreenchange fullscreenchange\" + ns, this._fullscreenHandler);\n\n                    if (this.options.navigatable) {\n                        this.wrapper.attr(\"tabIndex\", 0);\n                        this._keyDownHandler = this._keyDown.bind(this);\n                        this.wrapper\n                            .on(\"keydown\" + ns, this._keyDownHandler);\n                    }\n                },\n\n                _fullscreen: function() {\n                    var isFullScreen = document.fullScreen ||\n                        document.mozFullScreen ||\n                        document.webkitIsFullScreen,\n                        fullscreenSpan = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                    this._uiDisplay(true);\n                    this._slider.resize();\n\n                    if (!isFullScreen) {\n                        kendo.ui.icon(fullscreenSpan, { icon: FULLSCREEN_ENTER });\n                        this.fullScreen(false);\n                    }\n                },\n\n                _keyDown: function(e) {\n                    e.preventDefault();\n                    var fsButton = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                    if (e.keyCode === keys.SPACEBAR) {\n                        if (this.isPlaying()) {\n                            this.pause();\n                        }\n                        else {\n                            this.play();\n                        }\n                    }\n                    else if (e.keyCode === keys.ENTER && !this._isInFullScreen) {\n                        kendo.ui.icon(fsButton, { icon: FULLSCREEN_EXIT });\n                        this.fullScreen(true);\n                    }\n                    else if (e.keyCode === 77) {\n                        var muted = this.mute();\n                        this.mute(!muted);\n                    }\n                    else if (e.keyCode === keys.ESC && this._isInFullScreen) {\n                        kendo.ui.icon(fsButton, { icon: FULLSCREEN_ENTER });\n                        this.fullScreen(false);\n                    }\n                },\n\n                _error: function() {\n                },\n\n                _progress: function() {\n                }\n\n            });\n\n            ui.plugin(MediaPlayer);\n\n        })(window.kendo.jQuery);\n\n}));\n"]}