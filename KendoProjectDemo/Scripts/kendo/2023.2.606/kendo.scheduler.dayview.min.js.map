{"version":3,"file":"kendo.scheduler.dayview.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","ui","encode","htmlEncode","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","INVERSE_COLOR_CLASS","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","ref","start","end","title","format","replace","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","isMobile","toString","ALLDAY_EVENT_WRAPPER_TEMPLATE","event","ariaLabel","attr","resources","tail","middle","icon","isException","isRecurring","showDelete","messages","head","resizable","singleDay","EVENT_WRAPPER_TEMPLATE","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","getTime","idx","splice","uid","push","MultiDayView","init","options","that","this","fn","call","name","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","css","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","container","appendTo","text","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","interval","_timeSlotInterval","verticalViews","tableRows","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","allDay","showFullDay","showWorkDay","ongoingEvents","cssClass","enabled","settings","Template","templateSettings","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touch","initialTouch","is","_layout","dates","columns","rows","column","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footerItems","items","_defaultTools","todayMobile","fulldayMobile","fulldayDesktop","action","after","msStart","msMin","msMax","msMajorInterval","msInterval","startDay","html","majorTickDivider","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","tmplDate","classes","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","_footer","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","innerHeight","_timeSlotIndex","_slotIndex","_dateSlotIndex","slots","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","columnEvents","eventRightOffset","eventElements","slotEvents","tableEl","table","contentEl","columnWidth","createColumns","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","resize","eventStartTime","_time","eventEndTime","eventStartDate","eventEndDate","eventResources","apply","data","ns","_formatEventAriaLabel","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","slotStart","firstSlot","slotEnd","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","newStart","newEnd","dateRange","daySlotRanges","_inverseEventColor","rangeCount","occurrence","render","_cachedEvents","remove","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","_ongoingEvents","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","endMilliseconds","newDateStart","newDateEnd","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","jQuery"],"sources":["kendo.scheduler.dayview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.scheduler.view', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.dayview\",\n        name: \"Scheduler Day View\",\n        category: \"web\",\n        description: \"The Scheduler Day View\",\n        depends: [ \"scheduler.view\", \"icons\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            setTime = kendo.date.setTime,\n            SchedulerView = ui.SchedulerView,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            getDate = kendo.date.getDate,\n            MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n            MS_PER_DAY = kendo.date.MS_PER_DAY,\n            CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n            CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            BORDER_SIZE_COEFF = 0.8666,\n            getMilliseconds = kendo.date.getMilliseconds,\n            NS = \".kendoMultiDayView\";\n\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template(function (ref) {\n            var start = ref.start;\n            var end = ref.end;\n            var title = ref.title;\n\n            return \"<div title=\\\"(\" + (kendo.format(\"{0:t} - {1:t}\", start, end)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template k-event-time\\\">\" + (encode(kendo.format(\"{0:t} - {1:t}\", start, end))) + \"</div>\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template(function (ref) {\n                var start = ref.start;\n                var title = ref.title;\n\n                return \"<div title=\\\"(\" + (kendo.format(\"{0:t}\", start)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DATA_HEADER_TEMPLATE = kendo.template(function (ref) {\n                var isMobile = ref.isMobile;\n                var date = ref.date;\n\n                return (\"<span class='k-link k-nav-day'>\" + (isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd')) + \"</span>\");\n        }),\n\n            ALLDAY_EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? (\"style=\\\"background-color:\" + (event.resources[0].color) + \"; border-color: \" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                    '<span class=\"k-event-actions\">' +\n                        (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-left\") : '') +\n                        (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\">\" + (kendo.ui.icon(\"x\")) + \"</a>\") : '') +\n                        (event.head || event.middle ? kendo.ui.icon(\"caret-alt-right\") : '') +\n                    '</span>' +\n                    (event.resizable && !event.singleDay && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                    (event.resizable && !event.singleDay && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n                '</div>'; },\n\n            EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? (\"style=\\\"background-color:\" + (event.resources[0].color) + \"; border-color: \" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                     '<span class=\"k-event-actions\">' +\n                        (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\">\" + (kendo.ui.icon(\"x\")) + \"</a>\") : '') +\n                    '</span>' +\n                    '<span class=\"k-event-top-actions\">' +\n                        (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-up\") : '') +\n                    '</span>' +\n                    '<span class=\"k-event-bottom-actions\">' +\n                        (event.head || event.middle ? kendo.ui.icon(\"caret-alt-down\") : '') +\n                    '</span>' +\n                    (event.resizable && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-n\"></span>' : '') +\n                    (event.resizable && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-s\"></span>' : '') +\n                '</div>'; };\n\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n\n            //this handles all day event which is over multiple slots but starts\n            //after one of the time events\n            if (isAllDay && lastEvent &&\n                getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                    var idx = events.length - 1;\n                    for ( ; idx > -1; idx --) {\n                        if (events[idx].isAllDay ||\n                            getDate(events[idx].start.startDate()).getTime() < startDate) {\n                                break;\n                            }\n                    }\n\n                    events.splice(idx + 1, 0, {\n                        element: element,\n                        isAllDay: true,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                } else {\n                    events.push({\n                        element: element,\n                        isAllDay: isAllDay,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                }\n        }\n\n        function getWorkDays(options) {\n            if (options.workDays && options.workDays.length) {\n                return options.workDays;\n            }\n\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n            workDays.push(dayIndex);\n\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6 ) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n\n        var MultiDayView = SchedulerView.extend({\n            init: function(element, options) {\n                var that = this;\n\n                SchedulerView.fn.init.call(that, element, options);\n\n                that.title = that.options.title || that.options.name;\n\n                that._workDays = getWorkDays(that.options);\n\n                that._templates();\n\n                that._editable();\n\n                that.calculateDateRange();\n\n                that._groups();\n\n                that._currentTime(true);\n            },\n\n            _currentTimeMarkerUpdater: function() {\n                this._updateCurrentTimeMarker(new Date());\n            },\n\n            _updateCurrentTimeMarker: function(currentTime) {\n                var options = this.options,\n                    currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                    elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n\n                    if (options.dataSource && timezone) {\n                       var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                       currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n\n                currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n                currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n                var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n                var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n                if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                    if (this._isRtl) {\n                        position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                    } else {\n                        position = lastTimesCell.position().left;\n                    }\n                }\n\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n\n                    if (!currentGroup) {\n                        return;\n                    }\n\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                    if (ranges.length === 0) {\n                        return;\n                    }\n\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n\n                    if (slotElement) {\n                        var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                        var timesTableMarkerCss = {};\n\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                        } else {\n                            timesTableMarkerCss.left = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                        }\n\n                        if (!timesTableMarkerWidth) {\n                            timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                        }\n\n                        timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                        timesTableMarker.css(timesTableMarkerCss);\n\n                        var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                        contentMarker.css({\n                            top: markerTopPosition,\n                            height: \"1px\",\n                            right: 0,\n                            left: 0\n                        });\n                    }\n                }\n            },\n\n            _currentTime: function(setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                    that._currentTimeMarkerUpdater();\n\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                    }\n                }\n            },\n\n            _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n\n                this._removeResizeHint();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n\n                            hint = SchedulerView.fn._createResizeHint.call(this,\n                                slot.offsetLeft,\n                                top,\n                                width,\n                                height\n                            );\n\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            start.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                       this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n\n                var format = \"t\";\n                var container = this.content;\n\n                if (multiday) {\n                    format = \"M/dd\";\n                    container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n\n                this._resizeHint.appendTo(container);\n\n                this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n                this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n                this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n\n            _updateMoveHint: function(event, groupIndex, distance) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var start = kendo.date.toUtcTime(event.start) + distance;\n\n                var end = start + event.duration();\n\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n                start = kendo.timezone.toLocalDate(start);\n\n                end = kendo.timezone.toLocalDate(end);\n\n                this._removeMoveHint(event.uid);\n\n                if (!multiday &&\n                    getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                    (end < this._end().getTime()) &&\n                    getMilliseconds(end) !== 0 &&\n                    ranges.length > 1) {\n                        ranges.pop();\n                }\n\n                var eventHint = $();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 2;\n\n                            hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                            if (event.inverseColor) {\n                                hint.addClass(INVERSE_COLOR_CLASS);\n                            }\n\n                            this._appendMoveHint(hint, css);\n                            eventHint = eventHint.add(hint);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                           css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n\n                        if (multiday) {\n                            css.width = range.innerWidth() - 2;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 2;\n                        }\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                }\n\n                var content = this.content;\n\n                if (multiday) {\n                    content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n\n                eventHint.appendTo(content);\n            },\n\n            _appendMoveHint: function(hint, css) {\n                hint.addClass(\"k-event-drag-hint\");\n\n                hint.css(css);\n\n                this._moveHint = this._moveHint.add(hint);\n           },\n\n           _slotByPosition: function(x, y) {\n               var slot, offset;\n\n               if (this._isVerticallyGrouped()) {\n                   offset = this.content.offset();\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               } else {\n                   offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n               }\n\n               if (offset) {\n                   x -= offset.left;\n                   y -= offset.top;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               var group;\n               var groupIndex;\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               if (offset) {\n                   x += offset.left;\n                   y += offset.top;\n               }\n\n               offset = this.content.offset();\n\n               x -= offset.left;\n               y -= offset.top;\n\n               if (!this._isVerticallyGrouped()) {\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.timeSlotByPosition(x, y);\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               return null;\n           },\n\n           _groupCount: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                              return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n\n            _columnCountInResourceView: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                         return this._rowCountForLevel(0);\n                    } else {\n                         return this._columnCountForLevel(0);\n                    }\n                }\n\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n\n            _timeSlotGroups: function(groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n                var group, time, rowIndex, cellIndex;\n                var rowCount = tableRows.length;\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    rowIndex = rowMultiplier * rowCount;\n\n                  while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                 timeIndex++;\n                            }\n                        }\n\n                        time += interval;\n                        rowIndex ++;\n                    }\n                }\n            },\n\n            _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n                  var cell = cells[cellIndex];\n                  var collection = group.getTimeSlotCollection(timeIndex);\n                  var currentDate = this._dates[timeIndex];\n                  if (!currentDate || !cell) {\n                      return;\n                  }\n                  var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                  var start = currentTime + time;\n                  var end = start + interval;\n\n                  collection.addTimeSlot(cell, start, end);\n            },\n\n             _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                    var cell = cells[cellIndex];\n                    var start = this._dates[cellCount];\n                    if (!start) {\n                        return;\n                    }\n                    var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                    collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n\n            _daySlotGroups: function(groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find(\".k-scheduler-header-all-day\");\n                } else {\n                    tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n\n            _groups: function() {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n\n                this.groups = [];\n\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        if (this._dates[columnIndex]) {\n                            view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                        }\n                    }\n\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n\n                this._timeSlotGroups(groupCount, columnCount);\n\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n\n            options: {\n                name: \"MultiDayView\",\n                selectedDateFormat: \"{0:D}\",\n                selectedShortDateFormat: \"{0:d}\",\n                selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n                allDaySlot: true,\n                showWorkHours: false,\n                title: \"\",\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: function (ref) {\n                    var date = ref.date;\n\n                    return (\"<span>\" + (kendo.toString(date, 't')) + \"</span>\");\n        },\n                minorTimeHeaderTemplate: function () { return \"&#8203;\"; },\n                groupHeaderTemplate: function (ref) {\n                    var text = ref.text;\n\n                    return text;\n        },\n                slotTemplate: function () { return \"&nbsp;\"; },\n                allDaySlotTemplate: function () { return \"&nbsp;\"; },\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: {\n                    command: \"workDay\"\n                },\n                messages: {\n                    allDay: \"all day\",\n                    showFullDay: \"Show full day\",\n                    showWorkDay: \"Show business hours\"\n                },\n                currentTimeMarker: {\n                     updateInterval: 10000,\n                     useLocalTimezone: true\n                },\n                ongoingEvents: {\n                    cssClass: null,\n                    enabled: true,\n                    updateInterval: 60000\n                },\n                // a hidden option that provides us a fallback to the previous behaviour\n                // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n                enforceAllDaySlot: false\n            },\n\n            events: [\"remove\", \"add\", \"edit\"],\n\n            _templates: function() {\n                var options = this.options,\n                    settings = extend({}, kendo.Template, options.templateSettings);\n\n                this.allDayEventTemplate = kendo.template(ALLDAY_EVENT_WRAPPER_TEMPLATE);\n                this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n\n            _editable: function() {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n\n            _mouseEditable: function() {\n                var that = this;\n                that.element.on(\"click\" + NS, \".k-event a:has(.k-i-x),.k-event a:has(.k-svg-i-x)\", function(e) {\n                    that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n\n                if (that.options.editable.create !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                        if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n                        e.preventDefault();\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                        that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                        e.preventDefault();\n                    });\n                }\n            },\n\n            _touchEditable: function() {\n                var that = this;\n                var threshold = 0;\n\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: \".k-scheduler-content td\",\n                        useClickAsTap: !kendo.support.browser.edge,\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                                var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                                var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                                }\n\n                                e.preventDefault();\n                            }\n                        }\n                    });\n\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-scheduler-header-all-day td\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-event\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var eventElement = $(e.target).closest(\".k-event\");\n                            var touchElement = $(e.touch.initialTouch);\n\n                            if (touchElement.is(\".k-i-x,.k-svg-i-x\")) {\n                                that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            } else if (!eventElement.hasClass(\"k-event-active\")) {\n                                that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n\n            _layout: function(dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n\n                    column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = \"k-today\";\n                    }\n\n                    columns.push(column);\n                }\n\n                var resources = this.groupedResources;\n\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay, allDay: true,\n                        cellContent: function(idx) {\n                            var groupIndex = idx;\n\n                            idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                            return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n\n                this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                    };\n\n                    rows.push(row);\n                });\n\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                          if (byDate) {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                          } else {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                          }\n                    }\n                }\n\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n\n            toggleFullDay: function() {\n                var options = this.options;\n\n                this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n            },\n\n            _footerItems: function() {\n                var that = this,\n                    items = [],\n                    options = this.options,\n                    command = options.footer.command;\n\n                if (that._isMobile()) {\n                    items.push(that._defaultTools.todayMobile);\n                }\n\n                if (command && command === \"workDay\") {\n                    if (that._isMobile()) {\n                        items.push(that._defaultTools.fulldayMobile);\n                    } else {\n                        items.push(that._defaultTools.fulldayDesktop);\n                    }\n                }\n\n                return items;\n            },\n\n            _forTimeRange: function(min, max, action, after) {\n                min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n                max = toInvariantTime(max);\n\n                var that = this,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    minorTickCount = that.options.minorTickCount,\n                    msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                    msInterval = msMajorInterval / minorTickCount || 1,\n                    start = new Date(+min),\n                    startDay = start.getDate(),\n                    msStart,\n                    idx = 0, length,\n                    html = \"\";\n\n                length = MS_PER_DAY / msInterval;\n\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval);\n                }\n\n                length = Math.round(length);\n\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval),\n                        isMajorTickRow = majorTickDivider === 0,\n                        isMiddleRow = majorTickDivider < minorTickCount - 1,\n                        isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                    setTime(start, msInterval, false);\n                }\n\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n\n                if (after) {\n                    html += after(start);\n                }\n\n                return html;\n            },\n\n            _content: function(dates) {\n                var that = this;\n                var html = '';\n\n                html += '<tbody>';\n\n                html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n                html += '</tbody>';\n\n                this.content.find(\"table\").append(html);\n            },\n\n            _virtualContent: function(rowLevels, columnLevels) {\n                var that = this;\n                var html = '';\n                var dates = that._dates;\n\n                html += that._renderRows(dates, rowLevels, columnLevels);\n\n                that.content.find(\"table tbody\").append(html);\n            },\n\n            _renderRows: function(dates, rowLevels, columnLevels) {\n                var that = this;\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                var columnCount = dates.length;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var resources = this.groupedResources;\n                var html = '';\n\n                if (resources.length) {\n                    var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                    rowCount = levels.rowCount;\n                    groupsCount = levels.groupsCount;\n                }\n\n                var appendRow = function(date, majorTick, middleRow) {\n                    var content = \"\";\n                    var groupIdx = 0;\n                    var idx, length;\n\n                    content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                            }\n                            if (isVerticalGroupped) {\n\n                                break;\n                            }\n                        }\n                    } else {\n                         for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                         }\n                    }\n\n                    content += \"</tr>\";\n\n                    return content;\n                };\n\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                            dateID++;\n                    }\n                }\n\n                return html;\n            },\n\n            _recalculateLevels: function(rowLevels, columnLevels) {\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var groupsCount = 1;\n                var rowCount = 1;\n\n                if (isVerticalGroupped) {\n                    rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                    } else {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                    }\n                }\n\n                return {\n                    rowCount: rowCount,\n                    groupsCount: groupsCount\n                };\n            },\n\n            _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n                var that = this;\n                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                var byDate = that._isGroupedByDate();\n                var dateGroupIndex = byDate ? 0 : groupIndex;\n                var allDaySlotTemplate = that.allDaySlotTemplate;\n\n                var resources = function() {\n                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                };\n\n                if (byDate) {\n                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                    }\n                } else {\n                    for (var idx = 0; idx < dates.length; idx++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                    }\n                }\n\n                return result + \"</tr>\";\n            },\n\n            _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = \"\";\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n                var resources = function(groupIndex) {\n                    return function() {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                    !this._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n                content += \"</td>\";\n                return content;\n            },\n\n            _isWorkDay: function(date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            _render: function(dates) {\n                var that = this;\n\n                dates = dates || [];\n\n                this._dates = dates;\n\n                this._startDate = dates[0];\n\n                this._endDate = dates[(dates.length - 1) || 0];\n\n                this.createLayout(this._layout(dates));\n\n                this._content(dates);\n\n                this._footer();\n\n                this.refreshLayout();\n\n                if (this._isVirtualized()) {\n                    this._tryRenderContent();\n                }\n\n                var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n\n                that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                    var th = $(e.currentTarget).closest(\"th\");\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = outerHeight(th);\n\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = outerWidth(that.times);\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = outerHeight(that.datesHeader);\n                        }\n                    }\n\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                    that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n                });\n            },\n\n            startTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n\n            endTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n\n            startDate: function() {\n                return this._startDate;\n            },\n\n            endDate: function() {\n                return this._endDate;\n            },\n\n            _end: function(isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n                if (isAllDay) {\n                    time = 0;\n                }\n\n                return new Date(this._endDate.getTime() + time);\n            },\n\n            nextDate: function() {\n                return kendo.date.nextDay(this.endDate());\n            },\n\n            previousDate: function() {\n                return kendo.date.previousDay(this.startDate());\n            },\n\n            calculateDateRange: function() {\n                this._render([this.options.date]);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n\n                if (that.element) {\n                    that.element.off(NS);\n                }\n\n                SchedulerView.fn.destroy.call(this);\n\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n\n            inRange: function(options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n\n                if (options.isAllDay) {\n                    return inRange;\n                }\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n                return inRange && startTime <= start && end <= endTime;\n            },\n\n            selectionByElement: function(cell) {\n                var offset = cell.offset();\n                // The magical number 5 is to buffer properly the height of the cell for all browsers\n                var height = Math.round(cell.innerHeight()) - 5;\n\n                return this._slotByPosition(offset.left, offset.top + height);\n            },\n\n            _timeSlotInterval: function() {\n                var options = this.options;\n                return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n            },\n\n            _timeSlotIndex: function(date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n                return (eventStartTime - startTime) / (timeSlotInterval);\n            },\n\n            _slotIndex: function(date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n\n                return this._timeSlotIndex(date);\n            },\n\n            _dateSlotIndex: function(date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n\n            _positionAllDayEvent: function(element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n                var currentColumnCount = this._headerColumnCount || 0;\n\n                var leftOffset = 2;\n\n                var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n                var eventHeight = this._allDayHeaderHeight;\n\n                var start = slotRange.startSlot();\n\n                element\n                    .css({\n                        left: start.offsetLeft + leftOffset,\n                        width: slotWidth - rightOffset\n                    });\n\n                slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                var rows = SchedulerView.createRows(allDayEvents);\n\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n\n                var top = slotRange.start.offsetTop;\n\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({\n                            top: top + idx * eventHeight,\n                            // apply calculated height.\n                            // -2 is to match normal events\n                            height: eventHeight - 2\n                        });\n                    }\n                }\n            },\n\n            _arrangeColumns: function(element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n\n                element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n                var columns,\n                    slotWidth = startSlot.clientWidth,\n                    eventRightOffset = slotWidth * 0.10,\n                    columnEvents,\n                    eventElements = slotRange.events(),\n                    slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                    tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                    contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n                slotRange.addEvent(element);\n\n                slotEvents.push(element);\n\n                columns = SchedulerView.createColumns(slotEvents);\n\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        var calculatedWidth = columnWidth - 2;\n                        columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                        if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                            // RTL mobile rendering with horizontal scroll\n                            columnEvents[j].element[0].style.left = eventRightOffset +\n                                startSlot.offsetLeft +\n                                idx * columnWidth -\n                                (tableEl.clientWidth - contentEl.clientWidth) +\n                                \"px\";\n                        } else {\n                            columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                        }\n                    }\n                }\n            },\n\n            _positionEvent: function(event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n                var rect = slotRange.innerRect(start, end, false);\n\n                var height = rect.bottom - rect.top -\n                                parseFloat(borderWidths[\"border-top-width\"]) -\n                                parseFloat(borderWidths[\"border-bottom-width\"]);\n\n                if (height < 0) {\n                    height = 0;\n                }\n\n                element.css( {\n                    top: rect.top,\n                    height: height\n                } );\n\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n           },\n\n           _createEventElement: function(event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time(\"start\");\n                var eventEndTime = event._time(\"end\");\n                var eventTemplate = isOneDayEvent ? options.eventTemplate : options.allDayEventTemplate;\n                var middle;\n\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                    !isInDateRange(eventEndDate, startDate, endDate)) ||\n                    (isOneDayEvent &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime) &&\n                        (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate ||\n                    (isOneDayEvent &&\n                        eventStartTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                    tail = true;\n                } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                    (isOneDayEvent &&\n                        eventEndTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                    head = true;\n                }\n\n                var resources = this.eventResources(event);\n\n               if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n                }\n\n               if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n                }\n\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: false,\n                    messages: options.messages,\n                    ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                    template: eventTemplate\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n\n                var element = $(template(data));\n\n                this.angular(\"compile\", function() {\n                    return {\n                        elements: element,\n                        data: [ { dataItem: data } ]\n                    };\n                });\n\n                return element;\n            },\n\n            _isInTimeSlot: function(event) {\n                var slotStartTime = this.startTime(),\n                    slotEndTime = this.endTime(),\n                    startTime = event._startTime || event.start,\n                    endTime = event._endTime || event.end;\n\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n\n                if (event._date(\"end\") > event._date(\"start\")) {\n                   endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n                }\n\n                endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n                startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n\n                var overlaps = startTime !== slotEndTime;\n\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(slotStartTime, startTime, endTime) ||\n                    isInTimeRange(slotEndTime, startTime, endTime) ||\n                    (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n            },\n\n            _isInDateSlot: function(event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n\n                return (isInDateRange(startTime, slotStart, slotEnd) ||\n                    isInDateRange(endTime, slotStart, slotEnd) ||\n                    isInDateRange(slotStart, startTime, endTime) ||\n                    isInDateRange(slotEnd, startTime, endTime)) &&\n                    (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n            },\n\n            _updateAllDayHeaderHeight: function(height) {\n                if (this._height !== height) {\n                    this._height = height;\n\n                    var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                    if (allDaySlots.length) {\n                        allDaySlots.parent()\n                            .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                            .height(height);\n\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n\n            _renderEvents: function(events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n                var byDate = this._isGroupedByDate();\n                var event;\n\n                var idx;\n                var length;\n\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                        if (this.options.enforceAllDaySlot) {\n                            isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        } else {\n                            isMultiDayEvent = event.isAllDay;\n                        }\n\n                        container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n\n                                if (!group) {\n                                    continue;\n                                }\n\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n\n                                ranges = group.slotRanges(event);\n\n                                var rangeCount = ranges.length;\n\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n\n                                    var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n\n                                        this._positionEvent(occurrence, element, range);\n\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = start;\n                                    var newEnd = start;\n\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                        this._positionAllDayEvent(element, dateRange);\n\n                                        addContinuousEvent(group, dateRange, element, true);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n\n                                    this._positionAllDayEvent(element, ranges[0]);\n\n                                    addContinuousEvent(group, ranges[0], element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n\n            render: function(events) {\n                var that = this;\n\n                this._headerColumnCount = 0;\n\n                this._cachedEvents = events;\n\n                this._groups();\n\n                this.element.find(\".k-event\").remove();\n\n                events = new kendo.data.Query(events)\n                    .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                    .toArray();\n\n                var eventsByResource = [];\n\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n                var eventsPerDate = $.map(this._dates, function(date) {\n                    return Math.max.apply(null,\n                        $.map(eventsByResource, function(events) {\n                            return $.grep(events, function(event) {\n                                if (that.options.enforceAllDaySlot) {\n                                    return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                } else {\n                                    return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                }\n                            }).length;\n                        })\n                    );\n                });\n\n                var height = Math.max.apply(null, eventsPerDate);\n\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n\n                this.refreshLayout();\n\n                this._currentTime(false);\n                this._ongoingEvents(events);\n\n                this.trigger(\"activate\");\n            },\n\n            _eventsByResource: function(events, resources, result, parentValue) {\n                var resource = resources[0];\n\n                if (resource) {\n                    var view = resource.dataSource.view();\n\n                    view = view.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                    });\n\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n\n            _columnOffsetForResource: function(index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n\n            _columnCountForLevel: function(level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n\n            _rowCountForLevel: function(level, rowLevels) {\n                rowLevels = rowLevels || this.rowLevels;\n                var rowLevel = rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n\n            clearSelection: function() {\n\n                this.content.add(this.datesHeader)\n                    .find(\".k-selected\")\n                    .removeAttr(\"id\")\n                    .removeClass(\"k-selected\");\n            },\n\n            _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot &&\n                            startSlot.index === endSlot.index &&\n                            startSlot.collectionIndex === endSlot.collectionIndex) {\n                                selection.backward = reverse;\n                        }\n                    } else {\n                        if ((isDaySlot && startSlot.index === endSlot.index) ||\n                            (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                                selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n\n            _changeViewPeriod: function(selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    var newDateStart, newDateEnd;\n\n                    newDateStart = new Date(date);\n                    newDateEnd = new Date(date);\n\n                    if (this._isInRange(newDateStart, newDateEnd)) {\n                        return false;\n                    }\n\n                    selection.start = newDateStart;\n                    selection.end = newDateEnd;\n\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                            setTime(selection.start, getMilliseconds(newStart));\n                            setTime(selection.end, endMilliseconds);\n                            if (group.daySlotCollectionCount()) {\n                                selection.isAllDay = !selection.isAllDay;\n                            }\n                    } else {\n                        endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n\n                    selection.events = [];\n\n                    return true;\n                }\n            }\n        });\n\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: \"DayView\",\n                    title: \"Day\",\n                    selectedMobileDateFormat: \"{0:MMM d}\"\n                },\n                name: \"day\"\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: \"WeekView\",\n                    title: \"Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"week\",\n                calculateDateRange: function() {\n                    var selectedDate = this.options.date,\n                        start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        idx, length,\n                        dates = [];\n\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: \"WorkWeekView\",\n                    title: \"Work Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"workWeek\",\n                nextDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function() {\n                    var options = this.options,\n                        selectedDate = options.date,\n                        dayOfWeek = kendo.date.dayOfWeek,\n                        weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                        end = dayOfWeek(start, options.workWeekEnd, 1),\n                        dates = [],\n                        workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                            return dayOfWeek(weekStart, day, 1).getTime();\n                        }) : null;\n\n                    if (workDays) {\n                        start = weekStart;\n                        end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                    }\n\n                    while (start <= end) {\n                        if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                            dates.push(start);\n                        } else if (!workDays) {\n                            dates.push(start);\n                        }\n\n                        start = kendo.date.nextDay(start);\n                    }\n\n                    this._render(dates);\n                }\n            })\n        });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}