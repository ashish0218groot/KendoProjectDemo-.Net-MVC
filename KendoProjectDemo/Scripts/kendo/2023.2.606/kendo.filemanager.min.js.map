{"version":3,"file":"kendo.filemanager.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","extend","deferred","Deferred","Class","Command","init","options","this","filemanager","CreateFolderCommand","fn","call","exec","that","commandStack","_commandStack","dataSource","_viewDataSource","removeProxy","_remove","bind","_item","_createNewModel","push","item","toJSON","fail","add","pushDestroy","RenameCommand","target","viewItem","_view","widgetComponent","dataItem","edit","_renameTreeViewItem","uid","data","treeView","getByUid","realItem","get","id","_prompt","type","defaultInput","name","done","newName","set","DeleteCommand","itemsToRemove","items","getSelected","is","length","_confirm","removeItems","_itemsToRemove","Array","isArray","_removeItem","itemToRemove","splice","then","remove","CopyCommand","targetDataSource","children","i","fileManagerNewItem","MoveCommand","promises","cloning","promise","_delete","whenAll","always","SortCommand","sortOptions","defaultSortOption","dir","field","sort","folderSortOption","SearchCommand","filter","operator","value","ChangeViewCommand","view","resize","OpenDialogCommand","dialog","open","console","warn","format","TogglePaneCommand","pane","resizable","getResizable","toggle","wrapper","find","handle","_resizeDraggable","CommandStack","_stack","_keys","guid","next","key","keys","resolve","command","reject","empty","ui","FileManagerCommand","commands","jQuery","Observable","encode","htmlEncode","SELECT","CHANGE","OPEN","KEYDOWN","KEYDOWNACTION","NS","fileManagerDraggables","fileManagerDragOrigin","Component","widget","element","Error","_bindEvents","_binding","_bound","ev","trigger","preventDefault","_setDSOptions","dataSourceOptions","_initDragAndDrop","dropFilter","draggable","kendoDraggable","hint","_hint","cursorOffset","top","left","holdToDrag","ignore","hold","_hold","userEvents","minHold","droptarget","kendoDropTargetArea","drop","_onDrop","dragenter","dropTarget","addClass","dragleave","removeClass","currentTarget","selectable","clear","select","cancel","selectedItems","icon","messages","isDirectory","targetId","itemIds","refresh","setDataSource","destroy","ViewComponent","ViewComponents","registerViewComponent","componentName","component","getViewComponent","ListView","explicitOptions","defaultOptions","ariaLabel","kendoKeydown","_kendoKeydown","listView","isLocalBinding","layout","flex","direction","wrap","support","mobileOS","template","ref","extension","getFileGroup","iconClass","size","editTemplate","navigatable","_select","on","_dblClick","_mousedown","_keydown","_keydownAction","sender","isDirty","_modelFromElement","editable","dirty","_closeEditable","dataItems","entries","keyCode","ESC","node","closest","which","ENTER","preventKendoKeydown","_handleEnterKey","current","_triggerOpen","entry","addFolder","selected","off","TreeView","dataTextField","_refreshDataSource","action","parentNode","treeEl","activeDescendant","attr","map","hasChildren","findByUid","_progress","each","index","append","_shouldFocus","focus","existingItem","_nextVisible","removeAttr","_navigate","_expand","entryId","path","noop","selectedItem","reload","read","Grid","_setupColumns","grid","mode","confirmation","sortable","columns","title","nameField","dateCreatedField","sizeField","getFileSizeMessage","table","_toggleFocusable","saveRow","F2","setTimeout","_editContainer","_tryCancel","cancelChanges","val","state","addBack","toggleClass","container","model","_destroyEditable","_displayRow","addRow","editRow","Node","HierarchicalDataSource","DataSource","schemas","fields","defaultValue","hasDirectories","created","createdUtc","modified","modifiedUtc","FileEntry","getter","isFunction","isDirectoryObject","_initChildren","transport","parameterMap","FileManagerDataSource","_childrenOptions","parent","e","collection","_updateChildrenField","isNew","_defaultId","fileEntry","serverFiltering","_hierarchicalFilter","schema","modelBase","LocalTransport","_attachBubbleHandlers","insert","result","_cleanDestroyed","_hasDirectories","_destroyed","create","_dataSource","observableFileManagerData","array","fetch","_data","ContextMenu","ACTION","FileManagerContextMenu","_overrideTemplates","_restrictDefaultItems","_extendItems","_onSelect","_onOpen","templates","sprite","spriteCssClass","defaultItems","rename","text","delete","events","concat","isPlainObject","Object","_extendItem","isEmptyObject","args","DataBoundWidget","outerHeight","NAVIGATE","ERROR","CLOSE","DATABINDING","DATABOUND","DROP","EXECUTE","COMMAND","TREE_TYPE","DOT","fileManagerStyles","fileManagerTemplateStyles","FileManager","_outerHeight","header","navigation","contentContainer","content","preview","toolbar","treeview","breadcrumb","list","upload","uploadDialog","splitBar","splitBarHorizontal","splitBarHover","splitBarIcon","splitBarNavigation","splitBarPreview","filePreview","fileInfo","fileName","fileMeta","metaLabel","metaValue","deepExtend","_wrapper","_renderHeader","_renderContentContainer","_initContextMenu","_renderNavigation","_renderContent","_renderPreview","_initUploadDialog","_resizable","_attachKeyDown","notify","height","initialView","contextMenu","uploadUrl","views","dialogs","width","moveConfirm","closable","deleteConfirm","renamePrompt","previewPane","metaFields","noFileTemplate","styles","noFileSelected","singleFileTemplate","selection","Date","toString","multipleFilesTemplate","createFolder","sortDirection","sortDirectionAsc","sortDirectionDesc","sortField","typeField","dateModifiedField","gridView","search","details","detailsChecked","detailsUnchecked","listLabel","gridLabel","treeLabel","okText","close","defaultTools","rules","remote","buttons","showText","togglable","group","menuButtons","changeView","spacer","componentOptions","overflow","checked","unchecked","commandOn","placeholder","F10","first","typeSortOrder","nameSortOrder","autoSync","_errorHandler","unbind","_changeHandler","_error","_change","xhr","status","statusText","_resizeHandler","onResize","_initToolbar","_tabIndex","menuOptions","executeCommand","_cacheFocus","_initTreeView","_initBreadcrumb","_initView","_isToolEnabled","_initUpload","hide","previewContainer","_setPreviewPaneContent","previewTemplate","previewPaneMessages","previewPaneOptions","html","toolbarElement","toolbarOptions","tools","_processTools","parentMessages","ToolBar","_toolbarClick","forEach","t","hidden","b","toolName","found","treeViewElement","_load","_drop","indexOf","DELETE","confirm","kendoConfirm","_restoreFocus","prompt","kendoPrompt","activeElement","document","popup","visible","hasClass","_focusElement","_viewType","viewWrapper","breadcrumbElement","breadcrumbOptions","change","_breadcrumbChange","Breadcrumb","substring","shift","uploadInstance","dialogMessages","dialogElement","dialogOptions","modal","actions","primary","_clearUploadFilesList","_shouldInitUpload","Dialog","_toggleUploadDropZone","shouldInit","async","saveUrl","uploadElement","uploadOptions","autoUpload","dropZone","Upload","_sendUploadPathParameter","_success","clearAllFiles","zone","setOptions","source","_createResizableSplitBar","cssClass","hover","_initResizableNavigation","contentWrapperWidth","navigationWrapperWidth","contentWrapper","navigationWrapper","insertAfter","end","kendoResizable","start","delta","x","initialDelta","isRtl","getKendoResizable","_initResizablePreview","previewWrapperWidth","previewWrapper","insertBefore","_open","_cancel","el","join","commandName","commandOptions","navigate","load","sync","res","response","_navigateToParent","loaded","parentNodePath","_buildBreadcrumbPath","reverse","_adjustDimensions","gridSelector","listViewSelector","totalHeight","toolbarHeight","breadcrumbHeight","_resize","getSize","dimensions","_path","replace","isRoot","_sort","unbindResize","plugin"],"sources":["kendo.filemanager.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.listview', 'kendo.treeview', 'kendo.icons', 'kendo.data', 'kendo.menu', 'kendo.toolbar', 'kendo.breadcrumb', 'kendo.upload', 'kendo.dialog', 'kendo.resizable', 'kendo.switch', 'kendo.textbox'], factory) :\n    factory();\n})((function () {\n    (function($, undefined$1) {\n            var kendo = window.kendo,\n                extend = $.extend,\n                deferred = $.Deferred,\n                Class = kendo.Class;\n\n            var Command = Class.extend({\n                init: function(options) {\n                    this.options = options;\n                    this.filemanager = options.filemanager;\n                }\n            });\n\n            var CreateFolderCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager._viewDataSource || filemanager.dataSource,\n                        removeProxy = that._remove.bind(that);\n\n                    that._item = dataSource._createNewModel();\n\n                    commandStack.push({ item: that._item.toJSON() }).fail(removeProxy);\n                    dataSource.add(that._item);\n                },\n                _remove: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        dataSource = filemanager._viewDataSource || filemanager.dataSource;\n\n                    dataSource.pushDestroy(that._item);\n                }\n            });\n\n            var RenameCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        target = that.options.target,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        viewItem = filemanager._view.widgetComponent.dataItem(target);\n\n                    if (target && viewItem) {\n                        commandStack.push({ target: target, item: viewItem });\n                        that.filemanager._view.edit(target);\n                    } else {\n                        that._renameTreeViewItem(target);\n                    }\n                },\n                _renameTreeViewItem: function(target) {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        uid = target.data(\"uid\"),\n                        item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid),\n                        realItem = that.filemanager.dataSource.get(item.id);\n\n                    that.filemanager._prompt({\n                        type: \"rename\",\n                        defaultInput: realItem.name,\n                        target: target\n                    }).done(function(newName) {\n                        commandStack.push({ target: target, item: realItem });\n                        realItem.set(\"name\", newName);\n                    });\n                }\n            });\n\n            var DeleteCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        target = that.options.target,\n                        filemanager = that.filemanager,\n                        items = filemanager.getSelected(),\n                        viewItem = that.filemanager._view.widgetComponent.dataItem(target),\n                        itemsToRemove;\n\n                    if (target && target.is(\".k-selected\") && items && items.length) {\n                        itemsToRemove = items;\n                    } else if (target && viewItem) {\n                        itemsToRemove = viewItem;\n                    } else if (target) {\n                        var uid = target.data(\"uid\");\n                        var item = that.filemanager.treeView.widgetComponent.dataSource.getByUid(uid);\n                        var realItem = that.filemanager.dataSource.get(item.id);\n\n                        itemsToRemove = realItem;\n                    }\n\n                    filemanager._confirm({\n                        type: \"delete\",\n                        target: target\n                    })\n                    .done(function() {\n                        that.removeItems(itemsToRemove);\n                    });\n                },\n                removeItems: function(items) {\n                    var that = this;\n\n                    that._itemsToRemove = Array.isArray(items) ? items : [items];\n\n                    that._removeItem();\n                },\n                _removeItem: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                    if (itemToRemove) {\n                        commandStack.push({ item: itemToRemove })\n                            .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                        dataSource.remove(itemToRemove);\n                    }\n                }\n            });\n\n            var CopyCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                    filemanager = that.filemanager,\n                    dataSource = filemanager.dataSource,\n                    commandStack = filemanager._commandStack,\n                    items = that.options.items,\n                    target = dataSource.get(that.options.target),\n                    targetDataSource = target.children;\n\n                    for (var i = 0; i < items.length; i++) {\n                        var item = dataSource.get(items[i]).toJSON();\n                        item.fileManagerNewItem = true;\n                        commandStack.push({ item: item, target: target });\n                        targetDataSource.add(item);\n                    }\n                }\n            });\n\n            var MoveCommand = Command.extend({\n                init: function(options) {\n                    var that = this;\n                    Command.fn.init.call(that, options);\n                    that._itemsToRemove = [];\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        items = that.options.items,\n                        target = dataSource.get(that.options.target),\n                        targetDataSource = target.children,\n                        promises = [];\n\n                    for (var i = 0; i < items.length; i++) {\n                        var item = dataSource.get(items[i]);\n                        var cloning = item.toJSON();\n                        cloning.fileManagerNewItem = true;\n\n                        var promise = commandStack.push({ item: item, target: target })\n                            .then(that._delete.bind(that));\n\n                            promises.push(promise);\n                            targetDataSource.add(cloning);\n                    }\n\n                    kendo.whenAll(promises).always(that._removeItem.bind(that));\n                },\n                _delete: function(data) {\n                    var that = this;\n                    that._itemsToRemove.push(data.item);\n                },\n                _removeItem: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        commandStack = filemanager._commandStack,\n                        dataSource = filemanager.dataSource,\n                        itemToRemove = !!that._itemsToRemove.length && that._itemsToRemove.splice(0,1)[0];\n\n                    if (itemToRemove) {\n                        commandStack.push({ item: itemToRemove })\n                            .then(that._removeItem.bind(that), that._removeItem.bind(that));\n\n                        dataSource.remove(itemToRemove);\n                    }\n                }\n            });\n\n            var SortCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager,\n                        sortOptions = filemanager.defaultSortOption;\n\n                    extend(sortOptions, {\n                        dir: options.dir,\n                        field: options.field\n                    });\n\n                    filemanager._view.widgetComponent.dataSource.sort([ filemanager.folderSortOption, sortOptions ]);\n                }\n            });\n\n            var SearchCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager,\n                        filter = {\n                            field: options.field,\n                            operator: options.operator,\n                            value: options.value || \"\"\n                        };\n\n                    filemanager._view.widgetComponent.dataSource.filter(filter);\n                }\n            });\n\n            var ChangeViewCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        filemanager = that.filemanager;\n\n                    filemanager.view(options.value);\n                    filemanager.resize(true);\n                }\n            });\n\n            var OpenDialogCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        dialog = filemanager[that.options.type];\n\n                    if (dialog) {\n                        dialog.open();\n                    } else {\n                        window.console.warn(kendo.format(\"The {0} dialog is not available!\", that.options.type));\n                    }\n                }\n            });\n\n            var TogglePaneCommand = Command.extend({\n                init: function(options) {\n                    Command.fn.init.call(this, options);\n                },\n                exec: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        pane = filemanager[that.options.type],\n                        resizable = that.getResizable();\n\n                    if (pane) {\n                        pane.toggle();\n\n                        if (resizable) {\n                            filemanager.wrapper\n                                .find(resizable.options.handle)\n                                .toggle();\n                        }\n                    }\n                },\n                getResizable: function() {\n                    var that = this,\n                        filemanager = that.filemanager,\n                        type = that.options.type;\n\n                    if (!filemanager._resizeDraggable) {\n                        return;\n                    }\n\n                    return filemanager._resizeDraggable[type];\n                }\n            });\n\n            var CommandStack = Class.extend({\n                init: function() {\n                    var that = this;\n\n                    that._stack = {};\n                    that._keys = [];\n                },\n                push: function(data) {\n                    var that = this,\n                        guid = kendo.guid();\n\n                    that._keys.push(guid);\n                    that._stack[guid] = {\n                        guid: guid,\n                        data: data,\n                        deferred: deferred()\n                    };\n\n                    return that._stack[guid].deferred;\n                },\n                next: function() {\n                    var that = this,\n                        key = that.keys().splice(0,1),\n                        nextCommand = that._stack[key];\n\n                    return nextCommand;\n                },\n                resolve: function(command) {\n                    var that = this;\n                    delete that._stack[command.guid];\n                    command.deferred.resolve(command.data);\n                },\n                reject: function(command) {\n                    var that = this;\n                    delete that._stack[command.guid];\n                    command.deferred.reject(command.data);\n                },\n                keys: function() {\n                    return this._keys;\n                },\n                empty: function() {\n                    return this.keys().length === 0;\n                }\n            });\n\n            extend(kendo.ui, {\n                filemanager: {\n                    FileManagerCommand: Command,\n                    CommandStack: CommandStack,\n                    commands: {\n                        CreateFolderCommand: CreateFolderCommand,\n                        RenameCommand: RenameCommand,\n                        DeleteCommand: DeleteCommand,\n                        MoveCommand: MoveCommand,\n                        CopyCommand: CopyCommand,\n                        SortCommand: SortCommand,\n                        SearchCommand: SearchCommand,\n                        ChangeViewCommand: ChangeViewCommand,\n                        OpenDialogCommand: OpenDialogCommand,\n                        TogglePaneCommand: TogglePaneCommand\n                    }\n                }\n            });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            keys = kendo.keys,\n\n            NAVIGATE = \"navigate\",\n            SELECT = \"select\",\n            EXPAND = \"expand\",\n            CHANGE = \"change\",\n            OPEN = \"open\",\n            LOAD = \"load\",\n            KEYDOWN = \"keydown\",\n            KEYDOWNACTION = \"keydownAction\",\n\n            NS = \".kendoFileManagerViewComponent\",\n\n            fileManagerDraggables = [],\n            fileManagerDragOrigin = null;\n\n        var registerViewComponent = function(componentName, component) {\n            ui.filemanager.ViewComponents[componentName] = component;\n        };\n\n        var getViewComponent = function(componentName) {\n            return ui.filemanager.ViewComponents[componentName] || null;\n        };\n\n        var Component = Observable.extend({\n            init: function(widget, element, options) {\n                var that = this;\n\n                that.element = element;\n                that.options = options;\n\n                if (widget) {\n                    that.widgetComponent = new widget(element, options);\n                } else {\n                    throw new Error(\"The widget for the ViewComponent is not available! Please add the corresponding scripts!\");\n                }\n\n                Observable.fn.init.call(that);\n            },\n\n            _bindEvents: function() {\n                this.widgetComponent.bind(\"dataBinding\", this._binding.bind(this));\n                this.widgetComponent.bind(\"dataBound\", this._bound.bind(this));\n            },\n\n            _binding: function(ev) {\n                if (this.trigger(\"dataBinding\", ev)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _bound: function() {\n                this.trigger(\"dataBound\");\n            },\n\n            _setDSOptions: function(options, dataSourceOptions) {\n                if (!options.dataSource && dataSourceOptions) {\n                    options.dataSource = dataSourceOptions;\n                }\n            },\n\n            _initDragAndDrop: function(element, filter) {\n                var that = this;\n\n                filter = filter || that.options.dropFilter;\n                element = element || that.element;\n\n                that.draggable = element.kendoDraggable({\n                    filter: filter,\n                    hint: that._hint.bind(that),\n                    cursorOffset: { top: -10, left: -50 },\n                    holdToDrag: true,\n                    ignore: \"input, .k-focusable\",\n                    hold: that._hold.bind(that)\n                }).data(\"kendoDraggable\");\n\n                that.draggable.userEvents.minHold = 150;\n\n                that.droptarget = element.kendoDropTargetArea({\n                    filter: filter,\n                    drop: that._onDrop.bind(that),\n                    dragenter: function(ev) {\n                        ev.dropTarget.addClass(\"k-filemanager-drop-target\");\n                    },\n                    dragleave: function(ev) {\n                        ev.dropTarget.removeClass(\"k-filemanager-drop-target\");\n                    }\n                }).data(\"kendoDraggable\");\n            },\n\n            _hold: function(ev) {\n                var that = this,\n                    target = ev.currentTarget;\n\n                if (!target.is(\".k-selected\")) {\n                    if (that.widgetComponent.selectable) {\n                        that.widgetComponent.selectable.clear();\n                    }\n                    that.widgetComponent.select(target);\n                }\n\n                if (that.widgetComponent.selectable) {\n                    that.widgetComponent.selectable.userEvents.cancel();\n                }\n            },\n\n            _hint: function(target) {\n                var that = this,\n                    item = that.widgetComponent.dataItem(target),\n                    selectedItems = that.widgetComponent.select();\n\n                fileManagerDragOrigin = that.widgetComponent;\n                fileManagerDraggables = selectedItems;\n\n                if (selectedItems.length > 1) {\n                    return (\"<div class='k-filemanager-drag-hint'>\" + (kendo.ui.icon(\"file\")) + \" <span>\" + (selectedItems.length) + \" \" + (that.options.messages.items) + \"</span></div>\");\n                }\n\n                return (\"<div class='k-filemanager-drag-hint'>\" + (kendo.ui.icon((item.isDirectory ? \"folder\" : \"file\"))) + \" <span>\" + (item.name) + \"</span></div>\");\n            },\n\n            _onDrop: function(ev) {\n                var that = this,\n                    target = that.widgetComponent.dataItem(ev.dropTarget),\n                    targetId = target.id,\n                    itemIds = [];\n\n                if (!target.isDirectory) {\n                    return;\n                }\n\n                for (var i = 0; i < fileManagerDraggables.length; i++) {\n                    var id = fileManagerDragOrigin.dataItem(fileManagerDraggables[i]).id;\n                    itemIds.push(id);\n                }\n\n                this.trigger(\"drop\",{ target: targetId, items: itemIds });\n            },\n\n            getSelected: function() {\n                throw new Error(\"Not Implemented!\");\n            },\n\n            refresh: function(dataSource) {\n                this.widgetComponent.setDataSource(dataSource);\n            },\n\n            destroy: function() {\n                kendo.destroy(this.element);\n            }\n        });\n\n        extend(kendo.ui.filemanager, {\n                ViewComponent: Component,\n                ViewComponents: {},\n                registerViewComponent: registerViewComponent,\n                getViewComponent: getViewComponent\n            }\n        );\n\n        var ListView = Component.extend({\n            init: function(element, options, explicitOptions) {\n                var that = this,\n                    dataSourceOptions = explicitOptions.dataSource,\n                    messages = explicitOptions.messages;\n\n                options = extend({}, that.defaultOptions, options, {\n                    messages: messages,\n                    ariaLabel: explicitOptions.ariaLabel\n                });\n\n                that._setDSOptions(options, dataSourceOptions);\n                options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n                Component.fn.init.call(this, ui.ListView, element, options);\n\n                that.listView = that.widgetComponent;\n                that._bindEvents();\n\n                if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n\n            defaultOptions: {\n                layout: \"flex\",\n                flex: {\n                    direction: \"row\",\n                    wrap: \"wrap\"\n                },\n                selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n                template: function (ref) {\n                            var name = ref.name;\n                            var extension = ref.extension;\n                            var isDirectory = ref.isDirectory;\n\n                            return \"<div class='k-listview-item' title='\" + (encode(name)) + (encode(extension)) + \"'>\" +\n                            \"<div class='k-file-preview'>\" + (kendo.ui.icon({ icon: (!isDirectory ? kendo.getFileGroup(extension, true) : 'folder'), iconClass: \"k-file-icon\", size: \"xxxlarge\" })) + \"</div>\" +\n                            \"<div class='k-file-name file-name'>\" + (encode(name)) + (encode(extension)) + \"</div>\" +\n                        \"</div>\";\n        },\n                editTemplate: function (ref) {\n                                var extension = ref.extension;\n                                var isDirectory = ref.isDirectory;\n\n                                return \"<div class='k-listview-item'>\" +\n                                \"<div class='k-file-preview'>\" + (kendo.ui.icon({ icon: (!isDirectory ? kendo.getFileGroup(extension, true) : 'folder'), iconClass: \"k-file-icon\", size: \"xxxlarge\" })) + \"</div>\" +\n                                \"<div class='k-file-name'><span class='k-textbox k-input k-input-md k-rounded-md k-input-solid'><input type='text' class='k-input-inner' data-bind='value:name' name='name' required='required' /><span></div>\" +\n                            \"</div>\";\n        },\n                dropFilter: \".k-listview-item\",\n                navigatable: true\n            },\n\n            _bindEvents: function() {\n                var that = this,\n                    listView = that.listView;\n\n                listView.bind(CHANGE, that._select.bind(that));\n                listView.element.on(\"dblclick\" + NS, that._dblClick.bind(that));\n                listView.element.on(\"mousedown\" + NS, \".k-listview-item:not(.k-edit-item)\", that._mousedown.bind(that));\n                listView.element.on(KEYDOWN + NS, \".k-edit-item\", that._keydown.bind(that));\n                listView.element.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n                listView.bind(\"edit\", function(ev) {\n                    var sender = ev.sender;\n                    var input = ev.item.find(\"input\");\n\n                    input.on(\"blur\", function() {\n                        var isDirty = sender._modelFromElement(sender.editable.element).dirty;\n                        sender._closeEditable();\n                        if (!isDirty) {\n                            that.trigger(\"cancel\");\n                        }\n                    });\n                });\n\n                listView.bind(\"cancel\", function() {\n                    that.trigger(\"cancel\");\n                });\n\n                Component.fn._bindEvents.call(this);\n            },\n\n            _select: function() {\n                var that = this,\n                    dataItems = that.getSelected();\n\n                that.trigger(SELECT, { entries: dataItems });\n            },\n\n            _keydown: function(ev) {\n                var that = this;\n                if (ev.keyCode === kendo.keys.ESC) {\n                    that.listView._closeEditable();\n                    that.trigger(\"cancel\");\n                }\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    target = $(ev.target).find(\".k-focus\");\n\n                if (target.length && !target.is(\".k-edit-item\")) {\n                    that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n                }\n            },\n\n            _mousedown: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\".k-listview-item\");\n\n                if (ev.which === 3 && !node.is(\".k-selected\")) {\n                    that.listView.selectable.clear();\n                    that.listView.select(node);\n                }\n            },\n\n            _kendoKeydown: function(ev) {\n                var that = this;\n\n                if (ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                    that._handleEnterKey(ev);\n                }\n            },\n\n            _handleEnterKey: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    node = that.listView.current();\n\n                if (that.widgetComponent.editable && target.is(\"input\")) {\n                    // Force blur to update item and close editable (cross browser)\n                    target.trigger(\"blur\");\n                } else if (!that.widgetComponent.editable) {\n                    that._triggerOpen(node);\n                }\n\n                ev.preventKendoKeydown = true;\n            },\n\n            _dblClick: function(ev) {\n                var that = this,\n                    node = $(ev.target).closest(\".k-listview-item\");\n\n                that._triggerOpen(node);\n            },\n\n            _triggerOpen: function(node) {\n                var that = this;\n\n                if (node.is(\".k-edit-item\")) {\n                    return;\n                }\n\n                var item = that.listView.dataItem(node);\n\n                if (item) {\n                    that.trigger(OPEN, { entry: item });\n                }\n            },\n\n            addFolder: function() {\n                this.listView.add();\n            },\n\n            edit: function(target) {\n                var that = this,\n                    selected = that.listView.select();\n\n                that.listView.edit(target || selected);\n            },\n\n            getSelected: function() {\n                var that = this,\n                items = that.listView.select(),\n                dataItems = [];\n\n                for (var i = 0; i < items.length; i++) {\n                    var item = that.listView.dataItem(items[i]);\n\n                    if (item) {\n                        dataItems.push(item);\n                    }\n                }\n\n                return dataItems;\n            },\n\n            destroy: function() {\n                this.listView.element.off(NS);\n                Component.fn.destroy.call(this);\n            }\n        });\n\n        ui.filemanager.registerViewComponent(\"list\", ListView);\n\n        var TreeView = Component.extend({\n            init: function(element, options, explicitOptions) {\n                var that = this,\n                    messages = explicitOptions.messages;\n\n                options = extend({}, that.defaultOptions, options, {\n                    messages: messages\n                });\n\n                Component.fn.init.call(this, ui.TreeView, element, options);\n\n                that.treeView = that.widgetComponent;\n                that._bindEvents();\n\n                if (explicitOptions.draggable !== false && !explicitOptions.isLocalBinding) {\n                    that._initDragAndDrop();\n                }\n            },\n\n            defaultOptions: {\n                dataTextField: \"name\",\n                dropFilter: \".k-item\"\n            },\n\n            _refreshDataSource: function(ev) {\n                var that = this,\n                    treeView = that.treeView,\n                    action = ev.action,\n                    node = ev.node,\n                    parentNode = null,\n                    treeEl = treeView.element,\n                    activeDescendant = treeEl.attr(\"aria-activedescendant\"),\n                    items = ev.items.filter(function(item) {\n                        return item.isDirectory;\n                    }).map(function(item) {\n                        return extend({}, item.toJSON(), {\n                            id: item.id || kendo.guid(),\n                            hasChildren: item.hasChildren,\n                            items: []\n                        });\n                    });\n\n                if (node) {\n                    parentNode = treeView.findByUid(treeView.dataSource.get(node.id).uid);\n                    treeView._progress(parentNode, false);\n                }\n\n                if (!items.length) {\n                    return;\n                }\n\n                if (action == \"itemloaded\" || (parentNode && action === \"sync\")) {\n                    parentNode.find(\".k-item\").each(function(index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items, parentNode);\n\n                    if (that._shouldFocus) {\n                        treeView.current(parentNode);\n                        treeView.focus();\n                    }\n                } else if (action == \"remove\") {\n                    this._remove(items[0].id);\n                } else if (action == \"itemchange\") {\n                    var existingItem = treeView.dataSource.get(items[0].id);\n\n                    if (existingItem) {\n                        existingItem.set(ev.field, items[0][ev.field]);\n                    } else {\n                        treeView.append(items[0], parentNode);\n                    }\n                } else if (!treeView.dataSource.data().length) {\n                    treeView.append(items);\n                } else if (action === \"sync\" || (action === undefined$1 && !parentNode)) {\n                    treeView.items().each(function(index, item) {\n                        treeView.remove(item);\n                    });\n                    treeView.append(items);\n\n                    if (that._shouldFocus) {\n                        treeView.current(treeView._nextVisible($()));\n                        treeView.focus();\n                    }\n                }\n\n                if (!!activeDescendant && treeEl.find(\"#\" + activeDescendant).length === 0) {\n                    treeEl.removeAttr(\"aria-activedescendant\");\n                }\n            },\n\n            _remove: function(id) {\n                var that = this,\n                    treeView = that.treeView,\n                    dataSource = treeView.dataSource,\n                    item = dataSource.get(id),\n                    node;\n\n                if (item) {\n                    node = treeView.findByUid(item.uid);\n                    treeView.remove(node);\n                }\n            },\n\n            _bindEvents: function() {\n                var that = this;\n\n                that.treeView.bind(SELECT, that._navigate.bind(that));\n                that.treeView.bind(EXPAND, that._expand.bind(that));\n                that.treeView.element.on(KEYDOWN, that._keydownAction.bind(that));\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    target = $(ev.target).find(\".k-focus\").closest(\".k-item\");\n\n                that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n            },\n\n            _expand: function(ev) {\n                var that = this,\n                    treeView = that.treeView,\n                    entry = treeView.dataItem(ev.node);\n\n                ev.preventDefault();\n                that.trigger(LOAD, { entryId: entry.id });\n            },\n\n            _navigate: function(ev) {\n                var that = this,\n                    node = ev.node,\n                    entry = that.treeView.dataItem(node),\n                    path = entry.id;\n\n                ev.preventDefault();\n\n                that.trigger(NAVIGATE, { path: path, entry: entry.toJSON() });\n            },\n\n            _hold: $.noop,\n\n            getSelected: function() {\n                var that = this,\n                    selectedItem = that.treeView.element.find(\".k-selected\").closest(\".k-item\"),\n                    item = that.treeView.dataItem(selectedItem);\n\n                return item;\n            },\n\n            refresh: function(id) {\n                var that = this,\n                    treeView = that.treeView,\n                    entry = treeView.dataSource.get(id),\n                    node = entry && treeView.findByUid(entry.uid);\n\n                if (entry && node) {\n                    treeView.element.find(\".k-selected\").removeClass(\"k-selected\");\n                    node.find(\"> div .k-in\").removeClass(\"k-hover\").addClass(\"k-selected\");\n                }\n            },\n\n            reload: function() {\n                this.treeView.dataSource.read();\n            }\n        });\n\n        ui.filemanager.registerViewComponent(\"tree\", TreeView);\n\n        if (kendo.ui.Grid) {\n            var Grid = Component.extend({\n                init: function(element, options, explicitOptions) {\n                    var that = this,\n                        dataSourceOptions = explicitOptions.dataSource,\n                        messages = explicitOptions.messages;\n\n                    options = extend({}, that.defaultOptions, options, {\n                        messages: messages\n                    });\n\n                    that._setDSOptions(options, dataSourceOptions);\n                    that._setupColumns(options, messages);\n                    options.kendoKeydown = options.kendoKeydown || that._kendoKeydown.bind(that);\n\n                    Component.fn.init.call(this, ui.Grid, element, options);\n\n                    that.grid = that.widgetComponent;\n                    that._bindEvents();\n\n                    if (explicitOptions.draggable !== false && !dataSourceOptions.isLocalBinding) {\n                        that._initDragAndDrop();\n                    }\n\n                    if (explicitOptions.ariaLabel) {\n                        that.element.find(\"[role=grid]\").attr(\"aria-label\", explicitOptions.ariaLabel);\n                    }\n                },\n\n                defaultOptions: {\n                    selectable: kendo.support.mobileOS ? \"row\" : \"multiple\",\n                    editable: {\n                        mode: \"inline\",\n                        confirmation: false\n                    },\n                    sortable: true,\n                    dropFilter: \"tr:not(.k-grid-edit-row)\",\n                    navigatable: true\n                },\n\n                _setupColumns: function(options, messages) {\n                    if (!options.columns) {\n                        options.columns = [\n                            { field: \"name\", title: messages.nameField || \"Name\", template: function(item) {\n                                var icon = !item.isDirectory ? kendo.getFileGroup(item.extension, true) : \"folder\";\n\n                                var template = \"<div class='file-group-icon'>\" +\n                                                    kendo.ui.icon(icon) +\n                                                \"</div>\" +\n                                                \"<div class='file-name'>\" + kendo.htmlEncode(item.name + item.extension) + \"<div>\";\n\n                                return template;\n                            } },\n                            { field: \"created\", title: messages.dateCreatedField , format: \"{0:G}\" },\n                            { field: \"size\", title: messages.sizeField, template: function(item) {\n                                if (item.size > 0) {\n                                    return kendo.getFileSizeMessage(item.size);\n                                } else {\n                                    return \"\";\n                                }\n                            } }\n                        ];\n                    }\n                },\n\n                _bindEvents: function() {\n                    var that = this,\n                        grid = that.grid;\n\n                    grid.bind(CHANGE, that._select.bind(that));\n                    grid.table.on(\"dblclick\" + NS, that._dblClick.bind(that));\n                    grid.table.on(\"mousedown\" + NS, \"tr:not(.k-grid-edit-row)\", that._mousedown.bind(that));\n                    grid.table.on(KEYDOWN + NS, \".k-grid-edit-row\", that._keydown.bind(that));\n                    grid.table.on(KEYDOWN + NS, that._keydownAction.bind(that));\n\n                    grid.bind(\"edit\", function() {\n                        that._toggleFocusable(true);\n                    });\n\n                    grid.bind(\"cancel\", function() {\n                        that.trigger(\"cancel\");\n                    });\n\n                    grid.saveRow = $.noop;\n\n                    Component.fn._bindEvents.call(this);\n                },\n\n                _kendoKeydown: function(ev) {\n                    var that = this,\n                        current = that.grid.current(),\n                        node = current ? current.closest(\"tr[data-uid]\") : null;\n\n                    if (node && ev.keyCode === keys.ENTER && !ev.preventKendoKeydown) {\n                        that._triggerOpen(node);\n                        ev.preventKendoKeydown = true;\n                    }\n\n                    if (ev.keyCode === keys.F2) {\n                        ev.preventKendoKeydown = true;\n                    }\n                },\n\n                _keydownAction: function(ev) {\n                    var that = this,\n                        target = $(ev.target).find(\".k-focus\").closest(\"tr\");\n\n                    if (target.length && !target.is(\".k-grid-edit-row\")) {\n                        that.trigger(KEYDOWNACTION, { target: target, keyCode: ev.keyCode });\n                    }\n                },\n\n                _keydown: function(ev) {\n                    var that = this,\n                        grid = that.grid;\n\n                    if (!$(ev.target).closest(\".k-grid-edit-row\").length) {\n                        return;\n                    }\n\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        setTimeout(function() {\n                            var editorContainer = that.grid._editContainer || $();\n\n                            // force blur event for inputs\n                            editorContainer.find(\"input\").trigger(\"blur\");\n\n                            that._closeEditable();\n                        });\n\n                        that._tryCancel();\n                    }\n\n                    if (ev.keyCode === kendo.keys.ESC) {\n                        grid.cancelChanges();\n                        that.trigger(\"cancel\");\n                    }\n                },\n\n                _mousedown: function(ev) {\n                    var that = this,\n                        node = $(ev.target).closest(\"tr[data-uid]\");\n\n                    if (ev.which === 1 && that.grid.editable) {\n                        setTimeout(function() {\n                            that._closeEditable();\n                        });\n\n                        that._tryCancel();\n                    }\n\n                    if (ev.which === 3 && !node.is(\".k-selected\")) {\n                        that.grid.selectable.clear();\n                        that.grid.select(node);\n                    }\n                },\n\n                _tryCancel: function() {\n                    var that = this,\n                        grid = that.grid,\n                        container;\n\n                    if (grid.editable) {\n                        container = grid._editContainer;\n                        if (!container.find(\"input\").val()) {\n                            grid.cancelChanges();\n                        }\n                    }\n\n                    setTimeout(function() {\n                        that._toggleFocusable(false);\n                    });\n\n                },\n\n                _toggleFocusable: function(state) {\n                    var that = this,\n                        grid = that.grid;\n\n                    grid.table.find(\"tr,td\").children().addBack().toggleClass(\"k-focusable\", state);\n                },\n\n                _closeEditable: function() {\n                    var that = this,\n                        container;\n\n                    if (that.grid.editable && !that.grid.editable.options.model.dirty) {\n                        container = that.grid._editContainer;\n                        that.grid._destroyEditable();\n                        that.grid._displayRow(container);\n                        that.trigger(\"cancel\");\n                    }\n                },\n\n                _select: function() {\n                    var that = this,\n                        dataItems = that.getSelected();\n\n                    that.trigger(SELECT, { entries: dataItems });\n                },\n\n                _dblClick: function(ev) {\n                    var that = this,\n                        node = $(ev.target).closest(\"tr[data-uid]\");\n\n                    that._triggerOpen(node);\n                },\n\n                _triggerOpen: function(node) {\n                    var that = this;\n\n                    if (node.is(\".k-grid-edit-row\")) {\n                        return;\n                    }\n\n                    var item = that.grid.dataItem(node);\n\n                    if (item) {\n                        that.trigger(OPEN, { entry: item });\n                    }\n                },\n\n                getSelected: function() {\n                    var that = this,\n                    items = that.grid.select(),\n                    dataItems = [];\n\n                    for (var i = 0; i < items.length; i++) {\n                        dataItems.push(that.grid.dataItem(items[i]));\n                    }\n\n                    return dataItems;\n                },\n\n                addFolder: function() {\n                    this.grid.addRow();\n                },\n\n                edit: function(target) {\n                    var that = this,\n                        selected = that.grid.select();\n\n                    that.grid.editRow(target || selected);\n                },\n\n                destroy: function() {\n                    this.grid.table.off(NS);\n                    this.grid.element.off(NS);\n                    Component.fn.destroy.call(this);\n                }\n            });\n\n            ui.filemanager.registerViewComponent(\"grid\", Grid);\n        }\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            data = kendo.data,\n            Node = data.Node,\n            HierarchicalDataSource = data.HierarchicalDataSource,\n            DataSource = data.DataSource;\n\n        extend(true, kendo.data, {\n            schemas: {\n                \"filemanager\": {\n                    data: function(data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: \"path\",\n                        hasChildren: \"hasDirectories\",\n                        fields: {\n                            name: { editable: true, type: \"string\", defaultValue: \"New Folder\" },\n                            size: { editable: false, type: \"number\" },\n                            path: { editable: false, type: \"string\" },\n                            extension: { editable: false, type: \"string\" },\n                            isDirectory: { editable: false, defaultValue: true, type: \"boolean\" },\n                            hasDirectories: { editable: false, defaultValue: false, type: \"boolean\" },\n                            created: { type: \"date\", editable: false },\n                            createdUtc: { type: \"date\", editable: false },\n                            modified: { type: \"date\", editable: false },\n                            modifiedUtc: { type: \"date\", editable: false }\n                        }\n                    }\n                }\n            }\n        });\n\n        var FileEntry = Node.define({\n            init: function(value) {\n                var that = this,\n                    isDirectory = this.isDirectory;\n\n                Node.fn.init.call(this, value);\n\n                if (typeof isDirectory === \"string\") {\n                isDirectory = kendo.getter(isDirectory);\n                }\n\n                if (kendo.isFunction(isDirectory)) {\n                    var isDirectoryObject = isDirectory.call(that, that);\n\n                    if (isDirectoryObject && isDirectoryObject.length === 0) {\n                        that.isDirectory = false;\n                    } else {\n                        that.isDirectory = !!isDirectoryObject;\n                    }\n                }\n\n                if (that.isDirectory) {\n                    that._initChildren();\n                }\n            },\n            _initChildren: function() {\n                var that = this;\n                var children, transport, parameterMap;\n\n                if (!(that.children instanceof kendo.data.FileManagerDataSource)) {\n                    children = that.children = new kendo.data.FileManagerDataSource(that._childrenOptions);\n\n                    transport = children.transport;\n                    parameterMap = transport.parameterMap;\n\n                    transport.parameterMap = function(data, type) {\n                        if (type === \"read\" || type === \"create\") {\n                            data.target = that.id;\n                        }\n\n                        if (parameterMap) {\n                            data = parameterMap.call(that, data, type);\n                        }\n\n                        return data;\n                    };\n\n                    children.parent = function() {\n                        return that;\n                    };\n\n                    children.bind(\"change\", function(e) {\n                        e.node = e.node || that;\n                        that.trigger(\"change\", e);\n                    });\n\n                    children.bind(\"error\", function(e) {\n                        var collection = that.parent();\n\n                        if (collection) {\n                            e.node = e.node || that;\n                            collection.trigger(\"error\", e);\n                        }\n                    });\n\n                    that._updateChildrenField();\n                }\n            },\n            isNew: function() {\n                if (this.fileManagerNewItem) {\n                    delete this.fileManagerNewItem;\n                    return true;\n                }\n\n                return this.id === this._defaultId;\n            }\n        });\n\n\n        var FileManagerDataSource = HierarchicalDataSource.extend({\n            init: function(options) {\n                var fileEntry = FileEntry.define({\n                    children: options\n                });\n\n                if (options.filter && !options.serverFiltering) {\n                    this._hierarchicalFilter = options.filter;\n                    options.filter = null;\n                }\n\n                DataSource.fn.init.call(this, $.extend(true, {}, { schema: { modelBase: fileEntry, model: fileEntry } }, options));\n\n                this.isLocalBinding = this.transport instanceof kendo.data.LocalTransport;\n\n                this._attachBubbleHandlers();\n            },\n            insert: function(index, model) {\n                var parentNode = this.parent();\n\n                if (parentNode && parentNode._initChildren) {\n                    if (model && model.isDirectory) {\n                        parentNode.hasDirectories = true;\n                    }\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n\n                return DataSource.fn.insert.call(this, index, model);\n            },\n            remove: function(node) {\n                var that = this,\n                    parentNode = node.parentNode(),\n                    dataSource = that,\n                    result;\n\n                if (parentNode && parentNode._initChildren) {\n                    dataSource = parentNode.children;\n                }\n\n                that._cleanDestroyed(node);\n\n                result = DataSource.fn.remove.call(dataSource, node);\n\n                if (parentNode && (dataSource.data() && !dataSource.data().length)) {\n                    parentNode.hasChildren = false;\n                } else if (parentNode && !this._hasDirectories(parentNode)) {\n                    parentNode.hasDirectories = false;\n                }\n\n                return result;\n            },\n            _cleanDestroyed: function(node) {\n                var that = this,\n                    dataSource = that;\n\n                if (node.parentNode && node.parentNode()) {\n                    node = node.parentNode();\n                    dataSource = node.children;\n                    dataSource._destroyed = [];\n                    that._cleanDestroyed(node);\n                } else {\n                    dataSource._destroyed = [];\n                }\n            },\n            _hasDirectories: function(node) {\n                var result;\n\n                if (!node.children.data()) {\n                    return false;\n                }\n\n                result = node.children.data().filter(function(item) {\n                    return item.isDirectory;\n                });\n\n                return !!result.length;\n            }\n        });\n\n        FileManagerDataSource.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            if (data && data._dataSource) {\n                return data._dataSource;\n            }\n\n            dataSource.data = data;\n\n            return dataSource instanceof FileManagerDataSource ? dataSource : new FileManagerDataSource(dataSource);\n        };\n\n        kendo.observableFileManagerData = function(array) {\n            var dataSource = FileManagerDataSource.create({\n                data: array,\n                schema: kendo.data.schemas.filemanager\n            });\n\n            dataSource.fetch();\n\n            dataSource._data._dataSource = dataSource;\n\n            return dataSource._data;\n        };\n\n        extend(kendo.data, {\n            FileManagerDataSource: FileManagerDataSource,\n            FileEntry: FileEntry\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            template = kendo.template,\n            ContextMenu = kendo.ui.ContextMenu,\n\n            ACTION = \"action\";\n\n        var FileManagerContextMenu = ContextMenu.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ContextMenu.fn.init.call(that, element, options);\n\n                that._overrideTemplates();\n                that._restrictDefaultItems();\n                that._extendItems();\n\n                that.bind(\"select\", that._onSelect.bind(that));\n                that.bind(\"open\", that._onOpen.bind(that));\n            },\n\n            _overrideTemplates: function() {\n                this.templates.sprite = template(function (spriteCssClass) { return (\"\" + (spriteCssClass ? (\"<span class=\\\"\" + spriteCssClass + \"\\\"></span>\") : '')); });\n            },\n\n            _restrictDefaultItems: function() {\n                var that = this;\n\n                if (that.options.isLocalBinding) {\n                    that.defaultItems = {};\n                }\n            },\n\n            defaultItems: {\n                \"rename\": { text: \"Rename\", spriteCssClass: \"k-icon k-i-pencil\", command: \"RenameCommand\" },\n                \"delete\": { text: \"Delete\", spriteCssClass: \"k-icon k-i-trash\", command: \"DeleteCommand\" }\n            },\n\n            events: ContextMenu.fn.events.concat([\n                ACTION\n            ]),\n\n            _extendItems: function() {\n                var that = this,\n                    items = that.options.items,\n                    item, isBuiltInTool;\n\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n\n                        if ($.isPlainObject(item) ) {\n                            that._extendItem(item);\n                            that.append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._extendItem(item);\n                            that.append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._extendItem(item);\n                        that.append(item);\n                    }\n                }\n            },\n\n            _extendItem: function(item) {\n                var that = this,\n                    messages = that.options.messages;\n\n                extend(item, {\n                    text: messages[item.text],\n                    spriteCssClass: item.spriteCssClass || \"\",\n                    attr: {\n                        \"data-command\": item.command\n                    }\n                });\n            },\n\n            _onSelect: function(ev) {\n                var command = $(ev.item).data(\"command\");\n                var target = $(ev.target);\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: { target: target }\n                });\n            },\n\n            _onOpen: function(ev) {\n                var menu = ev.sender,\n                    items = menu.options.items;\n\n                if (!items && $.isEmptyObject(this.defaultItems)) {\n                    ev.preventDefault();\n                }\n            },\n\n            action: function(args) {\n                this.trigger(ACTION, args);\n            }\n        });\n\n        extend(kendo.ui.filemanager, {\n            ContextMenu: FileManagerContextMenu\n        });\n\n        })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"filemanager\",\n        name: \"FileManager\",\n        category: \"web\",\n        description: \"The FileManager widget displays offers file management functionality.\",\n        depends: [ \"core\", \"data\", \"listview\", \"toolbar\", \"breadcrumb\", \"menu\", \"treeview\", \"upload\", \"dialog\", \"switch\", \"resizable\", \"selectable\", \"editable\", \"textbox\", \"icons\" ],\n        features: [{\n            id: \"filemanager-grid-view\",\n            name: \"GridView\",\n            description: \"Support for GridView\",\n            depends: [ \"grid\" ]\n        }]\n    };\n\n    (function($, undefined$1) {\n        var ui = kendo.ui,\n            extend = $.extend,\n            encode = kendo.htmlEncode,\n            isPlainObject = $.isPlainObject,\n            isArray = Array.isArray,\n            DataBoundWidget = ui.DataBoundWidget,\n            template = kendo.template,\n            outerHeight = kendo._outerHeight,\n            ns = \".kendoFileManager\",\n\n            NAVIGATE = \"navigate\",\n            SELECT = \"select\",\n            OPEN = \"open\",\n            ERROR = \"error\",\n            CHANGE = \"change\",\n            UPLOAD = \"upload\",\n            SUCCESS = \"success\",\n            CLICK = \"click\",\n            TOGGLE = \"toggle\",\n            CLOSE = \"close\",\n            HIDE = \"hide\",\n            LOAD = \"load\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            DROP = \"drop\",\n            EXECUTE = \"execute\",\n            COMMAND = \"command\",\n            KEYDOWNACTION = \"keydownAction\",\n            CANCEL = \"cancel\",\n\n            TREE_TYPE = \"tree\",\n            DOT = \".\";\n\n        var fileManagerStyles = {\n            wrapper: \"k-widget k-filemanager\",\n            header: \"k-filemanager-header\",\n            navigation: \"k-filemanager-navigation\",\n            contentContainer: \"k-filemanager-content-container\",\n            content: \"k-filemanager-content\",\n            preview: \"k-filemanager-preview\",\n            toolbar: \"k-filemanager-toolbar\",\n            treeview: \"k-filemanager-treeview\",\n            breadcrumb: \"k-filemanager-breadcrumb\",\n            view: \"k-filemanager-view\",\n            grid: \"k-filemanager-grid\",\n            list: \"k-filemanager-listview\",\n            upload: \"k-filemanager-upload\",\n            uploadDialog: \"k-filemanager-upload-dialog\",\n            splitBar: \"k-splitbar\",\n            splitBarHorizontal: \"k-splitbar-horizontal k-splitbar-draggable-horizontal\",\n            splitBarHover: \"k-splitbar-horizontal-hover\",\n            splitBarIcon: \"k-icon k-resize-handle\",\n            splitBarNavigation: \"k-filemanager-splitbar-navigation\",\n            splitBarPreview: \"k-filemanager-splitbar-preview\",\n            resizable: \"k-filemanager-resizable\"\n        };\n\n        var fileManagerTemplateStyles = {\n            filePreview: \"k-file-preview\",\n            fileInfo: \"k-file-info\",\n            fileName: \"k-file-name\",\n            fileMeta: \"k-file-meta\",\n            metaLabel: \"k-file-meta-label\",\n            metaValue: \"k-file-meta-value\",\n            extension: \"k-file-type\",\n            size: \"k-file-size\",\n            created: \"k-file-created\",\n            modified: \"k-file-modified\"\n        };\n\n        var viewTypes = {\n            grid: \"grid\",\n            list: \"list\"\n        };\n\n        var NO_FILE_PREVIEW_TEMPLATE = function (ref) {\n                 var styles = ref.styles;\n                 var messages = ref.messages;\n\n                 return \"<div class=\\\"\" + (encode(styles.fileInfo)) + \"\\\">\" +\n                \"<div class=\\\"\" + (encode(styles.filePreview)) + \"\\\">\" +\n                    '<span class=\"k-file-icon k-icon k-i-none\"></span>' +\n                '</div>' +\n                \"<span class=\\\"\" + (encode(styles.fileName)) + \"\\\" k-no-file-selected>\" + (encode(messages.noFileSelected)) + \"</span>\" +\n            '</div>';\n        };\n\n        var SINGLE_FILES_PREVIEW_TEMPLATE = function (ref) {\n            var styles = ref.styles;\n            var selection = ref.selection;\n            var metaFields = ref.metaFields;\n            var messages = ref.messages;\n\n            var result = '';\n            result +=\n            \"<div class=\\\"\" + (encode(styles.fileInfo)) + \"\\\">\" +\n                \"<div class=\\\"\" + (encode(styles.filePreview)) + \"\\\">\" +\n                    kendo.ui.icon({ icon: (!selection[0].isDirectory ? encode(kendo.getFileGroup(selection[0].extension, true)) : \"folder\"), iconClass: \"k-file-icon\", size: \"xxxlarge\" }) +\n                '</div>' +\n                \"<span class=\\\"\" + (encode(styles.fileName)) + \"\\\">\" + (encode(selection[0].name)) + \"</span>\";\n            if (metaFields) {\n                result += \"<dl class=\\\"\" + (encode(styles.fileMeta)) + \"\\\">\";\n                    for (var i = 0; i < metaFields.length; i += 1) {\n                        var field = metaFields[i];\n                        result +=\n                        \"<dt class=\\\"\" + (encode(styles.metaLabel)) + \"\\\">\" + (encode(messages[field])) + \": </dt>\" +\n                        \"<dd class=\\\"\" + (encode(styles.metaValue)) + \" \" + (encode(styles[field])) + \"\\\">\";\n                        if (field == \"size\") {\n                            result += \" \" + (encode(kendo.getFileSizeMessage(selection[0][field])));\n                        } else if (selection[0][field] instanceof Date) {\n                            result += \" \" + (encode(kendo.toString(selection[0][field], \"G\")));\n                        } else if (field == \"extension\") {\n                            result += \" \" + (encode( !selection[0].isDirectory ? kendo.getFileGroup(selection[0].extension) : \"folder\"));\n                        } else {\n                            result += \" \" + (encode(selection[0][field]));\n                        }\n\n                        result += '</dd>' +\n                        '<dd class=\"k-line-break\"></dd>';\n                    }\n\n                    result += '</dl>';\n            }\n\n            result += '</div>';\n            return result;\n        };\n\n        var MULTIPLE_FILES_PREVIEW_TEMPLATE = function (ref) {\n                var styles = ref.styles;\n                var selection = ref.selection;\n                var messages = ref.messages;\n\n                return \"<div class=\\\"\" + (encode(styles.fileInfo)) + \"\\\">\" +\n                \"<div class=\\\"\" + (encode(styles.filePreview)) + \"\\\">\" +\n                    kendo.ui.icon({ icon: \"file\", iconClass: \"k-file-icon\", size: \"xxxlarge\" }) +\n                '</div>' +\n                \"span class=\\\"\" + (encode(styles.fileName)) + \"\\\">\" +\n                    (encode(selection.length)) + \" \" +\n                    \"\" + (encode(messages.items)) +\n                '</span>' +\n            '</div>';\n        };\n\n        var FileManager = DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                DataBoundWidget.fn.init.call(that, element, options);\n\n                that.options = kendo.deepExtend({}, that.options, options);\n\n                that.defaultSortOption = { field: \"name\", dir: \"asc\" };\n                that.folderSortOption = { field: \"isDirectory\", dir: \"desc\" };\n\n                that._commandStack = new ui.filemanager.CommandStack();\n\n                that._dataSource();\n\n                that._wrapper();\n\n                that._renderHeader();\n\n                that._renderContentContainer();\n\n                that._initContextMenu();\n\n                that._renderNavigation();\n\n                that._renderContent();\n\n                that._renderPreview();\n\n                that._initUploadDialog();\n\n                that._resizable();\n\n                that._attachKeyDown();\n\n                that.resize();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            options: {\n                name: \"FileManager\",\n                height: 500,\n                resizable: true,\n                initialView: viewTypes.list,\n                toolbar: {\n                    resizable: true\n                },\n                contextMenu: {},\n                upload: {},\n                uploadUrl: \"\",\n                views: {},\n                breadcrumb: {},\n                draggable: true,\n                dialogs: {\n                    upload: {\n                        width: 530\n                    },\n                    moveConfirm: {\n                        width: 350,\n                        closable: true\n                    },\n                    deleteConfirm: {\n                        width: 360,\n                        closable: true\n                    },\n                    renamePrompt: {\n                        width: 350,\n                        closable: true\n                    }\n                },\n                previewPane: {\n                    metaFields: [\"extension\", \"size\", \"created\", \"modified\"],\n                    noFileTemplate: NO_FILE_PREVIEW_TEMPLATE,\n                    singleFileTemplate: SINGLE_FILES_PREVIEW_TEMPLATE,\n                    multipleFilesTemplate: MULTIPLE_FILES_PREVIEW_TEMPLATE\n                },\n                messages: {\n                    toolbar: {\n                        createFolder: \"New Folder\",\n                        upload: \"Upload\",\n                        sortDirection: \"Sort Direction\",\n                        sortDirectionAsc: \"Sort Direction Ascending\",\n                        sortDirectionDesc: \"Sort Direction Descending\",\n                        sortField: \"Sort By\",\n                        nameField: \"Name\",\n                        sizeField: \"File Size\",\n                        typeField: \"Type\",\n                        dateModifiedField: \"Date Modified\",\n                        dateCreatedField: \"Date Created\",\n                        listView: \"List View\",\n                        gridView: \"Grid View\",\n                        search: \"Search\",\n                        details: \"View Details\",\n                        detailsChecked: \"On\",\n                        detailsUnchecked: \"Off\",\n                        \"delete\": \"Delete\",\n                        rename: \"Rename\"\n                    },\n                    views: {\n                        nameField: \"Name\",\n                        sizeField: \"File Size\",\n                        typeField: \"Type\",\n                        dateModifiedField: \"Date Modified\",\n                        dateCreatedField: \"Date Created\",\n                        items: \"items\",\n                        listLabel: \"FileManager ListView\",\n                        gridLabel: \"FileManager Grid\",\n                        treeLabel: \"FileManager TreeView\"\n                    },\n                    dialogs: {\n                        upload: {\n                            title: \"Upload Files\",\n                            clear: \"Clear List\",\n                            done: \"Done\"\n                        },\n                        moveConfirm: {\n                            title: \"Confirm\",\n                            content: \"<p style='text-align: center;'>Do you want to move or copy?</p>\",\n                            okText: \"Copy\",\n                            cancel: \"Move\",\n                            close: \"close\"\n                        },\n                        deleteConfirm: {\n                            title: \"Confirm\",\n                            content: \"<p style='text-align: center;'>Are you sure you want to delete the selected file(s)?</br>You cannot undo this action.</p>\",\n                            okText: \"Delete\",\n                            cancel: \"Cancel\",\n                            close: \"close\"\n                        },\n                        renamePrompt: {\n                            title: \"Prompt\",\n                            content: \"<p style='text-align: center;'>Enter new name for the file.</p>\",\n                            okText: \"Rename\",\n                            cancel: \"Cancel\",\n                            close: \"close\"\n                        }\n                    },\n                    previewPane: {\n                        noFileSelected: \"No File Selected\",\n                        extension: \"Type\",\n                        size: \"Size\",\n                        created: \"Date Created\",\n                        createdUtc: \"Date Created UTC\",\n                        modified: \"Date Modified\",\n                        modifiedUtc: \"Date Modified UTC\",\n                        items: \"items\"\n                    }\n                }\n            },\n\n            events: [\n                NAVIGATE,\n                SELECT,\n                OPEN,\n                DATABINDING,\n                DATABOUND,\n                ERROR,\n                DROP,\n                EXECUTE,\n                COMMAND\n            ],\n\n            defaultTools: {\n                createFolder: { type: \"button\", name: \"createFolder\", command: \"CreateFolderCommand\", rules: { remote: true } },\n                upload: { type: \"button\", name: \"upload\", command: \"OpenDialogCommand\", options: \"{ \\\"type\\\": \\\"uploadDialog\\\" }\", rules: { remote: true } },\n                sortDirection: {\n                    type: \"buttonGroup\",\n                    buttons: [\n                        { name: \"sortDirectionAsc\", showText: \"overflow\", icon: \"sort-asc-small\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"asc\\\" }\", selected: true },\n                        { name: \"sortDirectionDesc\", showText: \"overflow\", icon: \"sort-desc-small\", togglable: true, group: \"sortDirection\", command: \"SortCommand\", options: \"{ \\\"dir\\\": \\\"desc\\\" }\" }\n                    ]\n                },\n                sortField: {\n                    type: \"splitButton\",\n                    name: \"sortField\",\n                    command: \"SortCommand\",\n                    menuButtons: [\n                        { name: \"nameField\", options: \"{\\\"field\\\": \\\"name\\\"}\", command: \"SortCommand\" },\n                        { name: \"typeField\", options: \"{\\\"field\\\": \\\"extension\\\"}\", command: \"SortCommand\" },\n                        { name: \"sizeField\", options: \"{\\\"field\\\": \\\"size\\\"}\", command: \"SortCommand\" },\n                        { name: \"dateCreatedField\", options: \"{\\\"field\\\": \\\"createdUtc\\\"}\", command: \"SortCommand\" },\n                        { name: \"dateModifiedField\", options: \"{\\\"field\\\": \\\"modifiedUtc\\\"}\", command: \"SortCommand\" }\n                    ]\n                },\n                changeView: {\n                    type: \"buttonGroup\",\n                    buttons: [\n                        { name: \"gridView\", showText: \"overflow\", icon: \"grid-layout\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"grid\" },\n                        { name: \"listView\", showText: \"overflow\", icon: \"grid\", togglable: true, group: \"changeView\", command: \"ChangeViewCommand\", options: \"list\" }\n                    ]\n                },\n                spacer: { type: \"spacer\" },\n                details: {\n                    type: \"component\",\n                    name: \"details\",\n                    items: [{\n                        template: function(data) {\n                            return \"<label for='details-toggle'>\" + data.componentOptions.messages.text + \"</label>\";\n                        },\n                        overflow: \"never\",\n                        componentOptions: {\n                            messages: {\n                                text: \"details\"\n                            }\n                        }\n                    },\n                    {\n                        name: \"details\",\n                        command: \"TogglePaneCommand\",\n                        options: \"{ \\\"type\\\": \\\"preview\\\" }\",\n                        overflow: \"never\",\n                        element: \"<input id='details-toggle' class='k-filemanager-details-toggle' />\",\n                        component: \"Switch\",\n                        componentOptions: {\n                            messages: {\n                                checked: \"detailsChecked\",\n                                unchecked: \"detailsUnchecked\"\n                            },\n                            commandOn: \"change\"\n                        }\n                    }]\n                },\n                search: {\n                    type: \"component\",\n                    name: \"search\",\n                    command: \"SearchCommand\",\n                    options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                    overflow: \"never\",\n                    component: \"TextBox\",\n                    componentOptions: {\n                        placeholder: \"Search\",\n                        icon: \"search\",\n                        commandOn: \"input\"\n                    }\n                }\n            },\n\n            _attachKeyDown: function() {\n                var that = this;\n\n                that.wrapper.on(\"keydown\" + ns, function (e) {\n                    if (e.keyCode === kendo.keys.F10) {\n                        e.preventDefault();\n                        that.toolbar.element.find(\"[tabindex=0]\").first().trigger(\"focus\");\n                    }\n                });\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    dataSourceOptions = options.dataSource || {},\n                    typeSortOrder = that.folderSortOption,\n                    nameSortOrder = that.defaultSortOption,\n                    dataSource;\n\n                if (!(dataSourceOptions instanceof kendo.data.FileManagerDataSource)) {\n                    if (isArray(dataSourceOptions)) {\n                        dataSource = {\n                            data: dataSourceOptions,\n                            autoSync: false,\n                            sort: [typeSortOrder, nameSortOrder]\n                         };\n                    } else {\n                        dataSource = extend(true, dataSourceOptions, {\n                            autoSync: false,\n                            sort: [typeSortOrder, nameSortOrder]\n                        });\n                    }\n\n                    if (dataSourceOptions && isPlainObject(dataSourceOptions.schema)) {\n                        dataSource.schema = dataSourceOptions.schema;\n                    } else if (isPlainObject(kendo.data.schemas.filemanager)) {\n                        dataSource.schema = kendo.data.schemas.filemanager;\n                    }\n                } else {\n                    dataSource = dataSourceOptions;\n                }\n\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._changeHandler = that._change.bind(that);\n                }\n\n                that.dataSource = kendo.data.FileManagerDataSource.create(dataSource)\n                    .bind(ERROR, that._errorHandler)\n                    .bind(CHANGE, that._changeHandler);\n            },\n\n            _error: function(ev) {\n                if (!this.trigger(ERROR, ev)) {\n                    window.console.warn('Error! The requested URL returned ' + ev.xhr.status + ' - ' + ev.xhr.statusText);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    width = options.width,\n                    height = options.height;\n\n                that.wrapper = that.element\n                    .addClass(fileManagerStyles.wrapper);\n\n                if (width) {\n                    that.wrapper.width(width);\n                }\n\n                if (height) {\n                    that.wrapper.height(height);\n                }\n\n                that._resizeHandler = kendo.onResize(function() {\n                    that.resize(true);\n                });\n            },\n\n            _renderHeader: function() {\n                var that = this,\n                    options = that.options;\n\n                if (options.toolbar) {\n                    that.header = $(\"<div />\").addClass(fileManagerStyles.header);\n                }\n\n                that.wrapper.append(that.header);\n\n                if (options.toolbar) {\n                    that._initToolbar();\n                    that.toolbar._tabIndex();\n                }\n            },\n\n            _renderContentContainer: function() {\n                var that = this,\n                    container = $(\"<div />\").addClass(fileManagerStyles.contentContainer);\n\n                that.contentContainer = container;\n\n                that.wrapper.append(that.contentContainer);\n            },\n\n            _initContextMenu: function() {\n                var that = this,\n                    options = that.options,\n                    menuOptions = extend({}, options.contextMenu, {\n                        filemanager: that,\n                        messages: options.messages.toolbar,\n                        target: that.contentContainer,\n                        filter: \"[data-uid]\",\n                        action: that.executeCommand.bind(that),\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n\n                if (options.contextMenu === false) {\n                    return;\n                }\n\n                that.contextMenu = new ui.filemanager.ContextMenu(\"<ul></ul>\", menuOptions);\n\n                that.contextMenu.bind(OPEN, that._cacheFocus.bind(that));\n            },\n\n            _renderNavigation: function() {\n                var that = this;\n\n                that.navigation = $(\"<div />\").addClass(fileManagerStyles.navigation);\n                that.navigation.append(that._initTreeView().element);\n\n                that.contentContainer.append(that.navigation);\n            },\n\n            _renderContent: function() {\n                var that = this,\n                    options = that.options,\n                    toolbar = that.toolbar;\n\n                that.content = $(\"<div />\").addClass(fileManagerStyles.content);\n\n                if (options.breadcrumb) {\n                    that.content.append(that._initBreadcrumb().element);\n                }\n\n                that.content.append(that._initView());\n\n                if (!toolbar || !that._isToolEnabled(that.defaultTools.upload.name)) {\n                    that.content.append(that._initUpload().wrapper.hide());\n                }\n\n                that.contentContainer.append(that.content);\n            },\n\n            _renderPreview: function() {\n                var that = this,\n                    enablePreview = that.options.previewPane;\n\n                if (!enablePreview) {\n                   return;\n                }\n\n                that.preview = $(\"<div />\").addClass(fileManagerStyles.preview);\n                that.previewContainer = $(\"<div />\").addClass(fileManagerStyles.previewContainer);\n                that.preview.append(that.previewContainer);\n\n                that._setPreviewPaneContent();\n\n                that.contentContainer.append(that.preview.hide());\n            },\n\n            _setPreviewPaneContent: function() {\n                var that = this,\n                    options = that.options,\n                    previewPaneMessages = options.messages.previewPane,\n                    previewPaneOptions = options.previewPane,\n                    selection = that.getSelected(),\n                    previewTemplate;\n\n                if (!selection) {\n                    previewTemplate = template(previewPaneOptions.noFileTemplate)({\n                        styles: fileManagerTemplateStyles,\n                        messages: previewPaneMessages\n                    });\n\n                    that.previewContainer.html(previewTemplate);\n                    return;\n                }\n\n                previewTemplate = selection.length === 1 ?\n                    previewPaneOptions.singleFileTemplate :\n                    previewPaneOptions.multipleFilesTemplate;\n\n                previewTemplate = template(previewTemplate)({\n                    styles: fileManagerTemplateStyles,\n                    messages: previewPaneMessages,\n                    selection: selection,\n                    metaFields: previewPaneOptions.metaFields\n                });\n\n                that.previewContainer.html(previewTemplate);\n            },\n\n            _initToolbar: function() {\n                var that = this,\n                    options = that.options,\n                    toolbarElement = $(\"<div />\").addClass(fileManagerStyles.toolbar),\n                    toolbarOptions = extend({}, options.toolbar),\n                    tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n\n                tools = that._processTools(tools);\n                toolbarOptions.tools = tools;\n                toolbarOptions.defaultTools = that.defaultTools;\n                toolbarOptions.parentMessages = that.options.messages.toolbar;\n\n                that.header.append(toolbarElement);\n                that.toolbar = new kendo.ui.ToolBar(toolbarElement, toolbarOptions);\n                that.options.toolbar = that.toolbar.options;\n\n                that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CLOSE, that._toolbarClick.bind(that));\n                that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n\n                return that.toolbar;\n            },\n\n            _processTools: function(tools) {\n                var that = this;\n\n                tools.forEach(function (t) {\n                    var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n\n                    if (rules && rules.remote && that.dataSource.isLocalBinding) {\n                        if (t.rules) {\n                            t.hidden = true;\n                        } else {\n                            that.defaultTools[t].hidden = true;\n                        }\n                    }\n\n                    if (t.name === \"changeView\") {\n                        that.defaultTools[t.name].buttons.forEach(function (b, i) {\n                            if (b.options === that.options.initialView) {\n                                that.defaultTools[t.name].buttons[i].selected = true;\n                            }\n                        });\n                    } else if (t.buttons && t.buttons[0].group === \"changeView\") {\n                        t.buttons.forEach(function (b, i) {\n                            if (b.options === that.options.initialView) {\n                                t.buttons[i].selected = true;\n                            }\n                        });\n                    }\n                });\n\n                return tools;\n            },\n\n            _toolbarClick: function(ev) {\n                var command = $(ev.target).data(\"command\"),\n                    options = $(ev.target).data(\"options\");\n\n                if (!!$(ev.target).val()) {\n                    options = extend({}, options, { value: $(ev.target).val() });\n                }\n\n                if (!command) {\n                    return;\n                }\n\n                this.executeCommand({\n                    command: command,\n                    options: options\n                });\n            },\n\n            _isToolEnabled: function(toolName) {\n                var that = this,\n                    options = that.options.toolbar,\n                    items = options.items || that.defaultTools,\n                    found = false;\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].name == toolName) {\n                        found = true;\n                        break;\n                    }\n                }\n\n                return items[toolName] || found;\n            },\n\n            _initTreeView: function() {\n                var that = this,\n                    treeViewElement = $(\"<div />\").addClass(fileManagerStyles.treeview),\n                    options = that.options.views[TREE_TYPE],\n                    explicitOptions = extend(true, {}, {\n                        dataSource: that.options.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        isLocalBinding: that.dataSource.isLocalBinding\n                    });\n\n                that.treeView = new ui.filemanager.ViewComponents[TREE_TYPE](treeViewElement, options, explicitOptions);\n\n                that.treeView.bind(NAVIGATE, that._navigate.bind(that))\n                             .bind(LOAD, that._load.bind(that))\n                             .bind(DROP, that._drop.bind(that))\n                             .bind(KEYDOWNACTION, that._keydownAction.bind(that));\n\n                return that.treeView;\n            },\n\n            _drop: function(ev) {\n                var that = this;\n\n                if (!that.trigger(DROP, ev) && ev.items.indexOf(ev.target) < 0) {\n                    that._confirm({\n                        type: \"move\",\n                        target: ev.target\n                    }).done(function() {\n                        that.executeCommand({ command: \"CopyCommand\", options: ev });\n                    }).fail(function() {\n                        that.executeCommand({ command: \"MoveCommand\", options: ev });\n                    });\n                }\n            },\n\n            _keydownAction: function(ev) {\n                var that = this,\n                    keyCode = ev.keyCode,\n                    keys = kendo.keys;\n\n                if (keyCode === keys.DELETE) {\n                    that.executeCommand({ command: \"DeleteCommand\", options: { target: ev.target } });\n                }\n\n                if (keyCode === keys.F2) {\n                    that.executeCommand({ command: \"RenameCommand\", options: { target: ev.target } });\n                }\n            },\n\n            _confirm: function(options) {\n                var that = this,\n                    messages = that.options.messages.dialogs[options.type + \"Confirm\"];\n\n                var confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages\n                }, that.options.dialogs[options.type + \"Confirm\"])).data(\"kendoConfirm\");\n\n                confirm.bind(OPEN, that._cacheFocus.bind(that));\n                confirm.bind(HIDE, that._restoreFocus.bind(that, options.target));\n\n                confirm.open();\n\n                confirm.wrapper.removeClass(\"k-confirm\");\n\n                return confirm.result;\n            },\n\n            _prompt: function(options) {\n                var that = this,\n                    messages = this.options.messages.dialogs[options.type + \"Prompt\"];\n\n                var prompt = $(\"<div></div>\").kendoPrompt(extend({}, {\n                    title: messages.title,\n                    content: messages.content,\n                    messages: messages,\n                    value: options.defaultInput\n                },this.options.dialogs[options.type + \"Prompt\"])).data(\"kendoPrompt\");\n\n                prompt.bind(OPEN, that._cacheFocus.bind(that));\n                prompt.bind(CLOSE, that._restoreFocus.bind(that, options.target));\n\n                prompt.open();\n\n                prompt.wrapper.removeClass(\"k-prompt\");\n\n                return prompt.result;\n            },\n\n            _cacheFocus: function() {\n                var that = this,\n                    activeElement = $(document.activeElement),\n                    view = that.view(),\n                    treeView = that.treeView.widgetComponent;\n\n                if (that.contextMenu && that.contextMenu.popup.visible()) {\n                    return;\n                }\n\n                that.treeView._shouldFocus = false;\n\n                if ((treeView.current() && treeView.current().find(\".k-focus\").length) ||\n                    activeElement.hasClass(fileManagerStyles.treeview)) {\n                    that.treeView._shouldFocus = true;\n                    view._focusElement = activeElement;\n                    return;\n                }\n\n                view._focusElement = activeElement.hasClass(fileManagerStyles[that._viewType]) ?\n                    activeElement :\n                    null;\n            },\n\n            _restoreFocus: function(target) {\n                var that = this,\n                    view = that.view();\n\n                if (!target) {\n                    return;\n                }\n\n                if (view._focusElement) {\n                    view._focusElement.trigger(\"focus\");\n                } else if (target.closest && target.closest(\":kendoFocusable\").length) {\n                    target.closest(\":kendoFocusable\").trigger(\"focus\");\n                }\n            },\n\n            _initView: function() {\n                var that = this,\n                    viewWrapper = $(\"<div />\").addClass(fileManagerStyles.view),\n                    initialView = that.options.initialView;\n\n                that.viewWrapper = viewWrapper;\n                that.viewWrapper.append(that.view(initialView));\n\n                return viewWrapper;\n            },\n\n            _initBreadcrumb: function() {\n                var that = this,\n                    options = that.options,\n                    breadcrumbElement = $(\"<nav />\").addClass(fileManagerStyles.breadcrumb),\n                    breadcrumbOptions = extend({}, {\n                        items: [\n                            { type: \"rootitem\", text: \"\" }\n                        ],\n                        change: that._breadcrumbChange.bind(that)\n                    }, options.breadcrumb);\n\n                that.breadcrumb = new ui.Breadcrumb(breadcrumbElement, breadcrumbOptions);\n\n                return that.breadcrumb;\n            },\n\n            _breadcrumbChange: function(ev) {\n                var entry = ev.sender.items().filter(function(item) {\n                    return item.path === ev.value.substring(1);\n                }).shift();\n\n                this._navigate({ path: entry ? entry.id : \"\" });\n            },\n\n            _initUploadDialog: function() {\n                var that = this,\n                    options = that.options,\n                    dialogMessages = options.messages.dialogs.upload,\n                    dialogElement = $(\"<div />\"),\n                    dialogOptions = extend({}, {\n                        title: dialogMessages.title,\n                        modal: true,\n                        visible: false,\n                        width: 500,\n                        actions: [\n                            { text: function () { return dialogMessages.done; }, primary: true },\n                            { text: function () { return dialogMessages.clear; }, action: that._clearUploadFilesList.bind(that) }\n                        ],\n                        messages: dialogMessages\n                    }, options.dialogs.upload),\n                    uploadInstance;\n\n                if (!that._shouldInitUpload()) {\n                    return;\n                }\n\n                uploadInstance = that._initUpload();\n\n                that.uploadDialog = new ui.Dialog(dialogElement, dialogOptions);\n                that.uploadDialog.wrapper.addClass(fileManagerStyles.uploadDialog);\n                that.uploadDialog.element.append(uploadInstance.wrapper);\n\n                that.uploadDialog.bind(OPEN, that._toggleUploadDropZone.bind(that, \"\"));\n                that.uploadDialog.bind(CLOSE, that._toggleUploadDropZone.bind(that, that.viewWrapper));\n\n                return that.uploadDialog;\n            },\n\n            _shouldInitUpload: function() {\n                var that = this,\n                    options = that.options,\n                    shouldInit = false;\n\n                if ((options.uploadUrl || (options.upload.async && options.upload.async.saveUrl)) &&\n                    options.upload !== false) {\n                        shouldInit = true;\n                }\n\n                return shouldInit;\n            },\n\n            _initUpload: function() {\n                var that = this,\n                    options = that.options,\n                    uploadElement = $(\"<input type='file' name='file'/>\").addClass(fileManagerStyles.upload),\n                    uploadOptions = extend(true, {\n                        async: {\n                             autoUpload: true,\n                             saveUrl: options.uploadUrl\n                        },\n                        dropZone: that.viewWrapper\n                    }, options.upload);\n\n                that.upload = new ui.Upload(uploadElement[0], uploadOptions);\n\n                that.upload.bind(UPLOAD, that._sendUploadPathParameter.bind(that));\n                that.upload.bind(SUCCESS, that._success.bind(that));\n\n                return that.upload;\n            },\n\n            _sendUploadPathParameter: function(ev) {\n                ev.data = extend(ev.data, { path: this.path() });\n            },\n\n            _success: function() {\n                this._view.widgetComponent.dataSource.read();\n            },\n\n            _clearUploadFilesList: function() {\n                var that = this,\n                    upload = that.upload;\n\n                if (upload) {\n                    upload.clearAllFiles();\n                }\n            },\n\n            _toggleUploadDropZone: function(zone) {\n                var that = this,\n                    upload = that.upload;\n\n                if (upload) {\n                    upload.setOptions({ dropZone: zone });\n                }\n            },\n\n            _binding: function(ev) {\n                if (this.trigger(DATABINDING, { source: \"view\", action: ev.action, items: ev.items, index: ev.index })) {\n                    ev.preventDefault();\n                }\n            },\n\n            _bound: function() {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n                this.trigger(DATABOUND);\n            },\n\n            _createResizableSplitBar: function(cssClass) {\n                var splitBar = $(\"<div />\")\n                        .addClass(fileManagerStyles.splitBar)\n                        .addClass(fileManagerStyles.splitBarHorizontal)\n                        .addClass(cssClass),\n                    icon = $(\"<span />\").addClass(fileManagerStyles.splitBarIcon);\n\n                splitBar.append(icon);\n\n                splitBar.hover(function() {\n                    $(this).toggleClass(fileManagerStyles.splitBarHover);\n                });\n\n                return splitBar;\n            },\n\n            _initResizableNavigation: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarNavigation),\n                    contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                    navigationWrapper = wrapper.find(DOT + fileManagerStyles.navigation),\n                    contentWrapperWidth,\n                    navigationWrapperWidth;\n\n                splitBar.insertAfter(navigationWrapper);\n\n                that._resizeDraggable.navigation = that.wrapper.find(splitBar)\n                    .end()\n                    .kendoResizable({\n                        handle: DOT + fileManagerStyles.splitBarNavigation,\n                        start: function() {\n                            contentWrapperWidth = contentWrapper.width();\n                            navigationWrapperWidth = navigationWrapper.width();\n                        },\n                        resize: function(e) {\n                            var delta = e.x.initialDelta;\n\n                            if (kendo.support.isRtl(wrapper)) {\n                                delta *= -1;\n                            }\n\n                            if (navigationWrapperWidth + delta < -2 || contentWrapperWidth - delta < -2) {\n                                return;\n                            }\n\n                            navigationWrapper.width(navigationWrapperWidth + delta);\n                        }\n                    }).getKendoResizable();\n            },\n\n            _initResizablePreview: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    splitBar = that._createResizableSplitBar(fileManagerStyles.splitBarPreview),\n                    contentWrapper = wrapper.find(DOT + fileManagerStyles.content),\n                    previewWrapper = wrapper.find(DOT + fileManagerStyles.preview),\n                    contentWrapperWidth,\n                    previewWrapperWidth;\n\n                if (!that.options.previewPane) {\n                    return;\n                }\n\n                splitBar.insertBefore(previewWrapper).hide();\n\n                that._resizeDraggable.preview = wrapper.find(splitBar)\n                    .end()\n                    .kendoResizable({\n                        handle: DOT + fileManagerStyles.splitBarPreview,\n                        start: function() {\n                            contentWrapperWidth = contentWrapper.width();\n                            previewWrapperWidth = previewWrapper.width();\n                        },\n                        resize: function(e) {\n                            var delta = e.x.initialDelta;\n\n                            if (kendo.support.isRtl(wrapper)) {\n                                delta *= -1;\n                            }\n\n                            if (previewWrapperWidth - delta < -2 || contentWrapperWidth + delta < -2) {\n                                return;\n                            }\n\n                            previewWrapper.width(previewWrapperWidth - delta);\n                        }\n                    }).getKendoResizable();\n            },\n\n            _resizable: function() {\n                var that = this,\n                    options = that.options;\n\n                that._resizeDraggable = {};\n\n                if (!options.resizable) {\n                    return;\n                }\n\n                that.wrapper.addClass(fileManagerStyles.resizable);\n\n                that._initResizableNavigation();\n\n                that._initResizablePreview();\n            },\n\n            view: function(type) {\n                var that = this,\n                    element = $('<div></div>'),\n                    options = that.options.views[type],\n                    explicitOptions = extend(true, {}, {\n                        dataSource: that._viewDataSource || that.dataSource,\n                        messages: that.options.messages.views,\n                        draggable: that.options.draggable,\n                        ariaLabel: that.options.messages.views[type + \"Label\"]\n                    });\n\n                if (type === undefined$1) {\n                    return that._view;\n                }\n\n                if (!ui.filemanager.ViewComponents[type]) {\n                    throw new Error(kendo.format(\"There is no {0} ViewComponent registered!\", type));\n                }\n\n                if (that._view && that._view.destroy) {\n                    that._view.destroy();\n                    that.viewWrapper.empty();\n                }\n\n                that._viewType = type;\n                that._view = new ui.filemanager.ViewComponents[type](element, options, explicitOptions);\n\n                that._view.bind(SELECT, that._select.bind(that));\n                that._view.bind(OPEN, that._open.bind(that));\n                that._view.bind(DATABINDING, that._binding.bind(that));\n                that._view.bind(DATABOUND, that._bound.bind(that));\n                that._view.bind(DROP, that._drop.bind(that));\n                that._view.bind(KEYDOWNACTION, that._keydownAction.bind(that));\n                that._view.bind(CANCEL, that._cancel.bind(that));\n\n                that._view.element.addClass(fileManagerStyles[type]);\n\n                that.viewWrapper\n                    .removeClass(\n                        Object.keys(ui.filemanager.ViewComponents).map(function(el) {\n                            return fileManagerStyles.view + \"-\" + el;\n                        }).join(\" \")\n                    )\n                    .addClass(fileManagerStyles.view + \"-\" + type);\n\n                that.viewWrapper.append(that._view.element);\n            },\n\n            executeCommand: function(args) {\n                var commandName = args.command,\n                    commandOptions = extend({ filemanager: this }, isPlainObject(args.options) ? args.options : { value: args.options }),\n                    command = new ui.filemanager.commands[commandName](commandOptions);\n\n                if (!this.trigger(EXECUTE, args)) {\n                    return command.exec();\n                }\n            },\n\n            _navigate: function(ev) {\n                var that = this,\n                    path = ev.path;\n\n                if (!that.trigger(NAVIGATE, { path: path })) {\n                    that.navigate(path);\n                }\n            },\n\n            _load: function(ev) {\n                var entry = this.dataSource.get(ev.entryId);\n                entry.load();\n            },\n\n            _select: function(ev) {\n                if (this.options.previewPane) {\n                    this._setPreviewPaneContent();\n                }\n\n                this.trigger(SELECT, { entries: ev.entries });\n            },\n\n            _open: function(ev) {\n                var that = this,\n                    entry = ev.entry;\n\n                that.trigger(OPEN, { entry: entry });\n\n                if (entry.isDirectory) {\n                    that._navigate({ path: entry.id });\n                }\n            },\n\n            _cancel: function() {\n                var that = this,\n                    commandStack = that._commandStack,\n                    command = commandStack.next();\n\n                commandStack.reject(command);\n                that.trigger(COMMAND, { status: \"cancel\", action: \"itemchange\", data: command.data });\n            },\n\n            _change: function(ev) {\n                var that = this,\n                    commandStack = that._commandStack,\n                    targetDataSource = ev.node ? ev.node.children : that.dataSource;\n\n                if (that.trigger(DATABINDING, { source: \"tree\", action: ev.action, items: ev.items, index: ev.index })) {\n                    return;\n                }\n\n                that.treeView._refreshDataSource(ev);\n\n                if (ev.action === \"remove\" || ev.action === \"itemchange\" || ev.action === \"add\") {\n                    if (commandStack.empty()) {\n                        targetDataSource.sync();\n                    } else {\n                        var command = commandStack.next();\n\n                        targetDataSource.sync().then(function(res) {\n                            commandStack.resolve(command);\n                            that.trigger(COMMAND, { status: \"success\", action: ev.action, data: command.data, response: res });\n                        }).fail(function(res) {\n                            commandStack.reject(command);\n                            that.trigger(COMMAND, { status: \"fail\", action: ev.action, data: command.data, response: res });\n                        });\n                    }\n                }\n\n                if (ev.action === \"remove\" && that._viewDataSource && that._viewDataSource.parent() && ev.items[0] === that._viewDataSource.parent()) {\n                    that._navigateToParent(ev.items[0]);\n                }\n\n                if (ev.action == \"itemchange\" && that._viewDataSource && that._viewDataSource.parent() && that.path().indexOf(ev.items[0].id) >= 0) {\n                    that._navigateToParent(ev.items[0]);\n                }\n\n                if (ev.action === \"itemchange\") {\n                    ev.items[0].loaded(false);\n                }\n            },\n\n            _navigateToParent: function(item) {\n                var that = this;\n                var parent = item.parentNode();\n                var parentNodePath = parent ? parent.id : \"\";\n                that._navigate({ path: parentNodePath });\n            },\n\n            _buildBreadcrumbPath: function(entry) {\n                var that = this,\n                    breadcrumb = that.breadcrumb,\n                    items = [];\n\n                while (entry) {\n                    items.push({\n                        id: entry.id,\n                        text: entry.name,\n                        path: entry.path\n                    });\n\n                    entry = entry.parentNode && entry.parentNode();\n                }\n\n                items.push({ type: \"rootItem\", id: \"\", text: \"\" });\n\n                breadcrumb.items(items.reverse());\n            },\n\n            _adjustDimensions: function() {\n                var that = this,\n                    wrapper = that.wrapper,\n                    gridSelector = DOT + fileManagerStyles.grid,\n                    listViewSelector = DOT + fileManagerStyles.list,\n                    contentContainer = DOT + fileManagerStyles.contentContainer,\n                    totalHeight = wrapper.height(),\n                    toolbarHeight = 0,\n                    breadcrumbHeight = 0;\n\n                if (that.toolbar) {\n                    toolbarHeight = outerHeight(that.toolbar.wrapper);\n                }\n\n                if (that.breadcrumb) {\n                    breadcrumbHeight = outerHeight(that.breadcrumb.wrapper);\n                }\n\n                if (that.options.height !== \"auto\") {\n                    wrapper\n                        .find([gridSelector].join(\",\"))\n                        .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                    wrapper\n                        .find(listViewSelector)\n                        .parent()\n                        .height(totalHeight - (toolbarHeight + breadcrumbHeight + 1));\n\n                    wrapper\n                        .find(contentContainer)\n                        .height(totalHeight - toolbarHeight);\n                }\n            },\n\n            _resize: function() {\n                this._adjustDimensions();\n                kendo.resize(this.element.children());\n            },\n\n            setDataSource: function(dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                    that.header.empty();\n                    that._initToolbar();\n                    that.toolbar._tabIndex();\n                }\n\n                if (that.treeView) {\n                    that.treeView.destroy();\n                    that.navigation.empty();\n                    that.navigation.append(that._initTreeView().element);\n                }\n\n                if (that._view) {\n                    that.view(that._viewType || that.options.initialView);\n                }\n\n                that._initContextMenu();\n\n            },\n\n            refresh: function() {\n                var that = this,\n                    dataSource = that._viewDataSource || that.dataSource;\n\n                dataSource.read();\n            },\n\n            getSize: function() {\n                return kendo.dimensions(this.wrapper);\n            },\n\n            getSelected: function() {\n                var that = this,\n                    items = that._view.getSelected(),\n                    treeView = that.treeView;\n\n                if (items && items.length) {\n                    return items;\n                }\n\n                var item = treeView.getSelected();\n\n                if (item) {\n                    return [ that.dataSource.get(item.id) ];\n                }\n            },\n\n            path: function() {\n                return this._path || \"\";\n            },\n\n            navigate: function(path) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    entry = dataSource.get(path.replace(/^\\//, \"\")),\n                    view = that._view,\n                    treeView = that.treeView,\n                    breadcrumb = that.breadcrumb,\n                    isRoot = path === \"\" || path === \"/\";\n\n                if (!entry && !isRoot) {\n                    window.console.warn('Error! Could not navigate to the folder at the requested path(' + path + '). Make sure that the parent folder of the target folder has already been loaded.');\n                    return;\n                }\n\n                that._path = path;\n\n                if (that.trigger(DATABINDING, { source: \"navigation\", action: \"rebind\", items: [entry] })) {\n                    return;\n                }\n\n                if (breadcrumb) {\n                    that._buildBreadcrumbPath(entry);\n                }\n\n                if (isRoot) {\n                    dataSource.sort([ that.folderSortOption, that.defaultSortOption ]);\n                    that._viewDataSource = dataSource;\n                    view.refresh(that._viewDataSource);\n                    treeView.treeView.select($());\n\n                    if (that.options.previewPane) {\n                        that._setPreviewPaneContent();\n                    }\n\n                    return;\n                }\n\n                if (entry.loaded && !entry.loaded()) {\n                    entry.load();\n                }\n\n                if (view) {\n                    that._viewDataSource = entry.children;\n                    that._viewDataSource._sort = [ that.folderSortOption, that.defaultSortOption ];\n                    view.refresh(that._viewDataSource);\n                }\n\n                if (treeView) {\n                    treeView.refresh(entry.id);\n                }\n\n                if (that.options.previewPane) {\n                    that._setPreviewPaneContent();\n                }\n            },\n\n            items: function() {\n                var that = this;\n\n                return that.treeView.widgetComponent.items().add(that._view.widgetComponent.items());\n            },\n\n            destroy: function() {\n                var that = this;\n\n                DataBoundWidget.fn.destroy.call(that);\n\n                that.dataSource\n                    .unbind(ERROR, that._errorHandler)\n                    .unbind(CHANGE, that._changeHandler);\n\n                if (that._resizeDraggable.navigation) {\n                    that._resizeDraggable.navigation.destroy();\n                    that._resizeDraggable.navigation = null;\n                }\n\n                if (that._resizeDraggable.preview) {\n                    that._resizeDraggable.preview.destroy();\n                    that._resizeDraggable.preview = null;\n                }\n\n                if (that.uploadDialog) {\n                    that.uploadDialog.destroy();\n                    that.uploadDialog = null;\n                }\n\n                if (that.upload) {\n                    that.upload.destroy();\n                    that.upload = null;\n                }\n\n                if (that.contextMenu) {\n                    that.contextMenu.destroy();\n                    that.contextMenu = null;\n                }\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.dataSource = null;\n                that._viewDataSource = null;\n\n                kendo.destroy(that.element);\n            }\n        });\n\n        ui.plugin(FileManager);\n    })(window.kendo.jQuery);\n\n}));\n"]}