{"version":3,"file":"kendo.dataviz.gauge.min.js","names":["factory","define","amd","$","window","kendo","dataviz","getSpacing","defined","constants","BLACK","COORD_PRECISION","services","deepExtend","isArray","setDefaultOptions","NumericAxis","limitValue","Box","interpolateValue","round","drawing","DrawingGroup","Group","DrawingPath","Path","Animation","AnimationFactory","geometry","Rect","GeometryPoint","Point","transform","ANGULAR_SPEED","ARROW_POINTER","BAR_POINTER","DEFAULT_LINE_WIDTH","DEGREE","Math","PI","INSIDE","LINEAR","OUTSIDE","RADIAL_POINTER","RADIAL_RANGE_POINTER","pad","bbox","value","origin","getOrigin","size","getSize","spacing","setOrigin","x","left","y","top","setSize","width","right","height","bottom","Path$1","Text","buildLabelElement","label","options","labelBox","box","textBox","children","border","background","wrapper","fromRect","x1","y1","stroke","text","font","fill","color","styleGeometry","clone","padding","styleBox","opacity","dashType","lineJoin","lineCap","elements","append","getRange","range","min","max","from","MIN_VALUE","to","MAX_VALUE","unpad","Surface","Gauge","Class","extend","init","element","userOptions","theme","context","this","contextService","ChartService","_originalOptions","_initTheme","redraw","destroy","surface","surfaceElement","pointerValue","pointer","pointers","arguments","length","_setValueOptions","_draw","clear","draw","_visuals","exportVisual","allValues","values","i","push","i$1","isNumber","concat","arrayValues","resize","noTransitionsRedraw","transitions","_toggleTransitions","_surfaceSize","_initSurface","gaugeArea","_createGaugeArea","_createModel","_gaugeAreaMargin","reflow","setOptions","setDirection","rtl","Boolean","type","setIntlService","intl","currentTheme","areaGeometry","margin","_surfaceElement","elementSize","renderAs","create","_getSize","document","createElement","appendChild","defaultSize","_defaultSize","offsetWidth","offsetHeight","animation","plotArea","scale","Path$2","Group$2","renderAxisTick","tickRenderOptions","tickOptions","start","end","position","tickX","tickY","vertical","moveTo","lineTo","renderTicks","tickGroup","tickPositions","count","visible","mirror","lineBox","skip","step","skipUnit","x2","LinearScale","service","scaleOptions","reverse","fn","call","minorUnit","majorUnit","initUserOptions","labels","autoMajorUnit","initFields","render","renderLabels","scaleLine","renderLine","scaleTicks","ranges","renderRanges","this$1$1","rangeSize","minorTicks","slot","getSlot","slotX","slotY","y2","line","linePath","ticks","majorTicks","getMajorTickPositions","getMinorTickPositions","align","_alignLines","Pointer","ref","newValue","_oldValue","repaint","LinearPointer","track","pointerBox","pointerRangeBox","trackBox","ref$1","trackSize","pointerHalfSize","space","shape","getElementOptions","_margin","ArrowLinearPointerAnimation","setup","axis","fromScale","toScale","duration","distanceTo","pos","translateX","translateY","translate","easing","current","register","Point$1","Path$3","ArrowLinearPointer","pointerShape","halfSize","sign","play","elementOptions","close","BarLinearPointerAnimation","Y","X","newPoints","oldPoints","abs","speed","_set","setter","toUpperCase","points","Group$3","Path$4","BarLinearPointer","dir","minSlot","sizeAxis","p1","p2","p3","p4","pointerPath","oldShape","group","renderTrack","trackOptions","toRect","Group$1","LinearGauge","bboxX","bboxY","_shrinkScaleWidth","_getBox","_alignElements","_shrinkElements","_buildVisual","visuals","scaleElements","currentOptions","pointerType","boxCenter","center","plotAreaBox","wrap","diff","scaleBox","overflow","contentBox","shrink","alignTo","GEO_ARC_ADJUST_ANGLE","Arc","Path$5","Group$5","drawTicks","arc","tickAngles","unit","radius","getRadiusX","tickStart","pointAt","tickEnd","rotate","rangeSegment","RadialScale","renderArc","labelElements","repositionRanges","slotAngle","startAngle","endAngle","angle","hasRanges","ticksSize","labelsCount","labelsGroup","rangeDistance","labelsOptions","isInside","hasLabelElements","setRadiusX","setRadiusY","paddingWidth","paddingHeight","halfWidth","halfHeight","labelAngle","lp","cx","cos","cy","sin","labelPos","labelElement","prevLabelPos","labelTransform","union","rangeRadius","getRangeRadius","newRadius","_geometry","segments","rangeSegments","segmentsCount","result","segment","createRange","rangeGeom","radiusX","radiusY","defaultColor","rangePlaceholderColor","j","majorTickSize","tickArc","majorTickAngles","allTicks","minorTickSize","_tickDifference","minorTickAngles","normalizeTickAngles","angles","splice","ring","stepValue","tickCount","positions","repositionTicks","minor","newPoint","xDiff","anchor","yDiff","RadialPointerAnimation","animationOptions","newAngle","oldAngle","Circle","Group$6","Path$6","RadialPointer","setAngle","_renderNeedle","_renderCap","capSize","cap","fromPoints","needleColor","needlePath","capColor","circle","arrow","Group$4","RadialGauge","_initialPlotArea","fitScale","alignScale","_buildPointers","minDiff","midDiff","maxDiff","mid","oldDiff","getDiff","staleFlag","getPlotBox","scaleArc","plotBbox","plotBox","plotBoxCenter","paddingX","paddingY","pointersArr","ArcScale","rangeLineCap","placeholderRangeAngle","geometry$$1","setEndAngle","setStartAngle","addRange","RangePointerAnimation","startColor","get","currentColor","Color","r","g","b","toHex","RangePointer","abort","colors","currentValue","idx","ref$2","rangeColor","ArcGauge","centerLabelPosition","yLimit","bottomRight","CircularGauge","jQuery","Widget","ui","themeOptions","themes","themeName","lowerName","toLowerCase","SASS_THEMES","indexOf","autoTheme","gauge","empty","_createInstance","addClass","notify","_instance","_copyFields","gaugeType","_gaugeType","_resize","proxyMembers","createProxyMember","name","apply","ExportMixin","RadialGaugeWidget","LinearGaugeWidget","ArcGaugeWidget","css","_centerTemplate","instance","_centerElement","centerTemplate","template","centerElement","_getCenterElement","html","remove","CircularGaugeWidget","createExportMethod","method","drawDOM","then","visual","exportMethods","plugin"],"sources":["kendo.dataviz.gauge.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.color', 'kendo.drawing', 'kendo.dataviz.core', 'kendo.dataviz.themes'], factory) :\n    factory();\n})((function () {\n    /***********************************************************************\n     * WARNING: this file is auto-generated.  If you change it directly,\n     * your modifications will eventually be lost.  The source code is in\n     * `kendo-charts` repository, you should make your changes there and\n     * run `src-modules/sync.sh` in this repository.\n     */\n\n    (function($) {\n    /* eslint-disable space-before-blocks, space-before-function-paren */\n\n    window.kendo.dataviz = window.kendo.dataviz || {};\n    var dataviz = kendo.dataviz;\n    var getSpacing = dataviz.getSpacing;\n    var defined = dataviz.defined;\n    var constants = dataviz.constants;\n    var BLACK = constants.BLACK;\n    var COORD_PRECISION = constants.COORD_PRECISION;\n    var services = dataviz.services;\n    var deepExtend = dataviz.deepExtend;\n    var isArray = dataviz.isArray;\n    var setDefaultOptions = dataviz.setDefaultOptions;\n    var NumericAxis = dataviz.NumericAxis;\n    var limitValue = dataviz.limitValue;\n    var Box = dataviz.Box;\n    var interpolateValue = dataviz.interpolateValue;\n    var round = dataviz.round;\n    var drawing = kendo.drawing;\n    var DrawingGroup = drawing.Group;\n    var DrawingPath = drawing.Path;\n    var Animation = drawing.Animation;\n    var AnimationFactory = drawing.AnimationFactory;\n    var geometry = kendo.geometry;\n    var Rect = geometry.Rect;\n    var GeometryPoint = geometry.Point;\n    var transform = geometry.transform;\n\n    var ANGULAR_SPEED = 150;\n    var LINEAR_SPEED = 250;\n    var ARROW = \"arrow\";\n    var ARROW_POINTER = \"arrowPointer\";\n    var BAR_POINTER = \"barPointer\";\n    var DEFAULT_HEIGHT = 200;\n    var DEFAULT_LINE_WIDTH = 0.5;\n    var DEFAULT_WIDTH = 200;\n    var DEGREE = Math.PI / 180;\n    var INSIDE = \"inside\";\n    var LINEAR = \"linear\";\n    var OUTSIDE = \"outside\";\n    var RADIAL_POINTER = \"radialPointer\";\n    var RADIAL_RANGE_POINTER = \"radialRangePointer\";\n\n    function pad(bbox, value) {\n        var origin = bbox.getOrigin();\n        var size = bbox.getSize();\n        var spacing = getSpacing(value);\n\n        bbox.setOrigin([ origin.x - spacing.left, origin.y - spacing.top ]);\n        bbox.setSize([ size.width + (spacing.left + spacing.right), size.height + (spacing.top + spacing.bottom) ]);\n\n        return bbox;\n    }\n\n    var Group = DrawingGroup;\n    var Path$1 = DrawingPath;\n    var Text = drawing.Text;\n\n    function buildLabelElement(label, options) {\n        var labelBox = label.box;\n        var textBox = label.children[0].box;\n        var border = options.border || {};\n        var background = options.background || \"\";\n\n        var wrapper = Path$1.fromRect(new Rect([ labelBox.x1, labelBox.y1 ], [ labelBox.width(), labelBox.height() ]), {\n            stroke: {}\n        });\n\n        var text = new Text(label.text, new GeometryPoint(textBox.x1, textBox.y1), {\n            font: options.font,\n            fill: { color: options.color }\n        });\n\n        var styleGeometry = pad(text.bbox().clone(), options.padding);\n\n        var styleBox = Path$1.fromRect(styleGeometry, {\n            stroke: {\n                color: border.width ? border.color : \"\",\n                width: border.width,\n                opacity: border.opacity,\n                dashType: border.dashType,\n                lineJoin: \"round\",\n                lineCap: \"round\"\n            },\n            fill: {\n                color: background\n            }\n        });\n\n        var elements = new Group();\n        elements.append(wrapper);\n        elements.append(styleBox);\n        elements.append(text);\n\n        return elements;\n    }\n\n    function getRange(range, min, max) {\n        var from = defined(range.from) ? range.from : constants.MIN_VALUE;\n        var to = defined(range.to) ? range.to : constants.MAX_VALUE;\n\n        range.from = Math.max(Math.min(to, from), min);\n        range.to = Math.min(Math.max(to, from), max);\n\n        return range;\n    }\n\n    function unpad(bbox, value) {\n        var spacing = getSpacing(value);\n\n        spacing.left = -spacing.left; spacing.top = -spacing.top;\n        spacing.right = -spacing.right; spacing.bottom = -spacing.bottom;\n\n        return pad(bbox, spacing);\n    }\n\n    var DEFAULT_MARGIN = 5;\n    var Path = DrawingPath;\n    var Surface = drawing.Surface;\n\n    var Gauge = dataviz.Class.extend({\n        init: function(element, userOptions, theme, context) {\n            if (context === void 0) { context = {}; }\n\n            this.element = element;\n            this.theme = theme;\n            this.contextService = new services.ChartService(this, context);\n            this._originalOptions = deepExtend({}, this.options, userOptions);\n            this.options = deepExtend({}, this._originalOptions);\n            this._initTheme(theme);\n\n            this.redraw();\n        },\n\n        destroy: function() {\n            if (this.surface) {\n                this.surface.destroy();\n                this.surface = null;\n            }\n\n            delete this.element;\n            delete this.surfaceElement;\n        },\n\n        value: function(pointerValue) {\n            var pointer = this.pointers[0];\n\n            if (arguments.length === 0) {\n                return pointer.value();\n            }\n\n            pointer.value(pointerValue);\n            this._setValueOptions(pointerValue);\n        },\n\n        _draw: function() {\n            var surface = this.surface;\n\n            surface.clear();\n            surface.draw(this._visuals);\n        },\n\n        exportVisual: function() {\n            return this._visuals;\n        },\n\n        allValues: function(values) {\n            var pointers = this.pointers;\n            var allValues = [];\n\n            if (arguments.length === 0) {\n                for (var i = 0; i < pointers.length; i++) {\n                    allValues.push(pointers[i].value());\n                }\n\n                return allValues;\n            }\n\n            if (isArray(values)) {\n                for (var i$1 = 0; i$1 < values.length; i$1++) {\n                    if (dataviz.isNumber(values[i$1])) {\n                        pointers[i$1].value(values[i$1]);\n                    }\n                }\n            }\n\n            this._setValueOptions(values);\n        },\n\n        _setValueOptions: function(values) {\n            var pointers = [].concat(this.options.pointer);\n            var arrayValues = [].concat(values);\n\n            for (var i = 0; i < arrayValues.length; i++) {\n                pointers[i].value = arrayValues[i];\n            }\n        },\n\n        resize: function() {\n            this.noTransitionsRedraw();\n        },\n\n        noTransitionsRedraw: function() {\n            var transitions = this.options.transitions;\n\n            this._toggleTransitions(false);\n\n            this.redraw();\n\n            this._toggleTransitions(transitions);\n        },\n\n        redraw: function() {\n            var size = this._surfaceSize();\n            var wrapper = new Rect([ 0, 0 ], [ size.width, size.height ]);\n\n            this._initSurface();\n\n            this.gaugeArea = this._createGaugeArea();\n\n            this._createModel();\n\n            var bbox = unpad(wrapper.bbox(), this._gaugeAreaMargin);\n            this.reflow(bbox);\n        },\n\n        setOptions: function(options, theme) {\n            this._originalOptions = deepExtend(this._originalOptions, options);\n            this.options = deepExtend({}, this._originalOptions);\n\n            this._initTheme(theme);\n\n            this.redraw();\n        },\n\n        setDirection: function(rtl) {\n            this.contextService.rtl = Boolean(rtl);\n            if (this.surface && this.surface.type === 'svg') {\n                this.surface.destroy();\n                this.surface = null;\n            }\n        },\n\n        setIntlService: function(intl) {\n            this.contextService.intl = intl;\n        },\n\n        _initTheme: function(theme) {\n            var currentTheme = theme || this.theme || {};\n            this.theme = currentTheme;\n\n            this.options = deepExtend({}, currentTheme, this.options);\n            var options = this.options;\n            var pointer = options.pointer;\n\n            if (isArray(pointer)) {\n                var pointers = [];\n                for (var i = 0; i < pointer.length; i++) {\n                    pointers.push(deepExtend({}, currentTheme.pointer, pointer[i]));\n                }\n                options.pointer = pointers;\n            }\n        },\n\n        _createGaugeArea: function() {\n            var options = this.options.gaugeArea;\n            var size = this.surface.size();\n            var border = options.border || {};\n            var areaGeometry = new Rect([ 0, 0 ], [ size.width, size.height ]);\n\n            this._gaugeAreaMargin = options.margin || DEFAULT_MARGIN;\n\n            if (border.width > 0) {\n                areaGeometry = unpad(areaGeometry, border.width);\n            }\n\n            var gaugeArea = Path.fromRect(areaGeometry, {\n                stroke: {\n                    color: border.width ? border.color : \"\",\n                    width: border.width,\n                    dashType: border.dashType,\n                    lineJoin: \"round\",\n                    lineCap: \"round\"\n                },\n                fill: {\n                    color: options.background\n                }\n            });\n\n            return gaugeArea;\n        },\n\n        _initSurface: function() {\n            var ref = this;\n            var options = ref.options;\n            var surface = ref.surface;\n            var element = this._surfaceElement();\n            var size = this._surfaceSize();\n\n            dataviz.elementSize(element, size);\n\n            if (!surface || surface.options.type !== options.renderAs) {\n                if (surface) {\n                    surface.destroy();\n                }\n\n                this.surface = Surface.create(element, {\n                    type: options.renderAs\n                });\n            } else {\n                this.surface.clear();\n                this.surface.resize();\n            }\n        },\n\n        _surfaceSize: function() {\n            var options = this.options;\n            var size = this._getSize();\n\n            if (options.gaugeArea) {\n                deepExtend(size, options.gaugeArea);\n            }\n\n            return size;\n        },\n\n        _surfaceElement: function() {\n            if (!this.surfaceElement) {\n                this.surfaceElement = document.createElement('div');\n                this.element.appendChild(this.surfaceElement);\n            }\n\n            return this.surfaceElement;\n        },\n\n        getSize: function() {\n            return this._getSize();\n        },\n\n        _getSize: function() {\n            var element = this.element;\n            var defaultSize = this._defaultSize();\n            var width = element.offsetWidth;\n            var height = element.offsetHeight;\n\n            if (!width) {\n                width = defaultSize.width;\n            }\n\n            if (!height) {\n                height = defaultSize.height;\n            }\n\n            return { width: width, height: height };\n        },\n\n        _defaultSize: function() {\n            return {\n                width: DEFAULT_WIDTH,\n                height: DEFAULT_HEIGHT\n            };\n        },\n\n        _toggleTransitions: function(value) {\n            var this$1$1 = this;\n\n            this.options.transitions = value;\n            for (var i = 0; i < this.pointers.length; i++) {\n                this$1$1.pointers[i].options.animation.transitions = value;\n            }\n        }\n    });\n\n    setDefaultOptions(Gauge, {\n        plotArea: {},\n        theme: \"default\",\n        renderAs: \"\",\n        pointer: {},\n        scale: {},\n        gaugeArea: {}\n    });\n\n    var Path$2 = DrawingPath;\n    var Group$2 = DrawingGroup;\n    var Point = GeometryPoint;\n\n    function renderAxisTick(tickRenderOptions, tickOptions) {\n        var position = tickRenderOptions.position;\n        var tickX = tickRenderOptions.tickX;\n        var tickY = tickRenderOptions.tickY;\n        var start, end;\n\n        if (tickRenderOptions.vertical) {\n            start = new Point(tickX, position);\n            end = new Point(tickX + tickOptions.size, position);\n        } else {\n            start = new Point(position, tickY);\n            end = new Point(position, tickY + tickOptions.size);\n        }\n\n        var tickPath = new Path$2({\n            stroke: {\n                color: tickOptions.color,\n                width: tickOptions.width\n            }\n        }).moveTo(start).lineTo(end);\n\n        return tickPath;\n    }\n\n    function renderTicks(tickGroup, tickPositions, tickRenderOptions, tickOptions) {\n        var count = tickPositions.length;\n\n        if (tickOptions.visible) {\n            var mirror = tickRenderOptions.mirror;\n            var lineBox = tickRenderOptions.lineBox;\n            for (var i = tickOptions.skip; i < count; i += tickOptions.step) {\n                if (i % tickOptions.skipUnit === 0) {\n                    continue;\n                }\n\n                tickRenderOptions.tickX = mirror ? lineBox.x2 : lineBox.x2 - tickOptions.size;\n                tickRenderOptions.tickY = mirror ? lineBox.y1 - tickOptions.size : lineBox.y1;\n                tickRenderOptions.position = tickPositions[i];\n\n                tickGroup.append(renderAxisTick(tickRenderOptions, tickOptions));\n            }\n        }\n    }\n\n    var LinearScale = NumericAxis.extend({\n        init: function(options, service) {\n            var scaleOptions = options || {};\n            if (!defined(scaleOptions.reverse) && scaleOptions.vertical === false && (service || {}).rtl) {\n                scaleOptions = $.extend({}, scaleOptions, {\n                    reverse: true\n                });\n            }\n\n            NumericAxis.fn.init.call(this, 0, 1, scaleOptions, service);\n\n            this.options.minorUnit = this.options.minorUnit || this.options.majorUnit / 10;\n        },\n\n        initUserOptions: function(options) {\n            var scaleOptions = deepExtend({}, this.options, options);\n            scaleOptions = deepExtend({}, scaleOptions , { labels: { mirror: scaleOptions.mirror } });\n            scaleOptions.majorUnit = scaleOptions.majorUnit || dataviz.autoMajorUnit(scaleOptions.min, scaleOptions.max);\n\n            return scaleOptions;\n        },\n\n        initFields: function() {\n        },\n\n        render: function() {\n            var elements = this.elements = new Group$2();\n            var labels = this.renderLabels();\n            var scaleLine = this.renderLine();\n            var scaleTicks = this.renderTicks();\n            var ranges = this.renderRanges();\n\n            elements.append(scaleLine, labels, scaleTicks, ranges);\n\n            return elements;\n        },\n\n        renderRanges: function() {\n            var this$1$1 = this;\n\n            var options = this.options;\n            var min = options.min;\n            var max = options.max;\n            var vertical = options.vertical;\n            var mirror = options.labels.mirror;\n            var ranges = options.ranges || [];\n            var elements = new Group$2();\n            var count = ranges.length;\n            var rangeSize = options.rangeSize || options.minorTicks.size / 2;\n\n            for (var i = 0; i < count; i++) {\n                var range = getRange(ranges[i], min, max);\n                var slot = this$1$1.getSlot(range.from, range.to);\n                var slotX = vertical ? this$1$1.lineBox() : slot;\n                var slotY = vertical ? slot : this$1$1.lineBox();\n                if (vertical) {\n                    slotX.x1 -= rangeSize * (mirror ? -1 : 1);\n                } else {\n                    slotY.y2 += rangeSize * (mirror ? -1 : 1);\n                }\n\n                elements.append(Path$2.fromRect(new Rect([ slotX.x1, slotY.y1 ], [ slotX.x2 - slotX.x1, slotY.y2 - slotY.y1 ]), {\n                    fill: { color: range.color, opacity: range.opacity },\n                    stroke: { }\n                }));\n            }\n\n            return elements;\n        },\n\n        renderLabels: function() {\n            var ref = this;\n            var labels = ref.labels;\n            var options = ref.options;\n            var elements = new Group$2();\n\n            for (var i = 0; i < labels.length; i++) {\n                elements.append(buildLabelElement(labels[i], options.labels));\n            }\n\n            return elements;\n        },\n\n        renderLine: function() {\n            var line = this.options.line;\n            var lineBox = this.lineBox();\n            var elements = new Group$2();\n\n            if (line.width > 0 && line.visible) {\n                var linePath = new Path$2({\n                    stroke: {\n                        color: line.color,\n                        dashType: line.dashType,\n                        width: line.width\n                    }\n                });\n\n                linePath.moveTo(lineBox.x1, lineBox.y1).lineTo(lineBox.x2, lineBox.y2);\n                elements.append(linePath);\n            }\n\n            return elements;\n        },\n\n        renderTicks: function() {\n            var ticks = new Group$2();\n            var options = this.options;\n            var majorUnit = options.majorTicks.visible ? options.majorUnit : 0;\n            var tickRenderOptions = {\n                vertical: options.vertical,\n                mirror: options.labels.mirror,\n                lineBox: this.lineBox()\n            };\n\n            renderTicks(ticks, this.getMajorTickPositions(), tickRenderOptions, options.majorTicks);\n            renderTicks(ticks, this.getMinorTickPositions(), tickRenderOptions, deepExtend({}, {\n                skipUnit: majorUnit / options.minorUnit\n            }, options.minorTicks));\n\n            return ticks;\n        }\n    });\n\n    setDefaultOptions(LinearScale, {\n        min: 0,\n        max: 50,\n\n        majorTicks: {\n            size: 15,\n            align: INSIDE,\n            color: BLACK,\n            width: DEFAULT_LINE_WIDTH,\n            visible: true\n        },\n\n        minorTicks: {\n            size: 10,\n            align: INSIDE,\n            color: BLACK,\n            width: DEFAULT_LINE_WIDTH,\n            visible: true\n        },\n\n        line: {\n            width: DEFAULT_LINE_WIDTH\n        },\n\n        labels: {\n            position: INSIDE,\n            padding: 2\n        },\n        mirror: false,\n        _alignLines: false\n    });\n\n    var Pointer = dataviz.Class.extend({\n        init: function(scale, userOptions) {\n\n            var ref = scale.options;\n            var min = ref.min;\n            var max = ref.max;\n            var options = this.options = deepExtend({}, this.options, userOptions);\n\n            options.fill = options.color;\n\n            this.scale = scale;\n\n            if (defined(options.value)) {\n                options.value = limitValue(options.value, min, max);\n            } else {\n                options.value = min;\n            }\n        },\n\n        value: function(newValue) {\n            var options = this.options;\n            var value = options.value;\n\n            if (arguments.length === 0) {\n                return value;\n            }\n\n            var ref = this.scale.options;\n            var min = ref.min;\n            var max = ref.max;\n\n            options._oldValue = defined(options._oldValue) ? options.value : min;\n            options.value = limitValue(newValue, min, max);\n\n            if (this.elements) {\n                this.repaint();\n            }\n        }\n    });\n\n    setDefaultOptions(Pointer, {\n        color: BLACK\n    });\n\n    var LinearPointer = Pointer.extend({\n        init: function(scale, options) {\n            Pointer.fn.init.call(this, scale, options);\n\n            this.options = deepExtend({\n                track: {\n                    visible: defined(options.track)\n                }\n            }, this.options);\n        },\n\n        reflow: function() {\n            var ref = this;\n            var options = ref.options;\n            var scale = ref.scale;\n            var ref$1 = scale.options;\n            var mirror = ref$1.mirror;\n            var vertical = ref$1.vertical;\n            var scaleLine = scale.lineBox();\n            var trackSize = options.track.size || options.size;\n            var pointerHalfSize = options.size / 2;\n            var margin = getSpacing(options.margin);\n            var space = vertical ?\n                     margin[mirror ? \"left\" : \"right\"] :\n                     margin[mirror ? \"bottom\" : \"top\"];\n            var pointerBox, pointerRangeBox, trackBox;\n\n            space = mirror ? -space : space;\n\n            if (vertical) {\n                trackBox = new Box(\n                    scaleLine.x1 + space, scaleLine.y1,\n                    scaleLine.x1 + space, scaleLine.y2);\n\n                if (mirror) {\n                    trackBox.x1 -= trackSize;\n                } else {\n                    trackBox.x2 += trackSize;\n                }\n\n                if (options.shape !== BAR_POINTER) {\n                    pointerRangeBox = new Box(\n                        scaleLine.x2 + space, scaleLine.y1 - pointerHalfSize,\n                        scaleLine.x2 + space, scaleLine.y2 + pointerHalfSize\n                    );\n                    pointerBox = pointerRangeBox;\n                }\n            } else {\n                trackBox = new Box(\n                    scaleLine.x1, scaleLine.y1 - space,\n                    scaleLine.x2, scaleLine.y1 - space);\n\n                if (mirror) {\n                    trackBox.y2 += trackSize;\n                } else {\n                    trackBox.y1 -= trackSize;\n                }\n\n                if (options.shape !== BAR_POINTER) {\n                    pointerRangeBox = new Box(\n                        scaleLine.x1 - pointerHalfSize, scaleLine.y1 - space,\n                        scaleLine.x2 + pointerHalfSize, scaleLine.y1 - space\n                    );\n                    pointerBox = pointerRangeBox;\n                }\n            }\n\n            this.trackBox = trackBox;\n            this.pointerRangeBox = pointerRangeBox;\n            this.box = pointerBox || trackBox.clone().pad(options.border.width);\n        },\n\n        getElementOptions: function() {\n            var options = this.options;\n\n            return {\n                fill: {\n                    color: options.color,\n                    opacity: options.opacity\n                },\n                stroke: defined(options.border) ? {\n                    color: options.border.width ? options.border.color || options.color : \"\",\n                    width: options.border.width,\n                    dashType: options.border.dashType,\n                    opacity: options.opacity\n                } : null\n            };\n        },\n\n        _margin: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var ref$1 = scale.options;\n            var mirror = ref$1.mirror;\n            var vertical = ref$1.vertical;\n            var margin = getSpacing(options.margin);\n\n            var space = vertical ?\n                margin[mirror ? \"left\" : \"right\"] :\n                margin[mirror ? \"bottom\" : \"top\"];\n\n            return space;\n        }\n    });\n\n    setDefaultOptions(LinearPointer, {\n        shape: BAR_POINTER,\n\n        track: {\n            border: {\n                width: 1\n            }\n        },\n\n        color: BLACK,\n        border: {\n            width: 1\n        },\n        opacity: 1,\n\n        margin: getSpacing(3),\n        animation: {\n            type: BAR_POINTER\n        },\n        visible: true\n    });\n\n    var ArrowLinearPointerAnimation = Animation.extend({\n        setup: function() {\n            var options = this.options;\n            var margin = options.margin;\n            var from = options.from;\n            var to = options.to;\n            var vertical = options.vertical;\n            var axis = vertical ? \"x1\" : \"y1\";\n\n            if (options.mirror === vertical) {\n                from[axis] -= margin; to[axis] -= margin;\n            } else {\n                from[axis] += margin; to[axis] += margin;\n            }\n\n            var fromScale = this.fromScale = new GeometryPoint(from.x1, from.y1);\n            var toScale = this.toScale = new GeometryPoint(to.x1, to.y1);\n\n            if (options.duration !== 0) {\n                options.duration = Math.max((fromScale.distanceTo(toScale) / options.duration) * 1000, 1);\n            }\n        },\n\n        step: function(pos) {\n            var translateX = interpolateValue(this.fromScale.x, this.toScale.x, pos);\n            var translateY = interpolateValue(this.fromScale.y, this.toScale.y, pos);\n\n            this.element.transform(transform().translate(translateX, translateY));\n        }\n    });\n\n    setDefaultOptions(ArrowLinearPointerAnimation, {\n        easing: LINEAR,\n        duration: LINEAR_SPEED\n    });\n\n    AnimationFactory.current.register(ARROW_POINTER, ArrowLinearPointerAnimation);\n\n    var Point$1 = GeometryPoint;\n    var Path$3 = DrawingPath;\n\n    var ArrowLinearPointer = LinearPointer.extend({\n        init: function(scale, options) {\n            LinearPointer.fn.init.call(this, scale, options);\n\n            if (!defined(this.options.size)) {\n                this.options.size = this.scale.options.majorTicks.size * 0.6;\n            }\n        },\n\n        pointerShape: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var size = ref.options.size;\n            var halfSize = size / 2;\n            var sign = (scale.options.mirror ? -1 : 1);\n            var shape;\n\n            if (scale.options.vertical) {\n                shape = [\n                    new Point$1(0, 0 - halfSize), new Point$1(0 - sign * size, 0), new Point$1(0, 0 + halfSize)\n                ];\n            } else {\n                shape = [\n                    new Point$1(0 - halfSize, 0), new Point$1(0, 0 + sign * size), new Point$1(0 + halfSize, 0)\n                ];\n            }\n\n            return shape;\n        },\n\n        repaint: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var animation = new ArrowLinearPointerAnimation(this.elements, deepExtend(options.animation, {\n                vertical: scale.options.vertical,\n                mirror: scale.options.mirror,\n                margin: this._margin(options.margin),\n                from: scale.getSlot(options._oldValue),\n                to: scale.getSlot(options.value)\n            }));\n\n            if (options.animation.transitions === false) {\n                animation.options.duration = 0;\n            }\n\n            animation.setup();\n            animation.play();\n        },\n\n        render: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var elementOptions = this.getElementOptions();\n            var shape = this.pointerShape(options.value);\n\n            options.animation.type = ARROW_POINTER;\n\n            var elements = new Path$3({\n                stroke: elementOptions.stroke,\n                fill: elementOptions.fill\n            }).moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).close();\n\n            var slot = scale.getSlot(options.value);\n            elements.transform(transform().translate(slot.x1, slot.y1));\n\n            this.elements = elements;\n\n            return elements;\n        }\n    });\n\n    var BarLinearPointerAnimation = Animation.extend({\n        setup: function() {\n            var options = this.options;\n            var axis = this.axis = options.vertical ? constants.Y : constants.X;\n            var to = this.to = options.newPoints[0][axis];\n            var from = this.from = options.oldPoints[0][axis];\n\n            if (options.duration !== 0) {\n                options.duration = Math.max((Math.abs(to - from) / options.speed) * 1000, 1);\n            }\n\n            this._set(from);\n        },\n\n        step: function(pos) {\n            var value = interpolateValue(this.from, this.to, pos);\n            this._set(value);\n        },\n\n        _set: function(value) {\n            var setter = \"set\" + this.axis.toUpperCase();\n            var points = this.options.newPoints;\n\n            points[0][setter](value);\n            points[1][setter](value);\n        }\n    });\n\n    setDefaultOptions(BarLinearPointerAnimation, {\n        easing: LINEAR,\n        speed: LINEAR_SPEED\n    });\n\n    AnimationFactory.current.register(BAR_POINTER, BarLinearPointerAnimation);\n\n    var Group$3 = DrawingGroup;\n    var Path$4 = DrawingPath;\n\n    var BarLinearPointer = LinearPointer.extend({\n        init: function(scale, options) {\n            LinearPointer.fn.init.call(this, scale, options);\n\n            if (!defined(this.options.size)) {\n                this.options.size = this.scale.options.majorTicks.size * 0.3;\n            }\n        },\n\n        pointerShape: function(value) {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var ref$1 = scale.options;\n            var mirror = ref$1.mirror;\n            var vertical = ref$1.vertical;\n            var dir = mirror === vertical ? -1 : 1;\n            var size = options.size * dir;\n            var minSlot = scale.getSlot(scale.options.min);\n            var slot = scale.getSlot(value);\n            var axis = vertical ? constants.Y : constants.X;\n            var sizeAxis = vertical ? constants.X : constants.Y;\n            var margin = this._margin() * dir;\n\n            var p1 = new GeometryPoint();\n            p1[axis] = minSlot[axis + \"1\"];\n            p1[sizeAxis] = minSlot[sizeAxis + \"1\"];\n\n            var p2 = new GeometryPoint();\n            p2[axis] = slot[axis + \"1\"];\n            p2[sizeAxis] = slot[sizeAxis + \"1\"];\n\n            if (vertical) {\n                p1.translate(margin, 0);\n                p2.translate(margin, 0);\n            } else {\n                p1.translate(0, margin);\n                p2.translate(0, margin);\n            }\n\n            var p3 = p2.clone();\n            var p4 = p1.clone();\n\n            if (vertical) {\n                p3.translate(size, 0);\n                p4.translate(size, 0);\n            } else {\n                p3.translate(0, size);\n                p4.translate(0, size);\n            }\n\n            return [ p1, p2, p3, p4 ];\n        },\n\n        repaint: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var shape = this.pointerShape(options.value);\n            var pointerPath = this.pointerPath;\n            var oldShape = this.pointerShape(options._oldValue);\n\n            pointerPath.moveTo(shape[0]).lineTo(shape[1]).lineTo(shape[2]).lineTo(shape[3]).close();\n\n            var animation = new BarLinearPointerAnimation(pointerPath, deepExtend(options.animation, {\n                reverse: scale.options.reverse,\n                vertical: scale.options.vertical,\n                oldPoints: [ oldShape[1], oldShape[2] ],\n                newPoints: [ shape[1], shape[2] ]\n            }));\n\n            if (options.animation.transitions === false) {\n                animation.options.duration = 0;\n            }\n\n            animation.setup();\n            animation.play();\n        },\n\n        render: function() {\n            var group = new Group$3();\n            var elementOptions = this.getElementOptions();\n\n            if (this.options.track.visible) {\n                group.append(this.renderTrack());\n            }\n\n            var pointer = this.pointerPath = new Path$4({\n                stroke: elementOptions.stroke,\n                fill: elementOptions.fill\n            });\n\n            group.append(pointer);\n\n            this.elements = group;\n\n            return group;\n        },\n\n        renderTrack: function() {\n            var trackOptions = this.options.track;\n            var border = trackOptions.border || {};\n            var trackBox = this.trackBox.clone().pad(border.width || 0);\n\n            return new Path$4.fromRect(trackBox.toRect(), {\n                fill: {\n                    color: trackOptions.color,\n                    opacity: trackOptions.opacity\n                },\n                stroke: {\n                    color: border.width ? border.color || trackOptions.color : \"\",\n                    width: border.width,\n                    dashType: border.dashType\n                }\n            });\n        }\n    });\n\n    var DEFAULT_MIN_WIDTH = 60;\n    var DEFAULT_MIN_HEIGHT = 60;\n\n    var Group$1 = DrawingGroup;\n\n    var LinearGauge = Gauge.extend({\n        reflow: function(bbox) {\n            var pointers = this.pointers;\n            var bboxX = bbox.origin.x;\n            var bboxY = bbox.origin.y;\n\n            var box = new Box(bboxX, bboxY, bboxX + bbox.width(), bboxY + bbox.height());\n\n            this.scale.reflow(box);\n            this._shrinkScaleWidth(box);\n\n            for (var i = 0; i < pointers.length; i++) {\n                pointers[i].reflow();\n            }\n\n            this.bbox = this._getBox(box);\n            this._alignElements();\n            this._shrinkElements();\n            this._buildVisual();\n            this._draw();\n        },\n\n        _buildVisual: function() {\n            var visuals = new Group$1();\n            var scaleElements = this.scale.render();\n            var pointers = this.pointers;\n\n            visuals.append(this.gaugeArea);\n            visuals.append(scaleElements);\n\n            for (var i = 0; i < pointers.length; i++) {\n                var current = pointers[i];\n                visuals.append(current.render());\n                current.value(current.options.value);\n            }\n\n            this._visuals = visuals;\n        },\n\n        _createModel: function() {\n            var this$1$1 = this;\n\n            var options = this.options;\n            var scale = this.scale = new LinearScale(options.scale, this.contextService);\n\n            this.pointers = [];\n\n            var pointers = options.pointer;\n            pointers = isArray(pointers) ? pointers : [ pointers ];\n\n            for (var i = 0; i < pointers.length; i++) {\n                var currentOptions = deepExtend({}, pointers[i], {\n                    animation: {\n                        transitions: options.transitions\n                    }\n                });\n                var pointerType = currentOptions.shape === ARROW ? ArrowLinearPointer : BarLinearPointer;\n\n                this$1$1.pointers.push(new pointerType(scale, currentOptions));\n            }\n        },\n\n        _defaultSize: function() {\n            var vertical = this.options.scale.vertical;\n\n            return {\n                width: vertical ? DEFAULT_MIN_WIDTH : DEFAULT_WIDTH,\n                height: vertical ? DEFAULT_HEIGHT : DEFAULT_MIN_HEIGHT\n            };\n        },\n\n        _getBox: function(box) {\n            var ref = this;\n            var scale = ref.scale;\n            var pointers = ref.pointers;\n            var boxCenter = box.center();\n            var plotAreaBox = pointers[0].box.clone().wrap(scale.box);\n\n            for (var i = 0; i < pointers.length; i++) {\n                plotAreaBox.wrap(pointers[i].box.clone());\n            }\n\n            var size;\n            if (scale.options.vertical) {\n                size = plotAreaBox.width() / 2;\n                plotAreaBox = new Box(\n                    boxCenter.x - size, box.y1,\n                    boxCenter.x + size, box.y2\n                );\n            } else {\n                size = plotAreaBox.height() / 2;\n                plotAreaBox = new Box(\n                    box.x1, boxCenter.y - size,\n                    box.x2, boxCenter.y + size\n                );\n            }\n\n            return plotAreaBox;\n        },\n\n        _alignElements: function() {\n            var this$1$1 = this;\n\n            var ref = this;\n            var scale = ref.scale;\n            var pointers = ref.pointers;\n            var scaleBox = scale.box;\n            var box = pointers[0].box.clone().wrap(scale.box);\n            var plotAreaBox = this.bbox;\n\n            for (var i = 0; i < pointers.length; i++) {\n                box.wrap(pointers[i].box.clone());\n            }\n\n            var diff;\n            if (scale.options.vertical) {\n                diff = plotAreaBox.center().x - box.center().x;\n                scale.reflow(new Box(\n                    scaleBox.x1 + diff, plotAreaBox.y1,\n                    scaleBox.x2 + diff, plotAreaBox.y2\n                ));\n            } else {\n                diff = plotAreaBox.center().y - box.center().y;\n                scale.reflow(new Box(\n                    scaleBox.x1, scaleBox.y1 + diff,\n                    scaleBox.x2, scaleBox.y2 + diff\n                ));\n            }\n\n            for (var i$1 = 0; i$1 < pointers.length; i$1++) {\n                pointers[i$1].reflow(this$1$1.bbox);\n            }\n        },\n\n        _shrinkScaleWidth: function(bbox) {\n            var ref = this;\n            var scale = ref.scale;\n            if (!scale.options.vertical) {\n                var overflow = scale.contentBox().width() - bbox.width();\n                if (overflow > 0) {\n                    scale.box.shrink(overflow, 0);\n                    scale.box.alignTo(bbox, 'center');\n                    scale.reflow(scale.box);\n                }\n            }\n        },\n\n        _shrinkElements: function() {\n            var this$1$1 = this;\n\n            var ref = this;\n            var scale = ref.scale;\n            var pointers = ref.pointers;\n            var scaleBox = scale.box.clone();\n            var pos = scale.options.vertical ? \"y\" : \"x\";\n            var pointerBox = pointers[0].box;\n\n            for (var i = 0; i < pointers.length; i++) {\n                pointerBox.wrap(pointers[i].box.clone());\n            }\n\n            scaleBox[pos + 1] += Math.max(scaleBox[pos + 1] - pointerBox[pos + 1], 0);\n            scaleBox[pos + 2] -= Math.max(pointerBox[pos + 2] - scaleBox[pos + 2], 0);\n\n            scale.reflow(scaleBox);\n\n            for (var i$1 = 0; i$1 < pointers.length; i$1++) {\n                pointers[i$1].reflow(this$1$1.bbox);\n            }\n        }\n    });\n\n    setDefaultOptions(LinearGauge, {\n        transitions: true,\n        gaugeArea: {\n            background: \"\"\n        },\n        scale: {\n            vertical: true\n        }\n    });\n\n    var GEO_ARC_ADJUST_ANGLE = 180;\n\n    var Arc = drawing.Arc;\n    var Path$5 = DrawingPath;\n    var Group$5 = DrawingGroup;\n\n    function drawTicks(arc, tickAngles, unit, tickOptions) {\n        var ticks = new Group$5();\n        var center = arc.center;\n        var radius = arc.getRadiusX();\n\n        if (tickOptions.visible) {\n            for (var i = 0; i < tickAngles.length; i++) {\n                var tickStart = arc.pointAt(tickAngles[i]);\n                var tickEnd = new GeometryPoint(center.x + radius - tickOptions.size, center.y).rotate(tickAngles[i], center);\n\n                ticks.append(new Path$5({\n                    stroke: {\n                        color: tickOptions.color,\n                        width: tickOptions.width\n                    }\n                }).moveTo(tickStart).lineTo(tickEnd));\n            }\n        }\n\n        return ticks;\n    }\n\n    function rangeSegment(from, to, color, opacity) {\n        return { from: from, to: to, color: color, opacity: opacity };\n    }\n\n    var RadialScale = NumericAxis.extend({\n        init: function(options, service) {\n            NumericAxis.fn.init.call(this, 0, 1, options, service);\n        },\n\n        initUserOptions: function(options) {\n            var scaleOptions = deepExtend({}, this.options, options);\n            scaleOptions.majorUnit = scaleOptions.majorUnit || dataviz.autoMajorUnit(scaleOptions.min, scaleOptions.max);\n            scaleOptions.minorUnit = scaleOptions.minorUnit || scaleOptions.majorUnit / 10;\n\n            return scaleOptions;\n        },\n\n        initFields: function() {\n        },\n\n        render: function(center, radius) {\n            var arc = this.renderArc(center, radius);\n\n            this.bbox = arc.bbox();\n            this.labelElements = this.renderLabels();\n            this.ticks = this.renderTicks();\n            this.ranges = this.renderRanges();\n        },\n\n        reflow: function(bbox) {\n            var center = bbox.center();\n            var radius = Math.min(bbox.height(), bbox.width()) / 2;\n\n            if (defined(this.bbox)) {\n                this.bbox = this.arc.bbox();\n                this.radius(this.arc.getRadiusX());\n                this.repositionRanges();\n                this.renderLabels();\n            } else {\n                return this.render(center, radius);\n            }\n        },\n\n        slotAngle: function(value) {\n            var ref = this.options;\n            var min = ref.min;\n            var max = ref.max;\n            var reverse = ref.reverse;\n            var startAngle = ref.startAngle;\n            var endAngle = ref.endAngle;\n            var angle = endAngle - startAngle;\n            var result;\n\n            if (reverse) {\n                result = endAngle - (value - min) / (max - min) * angle;\n            } else {\n                result = ((value - min) / (max - min) * angle) + startAngle;\n            }\n\n            return result + GEO_ARC_ADJUST_ANGLE;\n        },\n\n        hasRanges: function() {\n            var ranges = this.options.ranges;\n\n            return ranges && ranges.length;\n        },\n\n        ticksSize: function() {\n            var ref = this.options;\n            var majorTicks = ref.majorTicks;\n            var minorTicks = ref.minorTicks;\n            var size = 0;\n            if (majorTicks.visible) {\n                size = majorTicks.size;\n            }\n\n            if (minorTicks.visible) {\n                size = Math.max(minorTicks.size, size);\n            }\n\n            return size;\n        },\n\n        labelsCount: function() {\n            var count = NumericAxis.fn.labelsCount.call(this);\n            var options = this.options;\n            var angle = options.endAngle - options.startAngle;\n\n            if (angle >= 360 && (options.max % options.majorUnit === 0)) {\n                count -= 1;\n            }\n\n            return count;\n        },\n\n        renderLabels: function() {\n            var this$1$1 = this;\n\n            var options = this.options;\n            var arc = this.arc.clone();\n            var radius = arc.getRadiusX();\n            var tickAngles = this.tickAngles(arc, options.majorUnit);\n            var rangeSize = options.rangeSize = options.rangeSize || radius * 0.1;\n            var labelsGroup = new Group$5();\n\n            var rangeDistance = radius * 0.05;\n            if (defined(options.rangeDistance)) {\n                rangeDistance = options.rangeDistance;\n            } else {\n                options.rangeDistance = rangeDistance;\n            }\n\n            var labelsOptions = options.labels;\n            var isInside = labelsOptions.position === INSIDE;\n            var hasLabelElements = defined(this.labelElements);\n\n            if (isInside) {\n                radius -= this.ticksSize();\n\n                if (this.hasRanges() && !hasLabelElements) {\n                    radius -= rangeSize + rangeDistance;\n                }\n                arc.setRadiusX(radius).setRadiusY(radius);\n            }\n\n            var labels = this.labels;\n            var count = labels.length;\n            var padding = getSpacing(labelsOptions.padding);\n            var paddingWidth = (padding.left + padding.right) / 2;\n            var paddingHeight = (padding.top + padding.bottom) / 2;\n\n            for (var i = 0; i < count; i++) {\n                var label = labels[i];\n                var halfWidth = label.box.width() / 2;\n                var halfHeight = label.box.height() / 2;\n                var angle = tickAngles[i];\n                var labelAngle = (angle - GEO_ARC_ADJUST_ANGLE) * DEGREE;\n\n                var lp = arc.pointAt(angle);\n                var cx = lp.x + (Math.cos(labelAngle) * (halfWidth + paddingWidth) * (isInside ? 1 : -1));\n                var cy = lp.y + (Math.sin(labelAngle) * (halfHeight + paddingHeight) * (isInside ? 1 : -1));\n\n                label.reflow(new Box(cx - halfWidth, cy - halfHeight, cx + halfWidth, cy + halfHeight));\n                var labelPos = new GeometryPoint(label.box.x1, label.box.y1);\n\n                var labelElement = (void 0);\n                if (!hasLabelElements) {\n                    labelElement = buildLabelElement(label, options.labels);\n                    labelsGroup.append(labelElement);\n                } else {\n                    labelElement = this$1$1.labelElements.children[i];\n                    var prevLabelPos = labelElement.bbox().origin;\n\n                    var labelTransform = labelElement.transform() || transform();\n                    labelTransform.translate(labelPos.x - prevLabelPos.x, labelPos.y - prevLabelPos.y);\n                    labelElement.transform(labelTransform);\n                }\n\n                this$1$1.bbox = Rect.union(this$1$1.bbox, labelElement.bbox());\n            }\n\n            return labelsGroup;\n        },\n\n        repositionRanges: function() {\n            var ranges = this.ranges.children;\n\n            if (ranges.length > 0) {\n                var ref = this.options;\n                var rangeDistance = ref.rangeDistance;\n                var rangeSize = ref.rangeSize;\n                var rangeRadius = this.getRangeRadius();\n\n                if (this.options.labels.position === INSIDE) {\n                    rangeRadius += rangeSize + rangeDistance;\n                }\n\n                var newRadius = rangeRadius + (rangeSize / 2);\n\n                for (var i = 0; i < ranges.length; i++) {\n                    ranges[i]._geometry.setRadiusX(newRadius).setRadiusY(newRadius);\n                }\n\n                this.bbox = Rect.union(this.bbox, this.ranges.bbox());\n            }\n        },\n\n        renderRanges: function() {\n            var this$1$1 = this;\n\n            var segments = this.rangeSegments();\n            var segmentsCount = segments.length;\n            var result = new Group$5();\n\n            if (segmentsCount) {\n                var ref = this.options;\n                var rangeSize = ref.rangeSize;\n                var reverse = ref.reverse;\n                var rangeDistance = ref.rangeDistance;\n                var rangeRadius = this.getRangeRadius();\n\n                // move the ticks with a range distance and a range size\n                this.radius(this.radius() - rangeSize - rangeDistance);\n\n                for (var i = 0; i < segmentsCount; i++) {\n                    var segment = segments[i];\n                    var from = this$1$1.slotAngle(segment[reverse ? \"to\" : \"from\"]);\n                    var to = this$1$1.slotAngle(segment[!reverse ? \"to\" : \"from\"]);\n\n                    if (to - from !== 0) {\n                        result.append(this$1$1.createRange(from, to, rangeRadius, segment));\n                    }\n                }\n            }\n\n            return result;\n        },\n\n        createRange: function(startAngle, endAngle, rangeRadius, options) {\n            var rangeSize = this.options.rangeSize;\n            var rangeGeom = new geometry.Arc(this.arc.center, {\n                radiusX: rangeRadius + (rangeSize / 2),\n                radiusY: rangeRadius + (rangeSize / 2),\n                startAngle: startAngle,\n                endAngle: endAngle\n            });\n\n            return new Arc(rangeGeom, {\n                stroke: {\n                    width: rangeSize,\n                    color: options.color,\n                    opacity: options.opacity,\n                    lineCap: options.lineCap\n                }\n            });\n        },\n\n        rangeSegments: function() {\n            var options = this.options;\n            var ranges = options.ranges || [];\n            var count = ranges.length;\n            var segments = [];\n\n            if (count) {\n                var min = options.min;\n                var max = options.max;\n                var defaultColor = options.rangePlaceholderColor;\n                segments.push(rangeSegment(min, max, defaultColor));\n\n                for (var i = 0; i < count; i++) {\n                    var range = getRange(ranges[i], min, max);\n                    var segmentsCount = segments.length;\n\n                    for (var j = 0; j < segmentsCount; j++) {\n                        var segment = segments[j];\n\n                        if (segment.from <= range.from && range.from <= segment.to) {\n                            segments.push(rangeSegment(range.from, range.to, range.color, range.opacity));\n\n                            if (segment.from <= range.to && range.to <= segment.to) {\n                                segments.push(rangeSegment(range.to, segment.to, defaultColor, range.opacity));\n                            }\n\n                            segment.to = range.from;\n\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return segments;\n        },\n\n        getRangeRadius: function() {\n            var ref = this;\n            var arc = ref.arc;\n            var options = ref.options;\n            var rangeSize = options.rangeSize;\n            var rangeDistance = options.rangeDistance;\n            var majorTickSize = options.majorTicks.size;\n            var radius;\n\n            if (options.labels.position === OUTSIDE) {\n                radius = arc.getRadiusX() - majorTickSize - rangeDistance - rangeSize;\n            } else {\n                radius = arc.getRadiusX() - rangeSize;\n            }\n\n            return radius;\n        },\n\n        renderArc: function(center, radius) {\n            var options = this.options;\n\n            var arc = this.arc = new geometry.Arc(center, {\n                radiusX: radius,\n                radiusY: radius,\n                startAngle: options.startAngle + GEO_ARC_ADJUST_ANGLE,\n                endAngle: options.endAngle + GEO_ARC_ADJUST_ANGLE\n            });\n\n            return arc;\n        },\n\n        renderTicks: function() {\n            var ref = this;\n            var arc = ref.arc;\n            var options = ref.options;\n            var tickArc = arc.clone();\n\n            this.majorTickAngles = this.tickAngles(arc, options.majorUnit);\n            this.majorTicks = drawTicks(tickArc, this.majorTickAngles, options.majorUnit, options.majorTicks);\n\n            var allTicks = new Group$5();\n            allTicks.append(this.majorTicks);\n\n            var majorTickSize = options.majorTicks.size;\n            var minorTickSize = options.minorTicks.size;\n\n            this._tickDifference = majorTickSize - minorTickSize;\n\n            if (options.labels.position === OUTSIDE) {\n                var radius = tickArc.getRadiusX();\n                tickArc.setRadiusX(radius - majorTickSize + minorTickSize)\n                       .setRadiusY(radius - majorTickSize + minorTickSize);\n            }\n\n            this.minorTickAngles = this.normalizeTickAngles(this.tickAngles(arc, options.minorUnit));\n            this.minorTicks = drawTicks(tickArc, this.minorTickAngles, options.minorUnit, options.minorTicks);\n            allTicks.append(this.minorTicks);\n\n            return allTicks;\n        },\n\n        normalizeTickAngles: function(angles) {\n            var options = this.options;\n            var skip = options.majorUnit / options.minorUnit;\n\n            for (var i = angles.length - 1; i >= 0; i--) {\n                if (i % skip === 0) {\n                    angles.splice(i, 1);\n                }\n            }\n\n            return angles;\n        },\n\n        tickAngles: function(ring, stepValue) {\n            var options = this.options;\n            var reverse = options.reverse;\n            var range = options.max - options.min;\n            var angle = ring.endAngle - ring.startAngle;\n            var tickCount = range / stepValue;\n            var pos = ring.startAngle;\n            var step = angle / tickCount;\n\n            if (reverse) {\n                pos += angle;\n                step = -step;\n            }\n\n            if (angle >= 360 && (options.max % stepValue === 0)) {\n                tickCount -= 1;\n            }\n\n            var positions = [];\n            for (var i = 0; i < tickCount; i++) {\n                positions.push(round(pos, COORD_PRECISION));\n                pos += step;\n            }\n\n            if (round(pos) <= ring.endAngle) {\n                positions.push(pos);\n            }\n\n            return positions;\n        },\n\n        radius: function(value) {\n            if (value) {\n                this.arc.setRadiusX(value).setRadiusY(value);\n                this.repositionTicks(this.majorTicks.children, this.majorTickAngles);\n                this.repositionTicks(this.minorTicks.children, this.minorTickAngles, true);\n            } else {\n                return this.arc.getRadiusX();\n            }\n        },\n\n        repositionTicks: function(ticks, tickAngles, minor) {\n            var diff = minor ? (this._tickDifference || 0) : 0;\n            var tickArc = this.arc;\n            var radius = tickArc.getRadiusX();\n\n            if (minor && this.options.labels.position === OUTSIDE && diff !== 0) {\n                tickArc = this.arc.clone();\n                tickArc.setRadiusX(radius - diff).setRadiusY(radius - diff);\n            }\n\n            for (var i = 0; i < ticks.length; i++) {\n                var newPoint = tickArc.pointAt(tickAngles[i]);\n                var segments = ticks[i].segments;\n                var xDiff = newPoint.x - segments[0].anchor().x;\n                var yDiff = newPoint.y - segments[0].anchor().y;\n\n                ticks[i].transform(new transform().translate(xDiff, yDiff));\n            }\n        }\n    });\n\n    setDefaultOptions(RadialScale, {\n        min: 0,\n        max: 100,\n\n        majorTicks: {\n            size: 15,\n            align: INSIDE,\n            color: BLACK,\n            width: DEFAULT_LINE_WIDTH,\n            visible: true\n        },\n\n        minorTicks: {\n            size: 10,\n            align: INSIDE,\n            color: BLACK,\n            width: DEFAULT_LINE_WIDTH,\n            visible: true\n        },\n\n        startAngle: -30,\n        endAngle: 210,\n\n        labels: {\n            position: INSIDE,\n            padding: 2\n        }\n    });\n\n    var RadialPointerAnimation = Animation.extend({\n        init: function(element, options) {\n            Animation.fn.init.call(this, element, options);\n\n            var animationOptions = this.options;\n\n            animationOptions.duration = Math.max((Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000, 1);\n        },\n\n        step: function(pos) {\n            var options = this.options;\n            var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n\n            this.element.transform(transform().rotate(angle, options.center));\n        }\n    });\n\n    setDefaultOptions(RadialPointerAnimation, {\n        easing: LINEAR,\n        duration: ANGULAR_SPEED\n    });\n\n    AnimationFactory.current.register(RADIAL_POINTER, RadialPointerAnimation);\n\n    var CAP_SIZE = 0.05;\n    var Circle = drawing.Circle;\n    var Group$6 = DrawingGroup;\n    var Path$6 = DrawingPath;\n\n    var RadialPointer = Pointer.extend({\n        setAngle: function(angle) {\n            this.elements.transform(transform().rotate(angle, this.center));\n        },\n\n        repaint: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var oldAngle = scale.slotAngle(options._oldValue);\n            var newAngle = scale.slotAngle(options.value);\n\n            if (options.animation.transitions === false) {\n                this.setAngle(newAngle);\n            } else {\n                new RadialPointerAnimation(this.elements, deepExtend(options.animation, {\n                    oldAngle: oldAngle,\n                    newAngle: newAngle\n                })).play();\n            }\n        },\n\n        render: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var elements = new Group$6();\n\n            if (options.animation !== false) {\n                deepExtend(options.animation, {\n                    startAngle: 0,\n                    center: scale.arc.center,\n                    reverse: scale.options.reverse\n                });\n            }\n\n            elements.append(this._renderNeedle(), this._renderCap());\n\n            this.elements = elements;\n            this.setAngle(DEGREE);\n\n            return elements;\n        },\n\n        reflow: function(arc) {\n            var center = this.center = arc.center;\n            var length = limitValue(this.options.length || 1, 0.1, 1.5);\n            var radius = this.radius = arc.getRadiusX() * length;\n            var capSize = this.capSize = Math.round(radius * this.options.cap.size);\n\n            this.bbox = Rect.fromPoints(new GeometryPoint(center.x - capSize, center.y - capSize),\n                                        new GeometryPoint(center.x + capSize, center.y + capSize));\n        },\n\n        _renderNeedle: function() {\n            var minorTickSize = this.scale.options.minorTicks.size;\n            var center = this.center;\n            var needleColor = this.options.color;\n\n            var needlePath = new Path$6({\n                fill: { color: needleColor },\n                stroke: { color: needleColor, width: DEFAULT_LINE_WIDTH }\n            });\n\n            needlePath.moveTo(center.x + this.radius - minorTickSize, center.y)\n                      .lineTo(center.x, center.y - (this.capSize / 2))\n                      .lineTo(center.x, center.y + (this.capSize / 2))\n                      .close();\n\n            return needlePath;\n        },\n\n        _renderCap: function() {\n            var options = this.options;\n            var capColor = options.cap.color || options.color;\n            var circle = new geometry.Circle(this.center, this.capSize);\n\n            var cap = new Circle(circle, {\n                fill: { color: capColor },\n                stroke: { color: capColor }\n            });\n\n            return cap;\n        }\n    });\n\n    setDefaultOptions(RadialPointer, {\n        cap: {\n            size: CAP_SIZE\n        },\n        arrow: {\n            width: 16,\n            height: 14\n        },\n        animation: {\n            type: RADIAL_POINTER,\n            duration: ANGULAR_SPEED\n        }\n    });\n\n    var Group$4 = DrawingGroup;\n\n    var RadialGauge = Gauge.extend({\n        reflow: function(bbox) {\n            var this$1$1 = this;\n\n            var pointers = this.pointers;\n            this.scale.reflow(bbox);\n            this._initialPlotArea = this.scale.bbox;\n\n            for (var i = 0; i < pointers.length; i++) {\n                pointers[i].reflow(this$1$1.scale.arc);\n                this$1$1._initialPlotArea = Rect.union(this$1$1._initialPlotArea, pointers[i].bbox);\n            }\n\n            this.fitScale(bbox);\n            this.alignScale(bbox);\n            this._buildVisual(this.gaugeArea, pointers, this.scale);\n            this._draw();\n        },\n\n        _buildVisual: function(gaugeArea, pointers, scale) {\n            var visuals = this._visuals = new Group$4();\n\n            visuals.append(gaugeArea);\n            visuals.append(scale.ticks);\n            visuals.append(scale.ranges);\n            this._buildPointers(pointers);\n            visuals.append(scale.labelElements);\n        },\n\n        _buildPointers: function(pointers) {\n            var this$1$1 = this;\n\n            for (var i = 0; i < pointers.length; i++) {\n                var current = pointers[i];\n                current.render();\n                this$1$1._visuals.append(current.elements);\n\n                current.value(current.options.value);\n            }\n        },\n\n        fitScale: function(bbox) {\n            var this$1$1 = this;\n\n            var arc = this.scale.arc;\n            var plotAreaBox = this._initialPlotArea;\n            var step = Math.abs(this.getDiff(plotAreaBox, bbox));\n            var min = round(step, COORD_PRECISION);\n            var max = round(-step, COORD_PRECISION);\n            var minDiff, midDiff, maxDiff, mid, oldDiff;\n            var staleFlag = 0;\n            var i = 0;\n\n            while (i++ < 100) {\n                staleFlag = (oldDiff === maxDiff) ? (staleFlag + 1) : 0;\n\n                if (staleFlag > 5) {\n                    break;\n                }\n\n                if (min !== mid) {\n                    minDiff = this$1$1.getPlotBox(min, bbox, arc);\n                    if (0 <= minDiff && minDiff <= 2) {\n                        break;\n                    }\n                }\n\n                if (max !== mid) {\n                    maxDiff = this$1$1.getPlotBox(max, bbox, arc);\n                    if (0 <= maxDiff && maxDiff <= 2) {\n                        break;\n                    }\n                }\n\n                if (minDiff > 0 && maxDiff > 0) {\n                    mid = min * 2;\n                } else if (minDiff < 0 && maxDiff < 0) {\n                    mid = max * 2;\n                } else {\n                    mid = round(((min + max) / 2) || 1, COORD_PRECISION);\n                }\n\n                midDiff = this$1$1.getPlotBox(mid, bbox, arc);\n                if (0 <= midDiff && midDiff <= 2) {\n                    break;\n                }\n\n                oldDiff = maxDiff;\n\n                if (midDiff > 0) {\n                    max = mid;\n                    maxDiff = midDiff;\n                } else {\n                    min = mid;\n                    minDiff = midDiff;\n                }\n            }\n        },\n\n        getPlotBox: function(step, bbox, arc) {\n            var this$1$1 = this;\n\n            var scale = this.scale;\n            var pointers = this.pointers;\n            var radius = arc.getRadiusX();\n            var scaleArc = arc.clone();\n\n            scaleArc.setRadiusX(radius + step).setRadiusY(radius + step);\n\n            scale.arc = scaleArc;\n            scale.reflow(bbox);\n            this.plotBbox = scale.bbox;\n\n            for (var i = 0; i < pointers.length; i++) {\n                pointers[i].reflow(scaleArc);\n                this$1$1.plotBbox = Rect.union(this$1$1.plotBbox, pointers[i].bbox);\n            }\n\n            return this.getDiff(this.plotBbox, bbox);\n        },\n\n        getDiff: function(plotBox, box) {\n            return Math.min(box.width() - plotBox.width(), box.height() - plotBox.height());\n        },\n\n        alignScale: function(bbox) {\n            var this$1$1 = this;\n\n            var plotBoxCenter = this.plotBbox.center();\n            var boxCenter = bbox.center();\n            var paddingX = plotBoxCenter.x - boxCenter.x;\n            var paddingY = plotBoxCenter.y - boxCenter.y;\n            var ref = this;\n            var scale = ref.scale;\n            var pointers = ref.pointers;\n\n            scale.arc.center.x -= paddingX;\n            scale.arc.center.y -= paddingY;\n\n            scale.reflow(bbox);\n\n            for (var i = 0; i < pointers.length; i++) {\n                pointers[i].reflow(scale.arc);\n                this$1$1.plotBbox = Rect.union(scale.bbox, pointers[i].bbox);\n            }\n        },\n\n        _createModel: function() {\n            var this$1$1 = this;\n\n            var options = this.options;\n            var pointers = options.pointer;\n            var scale = this.scale = new RadialScale(options.scale, this.contextService);\n\n            this.pointers = [];\n\n            var pointersArr = isArray(pointers) ? pointers : [ pointers ];\n            for (var i = 0; i < pointersArr.length; i++) {\n                var current = new RadialPointer(scale, deepExtend({}, pointersArr[i], {\n                    animation: {\n                        transitions: options.transitions\n                    }\n                }));\n\n                this$1$1.pointers.push(current);\n            }\n        }\n    });\n\n    setDefaultOptions(RadialGauge, {\n        transitions: true,\n        gaugeArea: {\n            background: \"\"\n        }\n    });\n\n    var ArcScale = RadialScale.extend({\n        rangeSegments: function() {\n            var ref = this.options;\n            var min = ref.min;\n            var max = ref.max;\n            var rangePlaceholderColor = ref.rangePlaceholderColor;\n            var rangeLineCap = ref.rangeLineCap;\n\n            return [ { from: min, to: max, color: rangePlaceholderColor, lineCap: rangeLineCap } ];\n        },\n\n        hasRanges: function() {\n            return true;\n        },\n\n        placeholderRangeAngle: function(angle) {\n            var geometry$$1 = this.ranges.children[0].geometry();\n\n            if (this.options.reverse) {\n                geometry$$1.setEndAngle(angle);\n            } else {\n                geometry$$1.setStartAngle(angle);\n            }\n        },\n\n        addRange: function(from, to, options) {\n            var reverse = this.options.reverse;\n\n            var startAngle = this.slotAngle(reverse ? to : from);\n            var endAngle = this.slotAngle(reverse ? from : to);\n\n            var range = this.createRange(startAngle, endAngle, this.getRangeRadius(), options);\n\n            this.ranges.append(range);\n\n            return range;\n        }\n    });\n\n    setDefaultOptions(ArcScale, {\n        min: 0,\n        max: 100,\n\n        majorTicks: {\n            visible: false\n        },\n\n        minorTicks: {\n            visible: false\n        },\n\n        labels: {\n            visible: false\n        },\n\n        startAngle: 0,\n        endAngle: 180,\n        rangeLineCap: 'round'\n    });\n\n    var MAX_DURATION = 800;\n\n    var RangePointerAnimation = Animation.extend({\n        init: function(element, options) {\n            Animation.fn.init.call(this, element, options);\n\n            var animationOptions = this.options;\n            var duration = (Math.abs(animationOptions.newAngle - animationOptions.oldAngle) / animationOptions.duration) * 1000;\n            animationOptions.duration = limitValue(duration, ANGULAR_SPEED, MAX_DURATION);\n\n            var startColor = element.elements.options.get(\"stroke.color\");\n            var color = element.currentColor();\n            if (startColor !== color) {\n                this.startColor = new kendo.Color(startColor);\n                this.color = new kendo.Color(color);\n            }\n        },\n\n        step: function(pos) {\n            var ref = this;\n            var options = ref.options;\n            var startColor = ref.startColor;\n            var color = ref.color;\n            var angle = interpolateValue(options.oldAngle, options.newAngle, pos);\n            this.element.angle(angle);\n\n            if (color) {\n                var r = round(interpolateValue(startColor.r, color.r, pos));\n                var g = round(interpolateValue(startColor.g, color.g, pos));\n                var b = round(interpolateValue(startColor.b, color.b, pos));\n\n                this.element.stroke(new kendo.Color(r, g, b).toHex());\n            }\n        }\n    });\n\n    setDefaultOptions(RangePointerAnimation, {\n        easing: LINEAR,\n        duration: ANGULAR_SPEED\n    });\n\n    AnimationFactory.current.register(RADIAL_RANGE_POINTER, RangePointerAnimation);\n\n    var RangePointer = Pointer.extend({\n        repaint: function() {\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n            var oldAngle = scale.slotAngle(options._oldValue);\n            var newAngle = scale.slotAngle(options.value);\n\n            if (this.animation) {\n                this.animation.abort();\n            }\n\n            if (options.animation.transitions === false) {\n                this.angle(newAngle);\n                this.stroke(this.currentColor());\n            } else {\n                this.animation = new RangePointerAnimation(this, deepExtend(options.animation, {\n                    oldAngle: oldAngle,\n                    newAngle: newAngle\n                }));\n\n                this.animation.play();\n            }\n        },\n\n        angle: function(value) {\n            var geometry$$1 = this.elements.geometry();\n            if (this.scale.options.reverse) {\n                geometry$$1.setStartAngle(value);\n            } else {\n                geometry$$1.setEndAngle(value);\n            }\n            this.scale.placeholderRangeAngle(value);\n        },\n\n        stroke: function(value) {\n            this.elements.stroke(value);\n        },\n\n        render: function() {\n            if (this.elements) {\n                return;\n            }\n\n            var ref = this;\n            var scale = ref.scale;\n            var options = ref.options;\n\n            if (options.animation !== false) {\n                deepExtend(options.animation, {\n                    startAngle: 0,\n                    center: scale.arc.center,\n                    reverse: scale.options.reverse\n                });\n            }\n\n            this.elements = scale.addRange(scale.options.min, this.options.value, {\n                color: this.currentColor(),\n                opacity: options.opacity,\n                lineCap: scale.options.rangeLineCap\n            });\n        },\n\n        currentColor: function() {\n            var ref = this.scale.options;\n            var min = ref.min;\n            var max = ref.max;\n            var ref$1 = this.options;\n            var colors = ref$1.colors;\n            var color = ref$1.color;\n            var value = ref$1.value;\n            var currentValue = dataviz.isNumber(value) ? value : min;\n\n            if (colors) {\n                for (var idx = 0; idx < colors.length; idx++) {\n                    var ref$2 = colors[idx];\n                    var rangeColor = ref$2.color;\n                    var from = ref$2.from; if (from === void 0) { from = min; }\n                    var to = ref$2.to; if (to === void 0) { to = max; }\n\n                    if (from <= currentValue && currentValue <= to) {\n                        return rangeColor;\n                    }\n                }\n            }\n\n            return color;\n        },\n\n        reflow: function() {\n            this.render();\n\n            this.bbox = this.elements.bbox();\n        }\n    });\n\n    setDefaultOptions(RangePointer, {\n        animation: {\n            type: RADIAL_RANGE_POINTER,\n            duration: ANGULAR_SPEED\n        }\n    });\n\n    var ArcGauge = RadialGauge.extend({\n        _initTheme: function(theme) {\n            RadialGauge.fn._initTheme.call(this, theme);\n\n            this.options.color = this.options.color || (this.theme.pointer || {}).color;\n        },\n\n        _createModel: function() {\n            var options = this.options;\n            var scale = this.scale = new ArcScale(options.scale, this.contextService);\n\n            var pointer = new RangePointer(scale, deepExtend({}, {\n                colors: options.colors,\n                color: options.color,\n                value: options.value,\n                opacity: options.opacity,\n                animation: {\n                    transitions: options.transitions\n                }\n            }));\n\n            this.pointers = [ pointer ];\n        },\n\n        _buildPointers: function(pointers) {\n            for (var i = 0; i < pointers.length; i++) {\n                var current = pointers[i];\n                current.render();\n\n                current.value(current.options.value);\n            }\n        },\n\n        _setValueOptions: function(value) {\n            this.options.value = value;\n        },\n\n        currentColor: function() {\n            var pointer = this.pointers[0];\n            if (pointer) {\n                return pointer.currentColor();\n            }\n        },\n\n        centerLabelPosition: function(width, height) {\n            var size = this.getSize();\n            var center = this.scale.arc.center;\n\n            var left = center.x - width / 2;\n            var top = center.y - height / 2;\n\n            if (width < size.width) {\n                var right = left + width;\n\n                left = Math.max(left, 0);\n\n                if (right > size.width) {\n                    left -= right - size.width;\n                }\n            }\n\n            if (height < size.height) {\n                var bbox = this.scale.bbox;\n                var yLimit = bbox.bottomRight().y;\n                var bottom = top + height;\n\n                top = Math.max(top, bbox.origin.y);\n\n                if (bottom > yLimit) {\n                    top -= bottom - yLimit;\n                }\n            }\n\n            return {\n                left: left,\n                top: top\n            };\n        }\n    });\n\n    var defaultStartAngle = 90;\n\n    var CircularGauge = ArcGauge.extend({\n        _createModel: function() {\n            var scaleOptions = this.options.scale;\n            if (typeof scaleOptions.startAngle !== 'number') {\n                scaleOptions.startAngle = defaultStartAngle;\n            }\n\n            scaleOptions.endAngle = scaleOptions.startAngle + 360;\n\n            ArcGauge.fn._createModel.call(this);\n        }\n    });\n\n    kendo.deepExtend(kendo.dataviz, {\n        Gauge: Gauge,\n        LinearGauge: LinearGauge,\n        LinearPointer: LinearPointer,\n        ArrowLinearPointer: ArrowLinearPointer,\n        BarLinearPointer: BarLinearPointer,\n        LinearScale: LinearScale,\n        RadialGauge: RadialGauge,\n        RadialPointer: RadialPointer,\n        RadialScale: RadialScale,\n        ArcGauge: ArcGauge,\n        RangePointer: RangePointer,\n        ArcScale: ArcScale,\n        CircularGauge: CircularGauge\n    });\n\n    })(window.kendo.jQuery);\n\n    (function($) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var dataviz = kendo.dataviz;\n        var LinearGauge = dataviz.LinearGauge;\n        var RadialGauge = dataviz.RadialGauge;\n        var ArcGauge = dataviz.ArcGauge;\n        var CircularGauge = dataviz.CircularGauge;\n        var draw = kendo.drawing;\n\n        function themeOptions(options) {\n            var themes = dataviz.ui.themes || {};\n            var themeName = options.theme || \"\";\n            var lowerName = themeName.toLowerCase();\n\n            if (dataviz.SASS_THEMES.indexOf(lowerName) != -1) {\n                return dataviz.autoTheme().gauge;\n            }\n\n            return (themes[themeName] || themes[lowerName] || {}).gauge;\n        }\n\n        var Gauge = Widget.extend({\n            init: function(element, userOptions) {\n                kendo.destroy(element);\n                $(element).empty();\n\n                Widget.fn.init.call(this, element);\n\n                this.options = kendo.deepExtend(this.options, userOptions);\n\n                this.wrapper = this.element;\n                this._createInstance();\n\n                this.element.addClass('k-gauge');\n\n                kendo.notify(this, dataviz.ui);\n            },\n\n            options: {\n                theme: \"default\",\n                renderAs: \"\",\n                pointer: {},\n                scale: {},\n                gaugeArea: {\n                    background: \"\"\n                },\n                transitions: true\n            },\n\n            setOptions: function(options) {\n                this._instance.setOptions(options, themeOptions(options));\n\n                this._copyFields();\n            },\n\n            redraw: function() {\n                this._instance.redraw();\n                this._copyFields();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this._instance.destroy();\n            },\n\n            _createInstance: function() {\n                var gaugeType = this._gaugeType();\n                this._instance = new gaugeType(this.element[0], this.options, themeOptions(this.options));\n                this._copyFields();\n            },\n\n            _copyFields: function() {\n                this._originalOptions = this._instance._originalOptions;\n                this.options = this._instance.options;\n                this.surface = this._instance.surface;\n                this.bbox = this._instance.bbox;\n                this.gaugeArea = this._instance.gaugeArea;\n                this.pointers = this._instance.pointers;\n                this.scale = this._instance.scale;\n            },\n\n            _resize: function() {\n                this._instance.resize();\n            }\n        });\n\n        var proxyMembers = [\"getSize\", \"value\", \"allValues\", \"exportVisual\"];\n\n        function createProxyMember(name) {\n            Gauge.fn[name] = function() {\n                return this._instance[name].apply(this._instance, arguments);\n            };\n        }\n\n        for (var idx = 0; idx < proxyMembers.length; idx++) {\n            createProxyMember(proxyMembers[idx]);\n        }\n\n        dataviz.ExportMixin.extend(Gauge.fn);\n\n        var RadialGaugeWidget = Gauge.extend({\n\n            options: {\n                name: \"RadialGauge\"\n            },\n\n            _gaugeType: function() {\n                return RadialGauge;\n            }\n        });\n\n        var LinearGaugeWidget = Gauge.extend({\n\n            options: {\n                name: \"LinearGauge\",\n                scale: {\n                    vertical: true\n                }\n            },\n\n            _gaugeType: function() {\n                return LinearGauge;\n            }\n        });\n\n        var ArcGaugeWidget = Gauge.extend({\n            init: function(element, userOptions) {\n                Gauge.fn.init.call(this, element, userOptions);\n\n                this.element.css('position', 'relative');\n                this.element.addClass('k-arcgauge');\n\n                this._centerTemplate();\n            },\n\n            options: {\n                name: \"ArcGauge\"\n            },\n\n            setOptions: function(options) {\n                Gauge.fn.setOptions.call(this, options);\n                this._centerTemplate();\n            },\n\n            redraw: function() {\n                Gauge.fn.redraw.call(this);\n                this._centerTemplate();\n            },\n\n            value: function(value) {\n                var instance = this._instance;\n                if (arguments.length === 0) {\n                    return instance.value();\n                }\n\n                instance.value(value);\n\n                this._centerTemplate();\n            },\n\n            destroy: function() {\n                Gauge.fn.destroy.call(this);\n                delete this._centerElement;\n            },\n\n            exportVisual: function() {\n                if (this._centerElement) {\n                    return false;\n                }\n\n                return Gauge.fn.exportVisual.call(this);\n            },\n\n            _resize: function() {\n                this._instance.resize();\n\n                this._centerTemplate();\n            },\n\n            _centerTemplate: function() {\n                if (this.options.centerTemplate) {\n                    var template = kendo.template(this.options.centerTemplate);\n\n                    var instance = this._instance;\n                    var centerElement = this._getCenterElement();\n\n                    centerElement.html(template({ color: instance.currentColor(), value: instance.value() }));\n\n                    var position = instance.centerLabelPosition(centerElement.width(), centerElement.height());\n\n                    centerElement.css(position);\n                } else if (this._centerElement) {\n                    this._centerElement.remove();\n                    this._centerElement = null;\n                }\n            },\n\n            _getCenterElement: function() {\n                var centerElement = this._centerElement;\n                if (!centerElement) {\n                    centerElement = this._centerElement = $('<div></div>').addClass('k-arcgauge-label');\n                    this.element.append(centerElement);\n                }\n\n                return centerElement;\n            },\n\n            _gaugeType: function() {\n                return ArcGauge;\n            }\n        });\n\n        var CircularGaugeWidget = ArcGaugeWidget.extend({\n            options: {\n                name: \"CircularGauge\"\n            },\n\n            _gaugeType: function() {\n                return CircularGauge;\n            }\n        });\n\n        function createExportMethod(name) {\n            ArcGaugeWidget.fn[name] = function(options) {\n                var gauge = this;\n                var method = draw[name];\n\n                if (!gauge._centerElement) {\n                    return method(gauge.exportVisual(), options);\n                }\n\n                return draw.drawDOM(gauge.element).then(function(visual) {\n                    return method(visual, options);\n                });\n            };\n        }\n\n        var exportMethods = ['exportSVG', 'exportImage', 'exportPDF'];\n\n        for (idx = 0; idx < exportMethods.length; idx++) {\n            createExportMethod(exportMethods[idx]);\n        }\n\n        dataviz.ui.plugin(LinearGaugeWidget);\n        dataviz.ui.plugin(RadialGaugeWidget);\n        dataviz.ui.plugin(ArcGaugeWidget);\n        dataviz.ui.plugin(CircularGaugeWidget);\n\n        kendo.deepExtend(dataviz, {\n            Gauge: Gauge,\n            LinearGauge: LinearGaugeWidget,\n            RadialGauge: RadialGaugeWidget,\n            ArcGauge: ArcGaugeWidget,\n            CircularGauge: CircularGaugeWidget\n        });\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"dataviz.gauge\",\n        name: \"Gauge\",\n        category: \"dataviz\",\n        description: \"Linear, Radial and Arc gauges.\",\n        depends: [ \"dataviz.core\", \"dataviz.themes\" ]\n    };\n\n}));\n"]}