{"version":3,"file":"kendo.chip.min.js","names":["factory","define","amd","$","undefined$1","kendo","Widget","html","ui","keys","SELECT","CLICK","REMOVE","NS","chipStyles","Chip","window","jQuery","extend","init","element","options","that","this","fn","call","renderChip","wrapper","closest","_enabled","enabled","Boolean","is","_selected","selected","_selectable","selectable","_setTabIndex","_applyAriaAttributes","_bindEvents","notify","name","removable","icon","iconClass","avatarClass","label","removeIcon","removeIconClass","fillMode","rounded","size","themeColor","events","destroy","off","setOptions","insertBefore","remove","empty","enable","state","toggleClass","attr","select","focus","clickProxy","_click","bind","removeProxy","_remove","keydownProxy","_keydown","on","ev","preventDefault","stopPropagation","trigger","originalEvent","_triggerSelect","item","_toggleSelect","target","key","keyCode","ENTER","SPACEBAR","DELETE","BACKSPACE","tabindex","attributes","class","ariaSelectedAttributeName","role","plugin"],"sources":["kendo.chip.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.html.chip'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"chip\",\n        name: \"Chip\",\n        category: \"web\", // suite\n        docsCategory: \"navigation\",\n        description: \"Displays a Chip that represents an input, attribute or an action\",\n        depends: [\"core\", \"html.chip\"] // dependencies\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo;\n        var Widget = kendo.ui.Widget;\n        var html = kendo.html;\n        var ui = kendo.ui,\n            keys = kendo.keys,\n            SELECT = \"select\",\n            CLICK = \"click\",\n            REMOVE = \"remove\";\n\n        var NS = \".kendoChip\",\n            DOT = \".\";\n\n\n        var chipStyles = {\n            widget: \"k-chip\",\n            iconElement: \"k-chip-icon\",\n            removeIconElement: \"k-chip-remove-action\",\n            selected: \"k-selected\",\n            disabled: \"k-disabled\",\n            focus: \"k-focus\",\n            avatarClass: \"k-chip-avatar\"\n        };\n\n        var Chip = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n                html.renderChip(element, $.extend({},that.options));\n\n                that.wrapper = that.element.closest(\".k-chip\");\n                that._enabled = that.options.enabled = options.enabled !== undefined$1 ? options.enabled : !(Boolean(that.element.is(\"[disabled]\")));\n                that._selected = that.options.selected;\n                that._selectable = that.options.selectable;\n\n                that._setTabIndex();\n\n                that._applyAriaAttributes();\n                that._bindEvents();\n                kendo.notify(that);\n            },\n\n            options: {\n                name: 'Chip',\n                enabled: true,\n                selectable: false,\n                selected: false,\n                removable: false,\n                icon: '',\n                iconClass: '',\n                avatarClass: '',\n                label: '',\n                removeIcon: 'x-circle',\n                removeIconClass: '',\n                fillMode: 'solid',\n                rounded: 'medium',\n                size: 'medium',\n                themeColor: 'base'\n            },\n\n            events: [\n                SELECT,\n                CLICK,\n                REMOVE\n            ],\n\n            destroy: function() {\n                var that = this;\n\n                that.wrapper.off(NS);\n                Widget.fn.destroy.call(that);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n\n                that.wrapper.off(NS);\n                that.element.insertBefore(that.wrapper);\n                that.wrapper.remove();\n\n                Widget.fn.setOptions.call(that, options);\n\n                that.element.empty();\n                html.renderChip(that.element, that.options);\n\n                that.wrapper = that.element.closest(\".k-chip\");\n\n                that._setTabIndex();\n                that._applyAriaAttributes();\n                that._bindEvents();\n            },\n\n            enable: function(state) {\n                var that = this;\n                if (state === undefined$1) {\n                    return that._enabled;\n                }\n\n                that._enabled = state !== false;\n                that.wrapper.toggleClass(chipStyles.disabled, !that._enabled);\n                that.wrapper.attr(\"aria-disabled\", !that._enabled);\n            },\n\n            select: function(state) {\n                var that = this;\n\n                if (state == undefined$1) {\n                    return that._selected;\n                }\n\n                state = state !== false;\n\n                if (that._selectable) {\n                    that._selected = state;\n                    that.wrapper.toggleClass(chipStyles.selected, state);\n                }\n\n                that._applyAriaAttributes();\n            },\n\n            focus: function() {\n                if (this._enabled) {\n                    this.wrapper.focus();\n                }\n            },\n\n            _bindEvents: function() {\n                var that = this,\n                    clickProxy = that._click.bind(that),\n                    removeProxy = that._remove.bind(that),\n                    keydownProxy = that._keydown.bind(that);\n\n                that.wrapper.on(CLICK + \" touchend\" + NS, clickProxy)\n                    .on(CLICK + \" touchend\" + NS, DOT + chipStyles.removeIconElement, removeProxy)\n                    .on(\"keydown\" + NS, keydownProxy);\n            },\n\n            _click: function(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                var that = this;\n\n                if (!that.enable()) {\n                    ev.preventDefault();\n                    return;\n                }\n\n                if (that.trigger(CLICK, { originalEvent: ev })) {\n                    return;\n                }\n\n                that._triggerSelect(that, ev);\n            },\n\n            _remove: function(ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                var that = this;\n\n                if (!that.enable()) {\n                    ev.preventDefault();\n                    return;\n                }\n\n                that.trigger(REMOVE, { originalEvent: ev });\n            },\n\n            _triggerSelect: function(item, ev) {\n                var that = this;\n\n                if (!that._selectable || !that._enabled || that.trigger(SELECT, { originalEvent: ev })) {\n                    return;\n                }\n\n                that._toggleSelect();\n            },\n\n            _toggleSelect: function() {\n                var that = this;\n                that.select(!that.select());\n            },\n\n            _keydown: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    key = ev.keyCode;\n\n                if (key === keys.ENTER || key === keys.SPACEBAR) {\n                    if (!that.enable()) {\n                        ev.preventDefault();\n                        return;\n                    }\n\n                    if (that.trigger(CLICK, { originalEvent: ev })) {\n                        return;\n                    }\n\n                    that._triggerSelect(target, ev);\n\n                    if (key === keys.SPACEBAR) {\n                        ev.preventDefault();\n                    }\n                } else if (key === keys.DELETE || key === keys.BACKSPACE) {\n                    if (that.options.removable) {\n                        that.trigger(REMOVE, { originalEvent: ev });\n                    }\n                }\n            },\n\n            _setTabIndex: function() {\n                var that = this;\n                var tabindex = that.enable() ? that.options.tabindex || \"0\" : \"-1\";\n                if (that.options.attributes && that.options.attributes.class) {\n                    that.options.attributes.class = (that.wrapper.attr(\"class\") || '') + \" \" + (that.options.attributes.class);\n                }\n\n                that.wrapper.attr($.extend({}, that.options.attributes, {\n                        tabindex: tabindex,\n                        // skip rendering of this attribute\n                        ariaSelectedAttributeName: null\n                    }));\n            },\n\n            _applyAriaAttributes: function() {\n                var that = this;\n                var role = (that.options.attributes || {}).role || \"button\";\n\n                that.wrapper.attr(\"role\", role);\n                if (that._selectable && role == \"button\") {\n                    that.wrapper.attr(\"aria-pressed\", that._selected);\n                }\n                that.wrapper.attr(\"aria-disabled\", that.enable() === false);\n            }\n        });\n\n        ui.plugin(Chip);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}