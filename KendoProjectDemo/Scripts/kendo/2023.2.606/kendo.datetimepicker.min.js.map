{"version":3,"file":"kendo.datetimepicker.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","TimeView","html","parse","parseDate","support","mediaQuery","activeElement","_activeElement","extractFormat","_extractFormat","calendar","isInRange","restrictValue","isEqualDatePart","getMilliseconds","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","DISABLED","READONLY","FOCUSED","STATEDISABLED","HOVEREVENTS","MOUSEDOWN","MONTH","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","DATE","Date","MIN","MAX","dateViewParams","view","timeViewParams","extend","SINGLE_POPUP_TEMPLATE","ref","buttonSize","messages","renderButton","size","themeColor","STATE_SELECTED","DateTimePicker","init","element","options","initialValue","that","this","componentType","fn","call","disableDates","disabled","min","attr","max","startTime","endTime","_specifiedRange","normalize","_initialOptions","_wrapper","bigScreenMQL","adaptiveMode","onChange","dateView","destroy","timeView","singlePopup","_popup","_views","smallScreenMQL","popup","isFunction","fullscreen","mediaQueryList","matches","list","addTranslate","_updateRanges","_icons","_reset","_template","setAttribute","e","type","addClass","role","_dateViewID","_timeViewID","autocomplete","_midnight","_calculateMidnight","is","parents","enable","readonly","value","val","parseFormats","culture","_createDateInput","_old","_update","_oldText","_applyCssClasses","label","_label","notify","name","format","timeFormat","dates","interval","height","footer","start","depth","animation","month","ARIATemplate","valueType","text","dateButtonText","timeButtonText","dateInput","weekNumber","set","cancel","hour","minute","second","millisecond","now","date","time","today","weekColumnHeader","fillMode","rounded","events","componentTypes","classic","modern","setOptions","currentValue","_value","_current","_dateIcon","off","remove","_timeIcon","_editable","_dateInput","toString","_updateARIA","_inputLabel","_unwrapFloating","dateIcon","timeIcon","wrapper","disable","removeClass","on","_toggleHover","length","removeAttribute","_keydown","bind","_change","current","getToday","close","preventDefault","toggle","_focusElement","labelOptions","isPlainObject","content","floatCheck","_hasDateInput","document","Label","widget","eventType","touch","match","trigger","floatingLabel","_form","_resetHandler","setTimeout","removeAttr","open","popupHovered","_calendar","ul","find","_hovered","_switchToTimeView","_switchToDateView","_option","visible","secondView","refresh","dateChanged","oldValue","valueUpdated","_typing","textFormatted","option","minDateEqual","maxDateEqual","timeViewOptions","maxSet","getTime","lastTimeOption","dataBind","currentTarget","toggleClass","rebind","old","skip","formattedValue","isSameType","String","grep","d","isDateViewVisible","stopPropagation","stopImmediatePropagation","altKey","keyCode","keys","DOWN","move","ENTER","_timeOption","arg","timeOption","dateRangeOption","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","div","msMin","timeDiv","omitPopup","id","dateDiv","DateView","anchor","change","_applyDateValue","_currentlySelected","setFullYear","setMonth","setDate","_toggleIcons","validateDate","_applyTimeValue","_timeSelected","_adjustListWidth","_updateTitle","active","_optionID","useValueToRender","specifiedRange","adjustedDate","msValue","msMax","setHours","_parse","icon","shape","insertAfter","hide","wrap","parent","style","cssText","css","className","formId","form","closest","disabledDate","optionsValue","defaultValue","_ariaTemplate","template","DateInput","_updateAria","appendTo","body","append","Popup","isRtl","activate","applyValue","sender","ActionSheet","adaptive","title","subtitle","closeButton","focusOnActivate","_groupChangeClick","_cancelClickHandler","_setClickHandler","index","eq","_updateCurrentlySelected","setMinutes","setSeconds","patterns","getCulture","calendars","standard","g","t","unshift","inArray","push","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery"],"sources":["kendo.datetimepicker.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.datepicker', 'kendo.timepicker', 'kendo.html.button', 'kendo.label', 'kendo.actionsheet'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"datetimepicker\",\n        name: \"DateTimePicker\",\n        category: \"web\",\n        description: \"The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.\",\n        depends: [ \"datepicker\", \"timepicker\", \"label\", \"actionsheet\" ]\n    };\n\n    (function($, undefined$1) {\n\n        var kendo = window.kendo,\n            TimeView = kendo.TimeView,\n            html = kendo.html,\n            parse = kendo.parseDate,\n            support = kendo.support,\n            mediaQuery = kendo.mediaQuery,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            calendar = kendo.calendar,\n            isInRange = calendar.isInRange,\n            restrictValue = calendar.restrictValue,\n            isEqualDatePart = calendar.isEqualDatePart,\n            getMilliseconds = TimeView.getMilliseconds,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            ns = \".kendoDateTimePicker\",\n            CLICK = \"click\" + ns,\n            UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            STATEDISABLED = \"k-disabled\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            MOUSEDOWN = \"mousedown\" + ns,\n            MONTH = \"month\",\n            SPAN = \"<span/>\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            DATE = Date,\n            MIN = new DATE(1800, 0, 1),\n            MAX = new DATE(2099, 11, 31),\n            dateViewParams = { view: \"date\" },\n            timeViewParams = { view: \"time\" },\n            extend = $.extend,\n            SINGLE_POPUP_TEMPLATE = function (ref) {\n                var buttonSize = ref.buttonSize;\n                var messages = ref.messages;\n\n                return '<div class=\"k-date-tab k-datetime-wrap\">' +\n                                        '<div class=\"k-datetime-buttongroup\">' +\n                                            '<div class=\"k-button-group k-button-group-stretched\">' +\n                                                kendo.html.renderButton((\"<button class=\\\"k-selected k-group-start\\\">\" + (messages.date) + \"</button>\"), {\n                                                    size: buttonSize\n                                                }) +\n                                                kendo.html.renderButton((\"<button class=\\\"k-group-end\\\">\" + (messages.time) + \"</button>\"), {\n                                                    size: buttonSize\n                                                }) +\n                                            '</div>' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-selector\">' +\n                                            '<div class=\"k-datetime-calendar-wrap\">' +\n                                            '</div>' +\n                                            '<div class=\"k-datetime-time-wrap\">' +\n                                            '</div>' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-footer k-actions-stretched k-actions\">' +\n                                            kendo.html.renderButton((\"<button class=\\\"k-time-accept\\\" title=\\\"Set\\\" aria-label=\\\"Set\\\">\" + (messages.set) + \"</button>\"), {\n                                                size: buttonSize,\n                                                themeColor: \"primary\"\n                                            }) +\n                                            kendo.html.renderButton((\"<button class=\\\"k-time-cancel\\\" title=\\\"Cancel\\\" aria-label=\\\"Cancel\\\">\" + (messages.cancel) + \"</button>\"), {\n                                                size: buttonSize\n                                            }) +\n                                        '</div>' +\n                                    '</div>';\n        },\n            STATE_SELECTED = \"k-selected\";\n\n        var DateTimePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this, disabled, initialValue;\n\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n                if (+options.max != +MAX || +options.min != +MIN || +options.startTime != +MIN || options.endTime != +MAX) {\n                    this._specifiedRange = true;\n                }\n\n                normalize(options);\n\n                that._initialOptions = extend({}, options);\n\n                that._wrapper();\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.bigScreenMQL.onChange(function() {\n                        if (that.dateView) {\n                            that.dateView.destroy();\n                        }\n\n                        if (that.timeView) {\n                            that.timeView.destroy();\n                        }\n\n                        if (options.singlePopup) {\n                            that._popup();\n                        }\n\n                        that._views();\n                    });\n                }\n\n                that.smallScreenMQL = mediaQuery(\"small\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.smallScreenMQL.onChange(function() {\n                        if (that.popup && kendo.isFunction(that.popup.fullscreen)) {\n                            that.popup.fullscreen(that.smallScreenMQL.mediaQueryList.matches);\n                            if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                that.timeView.addTranslate();\n                                that.timeView._updateRanges();\n                            }\n                        }\n                    });\n                }\n\n                if (options.singlePopup) {\n                    that._popup();\n                }\n\n                that._views();\n\n                that._icons();\n\n                that._reset();\n                that._template();\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                element.addClass(\"k-input-inner\")\n                       .attr({\n                           \"role\": \"combobox\",\n                           \"aria-expanded\": false,\n                           \"aria-haspopup\": \"grid\",\n                           \"aria-controls\": that.dateView._dateViewID + \" \" + that.timeView._timeViewID,\n                           \"autocomplete\": \"off\"\n                       });\n\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n\n                initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n\n                that._createDateInput(options);\n\n                that._old = that._update(initialValue || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"DateTimePicker\",\n                value: null,\n                format: \"\",\n                timeFormat: \"\",\n                culture: \"\",\n                parseFormats: [],\n                dates: [],\n                disableDates: null,\n                startTime: null,\n                endTime: null,\n                min: new DATE(MIN),\n                max: new DATE(MAX),\n                interval: 30,\n                height: 200,\n                footer: \"\",\n                start: MONTH,\n                depth: MONTH,\n                animation: {},\n                month: {},\n                ARIATemplate: function (ref) {\n                    var valueType = ref.valueType;\n                    var text = ref.text;\n\n                    return (\"Current focused \" + valueType + \" is \" + text);\n        },\n                dateButtonText: \"Open the date view\",\n                timeButtonText: \"Open the time view\",\n                dateInput: false,\n                weekNumber: false,\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    hour: \"hour\",\n                    minute: \"minute\",\n                    second: \"second\",\n                    millisecond: \"millisecond\",\n                    now: \"Now\",\n                    date: \"Date\",\n                    time: \"Time\",\n                    today: \"Today\",\n                    weekColumnHeader: \"\"\n                },\n                adaptiveMode: \"none\",\n                componentType: \"classic\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    singlePopup: false,\n                    timeView: {\n                        list: \"list\"\n                    }\n                },\n                \"modern\": {\n                    singlePopup: true,\n                    timeView: {\n                        list: \"scroll\"\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    value = that._value,\n                    min, max, currentValue;\n\n                Widget.fn.setOptions.call(that, options);\n\n                options = that.options;\n\n                options.min = min = parse(options.min);\n                options.max = max = parse(options.max);\n\n                normalize(options);\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                currentValue = options.value || that._value || that.dateView._current;\n\n                if (min && !isEqualDatePart(min, currentValue)) {\n                    min = new DATE(MIN);\n                }\n\n                if (max && !isEqualDatePart(max, currentValue)) {\n                    max = new DATE(MAX);\n                }\n\n                that._dateIcon.off(ns);\n                that._dateIcon.remove();\n                that._timeIcon.off(ns);\n                that._timeIcon.remove();\n\n                that.dateView.setOptions(options);\n\n                that.timeView.setOptions(extend({}, options, {\n                    format: options.timeFormat,\n                    min: min,\n                    max: max\n                }));\n\n                that._icons();\n                that._editable(options);\n                that._createDateInput(options);\n\n                if (!that._dateInput) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n\n                if (value) {\n                    that._updateARIA(value);\n                }\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element.off(ns),\n                    dateIcon = that._dateIcon.off(ns),\n                    timeIcon = that._timeIcon.off(ns),\n                    wrapper = that.wrapper.off(ns),\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY, false);\n                        element[0].removeAttribute(ARIA_DISABLED, false);\n                        element[0].removeAttribute(ARIA_READONLY, false);\n                    }\n                    element.on(\"keydown\" + ns, that._keydown.bind(that))\n                           .on(\"focus\" + ns, function() {\n                               that.wrapper.addClass(FOCUSED);\n                           })\n                           .on(\"focusout\" + ns, function() {\n                               that.wrapper.removeClass(FOCUSED);\n                               if (element.val() !== that._oldText) {\n                                   that._change(element.val());\n                                   if (!element.val()) {\n                                       that.dateView.current(kendo.calendar.getToday());\n                                   }\n                               }\n                               if (that.options.singlePopup) {\n                                   return;\n                               }\n                               that.close(\"date\");\n                               that.close(\"time\");\n                           });\n\n                   dateIcon.on(MOUSEDOWN, preventDefault)\n                            .on(UP, function(e) {\n                                that.toggle(\"date\");\n                                that._focusElement(e.type);\n                            });\n\n                   timeIcon.on(MOUSEDOWN, preventDefault)\n                            .on(UP, function(e) {\n                                that.toggle(\"time\");\n                                that._focusElement(e.type);\n                            });\n\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                if (that._dateInput) {\n                    labelOptions.floatCheck = function () {\n\n                        if (!that.value() && !that._dateInput._hasDateInput() && document.activeElement !== that.element[0]) {\n                            that.element.val(\"\");\n                            return true;\n                        }\n\n                        return false;\n                    };\n                }\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            _focusElement: function(eventType) {\n                var element = this.element;\n\n                if ((!support.touch || (support.mouseAndTouchPresent && !(eventType || \"\").match(/touch/i))) && element[0] !== activeElement()) {\n                    element.trigger(\"focus\");\n                }\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n                that.dateView.destroy();\n                that.timeView.destroy();\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                if (that.options.singlePopup) {\n                    that.popup.element.off(ns);\n                    that.popup.destroy();\n                }\n\n                that.element.off(ns);\n                that._dateIcon.off(ns);\n                that._timeIcon.off(ns);\n                that.wrapper.off(ns);\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                    that.bigScreenMQL = null;\n                }\n\n                if (that.smallScreenMQL) {\n                    that.smallScreenMQL.destroy();\n                    that.smallScreenMQL = null;\n                }\n            },\n\n            close: function(view) {\n                var that = this;\n\n                if (that.options.singlePopup) {\n                    that.popup.close();\n                } else {\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    }\n\n                    that[view + \"View\"].close();\n                }\n\n                setTimeout(function() {\n                    that.element.removeAttr(\"aria-activedescendant\");\n                });\n            },\n\n            open: function(view) {\n                var that = this;\n                var popupHovered;\n\n                if (that.options.singlePopup) {\n\n                    that.dateView._calendar();\n\n                    if (that.timeView.ul.find(\"li\").length < 1) {\n                        that.timeView.bind();\n                    }\n\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    // Reference: https://github.com/telerik/kendo/pull/7553\n                    popupHovered = that.popup._hovered;\n                    that.popup._hovered = true;\n\n                    that.popup.open();\n\n                    if (view === \"time\") {\n                        that._switchToTimeView();\n                    } else {\n                        that._switchToDateView();\n                    }\n\n                    this._dateIcon.toggle(view !== \"time\");\n                    this._timeIcon.toggle(view === \"time\");\n\n                    setTimeout(function() {\n                        that.popup._hovered = popupHovered;\n                    }, 1);\n\n                } else {\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    }\n\n                    this[view + \"View\"].open();\n                }\n            },\n\n            min: function(value) {\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            toggle: function(view) {\n                if (this.options.singlePopup) {\n                    if (this.popup.visible()) {\n                        this.close();\n                    } else {\n                        this.open(view);\n                    }\n                } else {\n                    var secondView = \"timeView\";\n\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    } else {\n                        secondView = \"dateView\";\n                    }\n\n                    this[view + \"View\"].toggle();\n                    this[secondView].close();\n                }\n\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._old = that._update(value);\n                if (that._old === null) {\n                    if (that._dateInput) {\n                        that._dateInput.value(that._old);\n                    } else {\n                        that.element.val(\"\");\n                    }\n                }\n\n                that._oldText = that.element.val();\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _change: function(value) {\n                var that = this,\n                oldValue = that.element.val(),\n                dateChanged;\n\n                value = that._update(value);\n                dateChanged = +that._old != +value;\n\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _option: function(option, value) {\n                var that = this;\n                var options = that.options;\n                var timeView = that.timeView;\n                var timeViewOptions = timeView.options;\n                var current = that._value || that._old;\n                var minDateEqual;\n                var maxDateEqual;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n                timeViewOptions.maxSet = false;\n\n                if (!value) {\n                    return;\n                }\n\n                if (options.min.getTime() === options.max.getTime()) {\n                    timeViewOptions.dates = [];\n                }\n\n                options[option] = new DATE(value.getTime());\n                that.dateView[option](value);\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                if (current) {\n                    minDateEqual = isEqualDatePart(options.min, current);\n                    maxDateEqual = isEqualDatePart(options.max, current);\n                }\n\n                if (minDateEqual || maxDateEqual) {\n                    timeViewOptions[option] = value;\n\n                    if (minDateEqual && !maxDateEqual) {\n                        timeViewOptions.max = lastTimeOption(options.interval);\n                    }\n\n                    if (maxDateEqual) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            return;\n                        } else if (!minDateEqual) {\n                            timeViewOptions.min = MIN;\n                            timeViewOptions.maxSet = true;\n                        }\n                    }\n                } else {\n                    timeViewOptions.max = MAX;\n                    timeViewOptions.min = MIN;\n                }\n\n                timeView.bind();\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max,\n                    startTime = options.startTime,\n                    endTime = options.endTime,\n                    dates = options.dates,\n                    timeView = that.timeView,\n                    current = that._value,\n                    date = parse(value, options.parseFormats, options.culture),\n                    isSameType = (date === null && current === null) || (date instanceof Date && current instanceof Date),\n                    rebind, timeViewOptions, old, skip, formattedValue;\n\n                if (options.disableDates && options.disableDates(date)) {\n                    date = null;\n                    if (!that._old && !that.element.val()) {\n                        value = null;\n                    }\n                }\n\n                if (+date === +current && isSameType) {\n                    formattedValue = kendo.toString(date, options.format, options.culture);\n\n                    if (formattedValue !== value ) {\n                        that.element.val(date === null ? value : formattedValue);\n                        if (value instanceof String) {\n                            that.element.trigger(CHANGE);\n                        }\n                    }\n\n                    return date;\n                }\n\n                if (date !== null && isEqualDatePart(date, min)) {\n                    date = restrictValue(date, min, max);\n                } else if (!isInRange(date, min, max)) {\n                    date = null;\n                }\n\n                that._value = date;\n                timeView.value(date);\n                that.dateView.value(date);\n\n                if (date) {\n                    old = that._old;\n                    timeViewOptions = timeView.options;\n                    timeViewOptions.maxSet = false;\n\n                    if (dates[0]) {\n                        dates = $.grep(dates, function(d) { return isEqualDatePart(date, d); });\n\n                        if (dates[0]) {\n                            timeView.dataBind(dates);\n                            skip = true;\n                        }\n                    }\n\n                    if (!skip) {\n                        if (isEqualDatePart(date, min)) {\n                            timeViewOptions.min = startTime ? startTime : min;\n                            timeViewOptions.max = endTime ? endTime : lastTimeOption(options.interval);\n                            rebind = true;\n                        }\n\n                        if (isEqualDatePart(date, max)) {\n                            if (that._midnight) {\n                                timeView.dataBind([MAX]);\n                                skip = true;\n                            } else {\n                                timeViewOptions.max = endTime ? endTime : max;\n                                timeViewOptions.maxSet = true;\n                                if (!rebind) {\n                                    timeViewOptions.min = MIN;\n                                }\n                                rebind = true;\n                            }\n                        }\n                    }\n\n                    if (!skip && ((!old && rebind) || (old && !isEqualDatePart(old, date)))) {\n                        if (!rebind) {\n                            timeViewOptions.max = endTime ? endTime : MAX;\n                            timeViewOptions.min = startTime ? startTime : MIN;\n                        }\n\n                        timeView.bind();\n                    }\n                }\n                if (that._dateInput) {\n                    if (date) {\n                        that._dateInput.value(date);\n                    }\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                that._updateARIA(date);\n\n                return date;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    dateView = that.dateView,\n                    timeView = that.timeView,\n                    value = that.element.val(),\n                    isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n\n                var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n\n                if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                    that.toggle(isDateViewVisible ? \"time\" : \"date\");\n                } else if (isDateViewVisible) {\n                    dateView.move(e);\n                    that._updateARIA(dateView._current);\n\n                    if (e.keyCode === kendo.keys.ENTER) {\n                        that.toggle(\"time\");\n                    }\n                } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                    timeView.move(e);\n                } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                    stopPropagation = false;\n                }\n                if (stopPropagation) {\n                    e.stopImmediatePropagation();\n                }\n            },\n\n            _timeOption: function(arg) {\n                var that = this,\n                options = that.options,\n                timeOption = options[arg],\n                dateRangeOption = arg == \"startTime\" ? options.min : options.max,\n                option = arg == \"startTime\" ? new DATE(MIN) : new DATE(MAX),\n                date;\n\n                if ( timeOption ) {\n                    option = new DATE(timeOption);\n                }\n\n                if (timeOption && dateRangeOption ) {\n                    date = new Date(dateRangeOption.getFullYear(), dateRangeOption.getMonth(), dateRangeOption.getDate(), timeOption.getHours(), timeOption.getMinutes(), timeOption.getSeconds());\n                    if (arg == \"startTime\" ) {\n                        that.options.min = date;\n                    } else {\n                        that.options.max = date;\n                    }\n                }\n\n                if ( options.componentType === \"modern\") {\n                    option = dateRangeOption;\n                }\n\n                return option;\n            },\n\n            _views: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    id = element.attr(\"id\"),\n                    dateView, timeView,\n                    div, ul, msMin,\n                    date,\n                    timeDiv,\n                    omitPopup,\n                    timeViewOptions;\n\n                if (options.singlePopup) {\n                    options.dateDiv = that.popup.element.find(\".k-datetime-calendar-wrap\");\n                    timeDiv = that.popup.element.find(\".k-datetime-time-wrap\");\n                    options.omitPopup = omitPopup = true;\n                    timeViewOptions = options.timeView;\n                }\n\n                that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                    id: id,\n                    anchor: that.wrapper,\n                    change: function() {\n                        var value = that._applyDateValue();\n\n                        if (options.singlePopup) {\n                            if (!that.timeView._currentlySelected) {\n                                that.timeView._currentlySelected = new Date();\n                            }\n                            that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                            that.timeView._currentlySelected.setMonth(value.getMonth());\n                            that.timeView._currentlySelected.setDate(value.getDate());\n                            that._switchToTimeView();\n                            that._toggleIcons();\n                        } else {\n                            that._change(value);\n                            that.close(\"date\");\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.trigger(OPEN, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n\n                                that.dateView[date ? \"current\" : \"value\"](date);\n                            }\n\n                            div.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true);\n\n                            that._updateARIA(date);\n                        }\n                    }\n                }));\n                div = dateView.div;\n\n                msMin = options.min.getTime();\n                that.timeView = timeView = new TimeView({\n                    id: id,\n                    adaptiveMode: options.adaptiveMode,\n                    value: options.value,\n                    size: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\",\n                    anchor: that.wrapper,\n                    animation: options.animation,\n                    format: options.timeFormat,\n                    culture: options.culture,\n                    height: options.componentType === \"modern\" ? null : options.height,\n                    interval: options.interval,\n                    startTime: options.startTime,\n                    endTime: options.endTime,\n                    min: that._timeOption(\"startTime\"),\n                    max: that._timeOption(\"endTime\"),\n                    dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                    parseFormats: options.parseFormats,\n                    validateDate: (options.startTime || options.endTime ) ? false : true,\n                    change: function(value, trigger) {\n                        value = that._applyTimeValue(value);\n\n                        if (trigger) {\n                            that._timeSelected = true;\n                            that._change(value);\n                        } else {\n                            element.val(kendo.toString(value, options.format, options.culture));\n                            dateView.value(value);\n                            that._updateARIA(value);\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            ul.attr(ARIA_HIDDEN, true);\n                            element.attr(ARIA_EXPANDED, false);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.options.componentType !== \"modern\") {\n                            timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n\n                        if (that.trigger(OPEN, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n\n                                that.timeView.value(date);\n                            }\n\n                            ul.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true);\n\n                            timeView.options.active(timeView.current());\n                        }\n                    },\n                    active: function(current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    popup: options.popup,\n                    useValueToRender: true,\n                    specifiedRange: that._specifiedRange,\n                    omitPopup: omitPopup,\n                    timeDiv: timeDiv,\n                    timeView: timeViewOptions,\n                    messages: that.options.messages\n                });\n                ul = timeView.ul;\n            },\n\n            _applyDateValue: function() {\n                var that = this;\n                var options = that.options;\n                var dateView = that.dateView;\n                var value = dateView.calendar.value();\n                var msValue = +value;\n                var msMin = +options.min;\n                var msMax = +options.max;\n                var current, adjustedDate;\n\n                if (msValue === msMin || msValue === msMax) {\n                    current = msValue === msMin ? msMin : msMax;\n                    current = new DATE(that._value || current);\n                    current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n\n                    if (isInRange(current, msMin, msMax)) {\n                        value = current;\n                    }\n                }\n\n                if (that._value) {\n\n                    adjustedDate = kendo.date.setHours(new Date(value), that._value);\n\n                    if (isInRange(adjustedDate, msMin, msMax)) {\n                        value = adjustedDate;\n                    }\n                }\n\n                return value;\n            },\n\n            _applyTimeValue: function(value) {\n                var timeView = this.timeView;\n                var options = this.options;\n\n                value = timeView._parse(value);\n\n                if (value < options.min) {\n                    value = new DATE(+options.min);\n                    timeView.options.min = value;\n                } else if (value > options.max) {\n                    value = new DATE(+options.max);\n                    timeView.options.max = value;\n                }\n\n                return value;\n            },\n\n            _icons: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var icons;\n\n                icons = that.wrapper.find(\"button.k-input-button\");\n\n                if (!icons[0]) {\n                    that._dateIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.dateButtonText + '\"></button>', {\n                        icon: \"calendar\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                    that._timeIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.timeButtonText + '\"></button>', {\n                        icon: \"clock\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                }\n\n                if (options.singlePopup) {\n                    that._timeIcon.hide();\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                element = that.element,\n                wrapper;\n\n                wrapper = element.parents(\".k-datetimepicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    height: element[0].style.height\n                });\n\n                that.wrapper = wrapper.addClass(\"k-datetimepicker k-input\")\n                    .addClass(element[0].className).removeClass('input-validation-error');\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\"),\n                    options = that.options,\n                    disabledDate = options.disableDates,\n                    parseFormats = options.parseFormats.length ? options.parseFormats : null,\n                    optionsValue = that._initialOptions.value,\n                    initialValue = element[0].defaultValue;\n\n                if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                    optionsValue = null;\n                }\n\n                if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                    element.attr(\"value\", kendo.toString(optionsValue, options.format, options.culture));\n                }\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that.value(optionsValue || element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _template: function() {\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate).bind(this);\n            },\n\n            _createDateInput: function(options) {\n                if (this._dateInput) {\n                    this._dateInput.destroy();\n                    this._dateInput = null;\n                }\n\n                if (options.dateInput ) {\n                    this._dateInput = new ui.DateInput(this.element, {\n                        culture: options.culture,\n                        format: options.format,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        min: options.min,\n                        max: options.max,\n                        interval: options.interval,\n                        messages: options.messages.dateInput\n                    });\n                }\n            },\n\n            _calculateMidnight: function(min, max) {\n                return getMilliseconds(min) + getMilliseconds(max) === 0;\n            },\n\n            _updateARIA: function(date) {\n                var that = this;\n                var calendar = that.dateView.calendar;\n\n                if (that.element && that.element.length) {\n                    that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (calendar) {\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                }\n            },\n            _popup: function() {\n                var that = this;\n                var options = that.options;\n                var div = $(\"<div></div>\").attr(ARIA_HIDDEN, \"true\")\n                    .addClass(\"k-datetime-container k-group k-reset\")\n                    .appendTo(document.body);\n\n                div.append(kendo.template(SINGLE_POPUP_TEMPLATE)(extend({}, that.options, {\n                    buttonSize: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\"\n                })));\n\n                if (that.popup) {\n                    that.popup.destroy();\n                    that.popup.element.remove();\n                    that.popup = null;\n                }\n\n                if (that.options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                    that.popup = new ui.ActionSheet(div, {\n                        adaptive: true,\n                        title: \"Select Date and Time\",\n                        subtitle: \"DD / MM / YY - 00:00:00\",\n                        closeButton: true,\n                        focusOnActivate: false,\n                        fullscreen: that.smallScreenMQL.mediaQueryList.matches,\n                        popup: extend(options.popup, options, {\n                            name: \"Popup\",\n                            isRtl: kendo.support.isRtl(that.wrapper),\n                            anchor: that.wrapper,\n                            activate: function() {\n                                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                    that.timeView.addTranslate();\n                                    that.timeView.applyValue(that._value);\n                                    that.timeView._updateRanges();\n                                }\n                            },\n                            open: function(e) {\n                                if (that.trigger(OPEN, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                    e.preventDefault();\n                                } else {\n                                    this.element.attr(ARIA_HIDDEN, false);\n                                    that.element.attr(ARIA_EXPANDED, true);\n                                }\n\n                                that.timeView._updateTitle();\n                            },\n                            close: function(e) {\n                                if (that.trigger(CLOSE, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                    e.preventDefault();\n                                } else {\n                                    that.element.attr(ARIA_EXPANDED, false);\n                                    this.element.attr(ARIA_HIDDEN, true);\n                                }\n                            }\n                        })\n                    });\n                } else {\n                    that.popup = new ui.Popup(div, extend(options.popup, options, {\n                        name: \"Popup\",\n                        isRtl: kendo.support.isRtl(that.wrapper),\n                        anchor: that.wrapper,\n                        activate: function() {\n                            if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                that.timeView.addTranslate();\n                                that.timeView.applyValue(that._value);\n                                that.timeView._updateRanges();\n                            }\n                        },\n                        open: function(e) {\n                            if (that.trigger(OPEN, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                e.preventDefault();\n                            } else {\n                                this.element.attr(ARIA_HIDDEN, false);\n                                that.element.attr(ARIA_EXPANDED, true);\n                            }\n\n                            that.timeView._updateTitle();\n                        },\n                        close: function(e) {\n                            if (that.trigger(CLOSE, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                e.preventDefault();\n                            } else {\n                                that.element.attr(ARIA_EXPANDED, false);\n                                this.element.attr(ARIA_HIDDEN, true);\n                            }\n                        }\n                    }));\n                }\n\n                div.on(CLICK + ns, \".k-datetime-buttongroup .k-button\", that._groupChangeClick.bind(that));\n                div.on(CLICK + ns, \".k-datetime-footer button.k-time-cancel\", that._cancelClickHandler.bind(that));\n                div.on(CLICK + ns, \".k-datetime-footer button.k-time-accept\", that._setClickHandler.bind(that));\n            },\n\n            _groupChangeClick: function(e) {\n                preventDefault(e);\n                var button = $(e.currentTarget);\n                var index = button.index();\n\n                if (index) {\n                    this._switchToTimeView();\n                } else {\n                    this._switchToDateView();\n                }\n                this._toggleIcons();\n            },\n\n            _switchToDateView: function() {\n                this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(0).addClass(STATE_SELECTED);\n                this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-time-tab\").addClass(\"k-date-tab\");\n            },\n\n            _switchToTimeView: function() {\n                this.timeView.addTranslate();\n                this.timeView.applyValue(this._value);\n                this.timeView._updateRanges();\n                this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(1).addClass(STATE_SELECTED);\n                this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-date-tab\").addClass(\"k-time-tab\");\n            },\n\n            _toggleIcons: function() {\n                this._dateIcon.toggle();\n                this._timeIcon.toggle();\n            },\n\n            _cancelClickHandler: function(e) {\n                preventDefault(e);\n                if (this._value) {\n                    this.value(this._value);\n                    this.dateView.value(this._value);\n                }\n                this.popup.close();\n            },\n\n            _setClickHandler: function(e) {\n                preventDefault(e);\n                var value = this._applyDateValue();\n                var time;\n\n                value = value || new Date();\n                time = this.timeView._currentlySelected || value;\n                this.timeView._updateCurrentlySelected();\n                value.setHours(time.getHours());\n                value.setMinutes(time.getMinutes());\n                value.setSeconds(time.getSeconds());\n                value = this._applyTimeValue(value);\n\n                this._change(value);\n                this.popup.close();\n            }\n        });\n\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        function normalize(options) {\n            var patterns = kendo.getCulture(options.culture).calendars.standard.patterns,\n                parseFormats = !options.parseFormats.length,\n                timeFormat;\n\n            options.format = extractFormat(options.format || patterns.g);\n            options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n            kendo.DateView.normalize(options);\n\n            if (parseFormats) {\n               options.parseFormats.unshift(\"yyyy-MM-ddTHH:mm:ss\");\n            }\n\n            if ($.inArray(timeFormat, options.parseFormats) === -1) {\n                options.parseFormats.push(timeFormat);\n            }\n        }\n\n        kendo.cssProperties.registerPrefix(\"DateTimePicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"DateTimePicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(DateTimePicker);\n\n    })(window.kendo.jQuery);\n\n}));\n"]}