{"version":3,"file":"kendo.taskboard.min.js","names":["factory","define","amd","$","kendo","Observable","encode","extend","TaskBoardCard","undefined$1","window","ui","htmlEncode","DOT","NS","CLICK","ACTION","preventDefault","ev","TaskBoardColumn","init","options","dataItem","that","this","_dataItem","sortableUniqueClass","sortableIdentifier","styles","sortableSuffix","_render","_attachEvents","states","isReorderable","_initSortable","fn","call","empty","container","addCard","cardHtml","append","edit","element","addClass","editColumn","_renderEditHeader","getDataItem","cards","children","template","data","headerText","ellipsis","getter","dataTextField","spacer","editTemplate","textbox","input","messages","newColumn","attr","actionButton","ref","icon","spriteCssClass","text","command","html","renderButton","iconClass","fillMode","builtinButtons","name","rules","deleteColumn","defaultButtons","headerLabelId","guid","uid","css","width","header","cardsContainer","columnCards","appendTo","_renderHeader","buttons","_buildActionsHtml","setTimeout","find","trigger","actions","disabled","i","length","button","isPlainObject","Object","keys","_validateRules","tool","split","_actionClick","target","closest","value","_textboxBlur","on","bind","keyCode","ENTER","card","cardTitle","dirClass","isRtl","sortable","Sortable","ignore","ignoreDrag","connectWith","filter","hint","clone","dragHint","grabbingCursor","offsetWidth","height","offsetHeight","placeholder","dragPlaceholder","move","_move","start","_start","end","_end","change","_change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","action","newIndex","oldIndex","destroy","off","TaskBoardNewColumn","taskboard","Column","NewColumn","jQuery","resources","contentTemplate","hbox","title","link","selectable","dataTitleField","body","dataDescriptionField","cardMenuButtonTemplate","headerActions","flatButton","cardMenuButton","actionsIcon","categoryColor","moveCursor","cardMenu","_resources","borderDir","isDisabled","toggleClass","dataCategoryField","color","get","categoryBorder","isSelectable","key","resource","field","cardResources","multiple","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","_buildTemplate","format","headerTemplate","bodyTemplate","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","events","concat","item","items","_append","_extendItem","isEmptyObject","args","CardMenu","TaskBoardCommand","Class","_confirm","content","okText","cancel","confirm","taskboardOptions","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","addColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","val","set","CancelEditColumnCommand","MoveFocusCommand","columnIndex","cardElement","currentColumnIndex","direction","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","focusCard","currentIndex","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","nextCard","dataOrderField","currentCard","cardIndex","map","idx","prevCard","SelectCardCommand","SaveChangesCommand","taskBoardOptions","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","filters","searchOptions","search","operator","fields","_buildFilters","logic","Command","commands","Form","TaskBoardPane","_commandClick","fieldFormat","close","buttonTemplate","themeColor","delete","saveChanges","create","buttonsContainer","footerActions","footerActionButtons","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","primary","TaskBoardPreviewPane","previewPane","preview","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","baseButton","primaryButton","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","navigator","platform","indexOf","metaKey","KeyboardManager","TaskBoardStyles","wrapper","toolbar","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","MOVE","MOVE_START","MOVE_END","SELECT","EXECUTE","CHANGE","ERROR","DATABINDING","DATABOUND","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","description","defaultTools","type","overflow","component","componentOptions","commandOn","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","model","_buildStates","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","tools","toolbarElm","toolbarOptions","_processTools","parentMessages","ToolBar","_toolbarClick","forEach","t","hidden","_isToolEnabled","toolName","found","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","cardDataItem","draggableEvent","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin"],"sources":["kendo.taskboard.js"],"mappings":"CAAA,SAAWA,GACW,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,qBAAsB,wBAAyB,iBAAkB,kBAAmB,iBAAkB,mBAAoB,iBAAkB,iBAAkB,oBAAqB,qBAAsBD,GAC9PA,GACH,CAHD,EAGG,WA4bC,IAAUG,EACFC,EACAC,EACAC,EACAC,EAqBAC,GApdR,SAAUL,EAAGM,GACT,IAAIL,EAAQM,OAAON,MACfO,EAAKP,EAAMO,GACXN,EAAaD,EAAMC,WACnBC,EAASF,EAAMQ,WACfL,EAASJ,EAAEI,OAEXM,EAAM,IACNC,EAAKD,wBAELE,EAAQ,QAORC,EAAS,SA0Bb,SAASC,EAAeC,GAAMA,EAAGD,gBAAkB,CAEnD,IAAIE,EAAkBd,EAAWE,OAAO,CACpCa,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOC,KAEXD,EAAKE,UAAYH,EACjBC,EAAKF,QAAUd,GAAO,EAAM,CAAC,EAAGc,GAEhCE,EAAKG,oBAAsBH,EAAKF,QAAQM,mBAAqBR,EAAgBS,OAAOC,eACpFN,EAAKO,UACLP,EAAKQ,gBAEDV,EAAQW,OAAOC,eACfV,EAAKW,gBAGT7B,EAAW8B,GAAGf,KAAKgB,KAAKb,EAC5B,EAEAc,MAAO,WACQb,KACNc,UAAUD,OACnB,EAEAE,QAAS,SAASC,GACHhB,KACNc,UAAUG,OAAOD,EAC1B,EAEAE,KAAM,WACF,IACId,EAAST,EAAgBS,OADlBJ,KAGNmB,QAAQC,SAAShB,EAAOiB,YAHlBrB,KAINsB,mBACT,EAEAC,YAAa,WACT,OAAOvB,KAAKC,SAChB,EAEAuB,MAAO,WAGH,OAFWxB,KAECc,UAAUW,UAC1B,EAEAC,SAAU,SAAUC,GAAQ,MAAO,eAAmB7C,EAAO6C,EAAKvB,OAAOwB,YAAe,IAAO9C,EAAO6C,EAAKvB,OAAOyB,UAAa,KAASjD,EAAMkD,OAAOH,EAAKI,cAAnB,CAAkCJ,GAAtI,sBACL7C,EAAO6C,EAAKvB,OAAO4B,QAAW,YAC5CL,EAAY,OAAG,EAE/BM,aAAc,SAAUN,GAAQ,MAAO,eAAmB7C,EAAO6C,EAAKvB,OAAOwB,YAAe,IAAO9C,EAAO6C,EAAKvB,OAAOyB,UAA/E,kBACH/C,EAAO6C,EAAKvB,OAAO8B,SADhB,mBAEEpD,EAAO6C,EAAKvB,OAAO+B,OAAU,kBAAuBrD,EAAOF,EAAMkD,OAAOH,EAAKI,cAAlBnD,CAAiC+C,GAAQA,EAAKS,SAASf,WAAaM,EAAKS,SAASC,WAAc,KAASvD,EAAOF,EAAM0D,KAAK,YAAe,+BAAqCxD,EAAOF,EAAMkD,OAAOH,EAAKI,cAAlBnD,CAAiC+C,IAFpR,iCAKH7C,EAAO6C,EAAKvB,OAAO4B,QAAW,YAC5CL,EAAY,OAAG,EAErCY,aAAc,SAAUC,GACR,IAAIpC,EAASoC,EAAIpC,OACbqC,EAAOD,EAAIC,KACXC,EAAiBF,EAAIE,eACrBC,EAAOH,EAAIG,KACXC,EAAUJ,EAAII,QACd/C,EAAU2C,EAAI3C,QAElB,OAAOjB,EAAMiE,KAAKC,aAAc,kBAAsBhE,EAAOsB,EAAOmC,cAAiB,YAAiBzD,EAAO6D,GAAS,KAAS7D,EAAOF,EAAM0D,KAAK,YAAe,KAASxD,EAAO8D,GAAY,MAAS/C,EAAUf,EAAOF,EAAM0D,KAAK,YAAc,IAAMxD,EAAOe,GAAW,IAAM,aAAe,CAC5R4C,KAAM3D,EAAO2D,GACbM,UAAY,iBAAoBjE,EAAO4D,GACvCM,SAAU,QAE9B,EAEIC,eAAgB,CACZ5B,WAAc,CAAE6B,KAAM,aAAcT,KAAM,SAAUE,KAAM,cAAeC,QAAS,oBAAqBO,MAAO,cAC9GpC,QAAW,CAAEmC,KAAM,UAAWT,KAAM,OAAQE,KAAM,WAAYC,QAAS,iBAAkBO,MAAO,cAChGC,aAAgB,CAAEF,KAAM,eAAgBT,KAAM,IAAKE,KAAM,gBAAiBC,QAAS,sBAAuBO,MAAO,eAGrHE,eAAgB,CAAE,aAAc,UAAW,gBAE3C/C,QAAS,WACL,IAAIP,EAAOC,KACPI,EAAST,EAAgBS,OACzBkD,EAAgB1E,EAAM2E,OACtBpC,EAAUxC,EAAE,eAAiByB,EAAOe,QAAU,YACzCmB,KAAK1D,EAAM0D,KAAK,OAAQvC,EAAKE,UAAUuD,KACvCC,IAAI,CACDC,MAAO3D,EAAKF,QAAQ6D,QAEvBpB,KAAK,OAAQ,QAAQA,KAAK,kBAAmBgB,GAClDK,EAAShF,EAAE,eAAiByB,EAAOuD,OAAS,YAC5CC,EAAiBjF,EAAE,eAAiByB,EAAOwD,eAAiB,YAC5DC,EAAclF,EAAE,eAAiByB,EAAOyD,YAAc,YAE1D9D,EAAK4D,OAASA,EAAOG,SAAS3C,GAASmB,KAAK,KAAMgB,GAElDvD,EAAKgE,gBAELH,EAAeE,SAAS3C,GACxBpB,EAAKe,UAAY+C,EACIC,SAASF,GACTxC,SAASrB,EAAKG,qBAEnCH,EAAKoB,QAAUA,CACnB,EAEA4C,cAAe,WACX,IAAIhE,EAAOC,KACPI,EAAST,EAAgBS,OACzBP,EAAUE,EAAKF,QACf6B,EAAW7B,EAAQ6B,SAAW7B,EAAQ6B,SAAW3B,EAAK2B,SAE1D3B,EAAK4D,OAAO1C,OAAOrC,EAAM8C,SAASA,EAAf9C,CAAyBG,GAAO,EAAM,CAAC,EAAG,CACzDqB,OAAQA,EACR4D,QAASjE,EAAKkE,oBACdlC,cAAelC,EAAQkC,eACxBhC,EAAKE,YACZ,EAEAqB,kBAAmB,WACf,IAAIvB,EAAOC,KACPI,EAAST,EAAgBS,OACzBP,EAAUE,EAAKF,QACf6B,EAAW7B,EAAQoC,aAAepC,EAAQoC,aAAelC,EAAKkC,aAElElC,EAAK4D,OAAOd,KAAK,IAEjB9C,EAAK4D,OAAO1C,OAAOrC,EAAM8C,SAASA,EAAf9C,CAAyBG,GAAO,EAAM,CAAC,EAAG,CACzDqB,OAAQA,EACRgC,SAAUvC,EAAQuC,SAClB4B,QAASjE,EAAKkE,oBACdlC,cAAelC,EAAQkC,eACxBhC,EAAKE,aAERiE,YAAW,WACPnE,EAAK4D,OAAOQ,KAAK,SAASC,QAAQ,QACtC,GAAG,GAEHrE,EAAK4D,OAAOQ,KAAK9E,EAAMe,EAAOiE,SAASjD,SAAShB,EAAOkE,SAC3D,EAEAL,kBAAmB,WAQf,IAPA,IAAIlE,EAAOC,KACPH,EAAUE,EAAKF,QACfuC,EAAWvC,EAAQuC,SACnB4B,EAAUnE,EAAQmE,SAAWjE,EAAKsD,eAClCjD,EAAST,EAAgBS,OACzByC,EAAO,eAAiBzC,EAAOiE,QAAU,KAEpCE,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAAK,CACrC,IAAIE,EAAST,EAAQO,GAGC,iBAFtBE,EAAU9F,EAAE+F,cAAcD,IAA0C,IAA/BE,OAAOC,KAAKH,GAAQD,QAAgBC,EAAOvB,KAAQuB,EAAOvB,KAAOuB,GAGlGA,EAAS1F,GAAO,EAAM,CAAC,EACnBgB,EAAKkD,eAAewB,IAAW,CAAE/B,eAAgB+B,EAAQ7B,QAAS6B,EAAS,WAC3E,CAAE9B,KAAMP,EAASqC,IAAWA,IAEzB9F,EAAE+F,cAAcD,IAAWA,EAAOvB,OACzCuB,EAAS1F,GAAO,EAAM0F,EAClB,CAAE9B,KAAMP,EAASqC,EAAOvB,SAI3BnD,EAAK8E,eAAeJ,KAIzBA,EAAO/B,eAAiB+B,EAAO/B,gBAAkB,GAEjDG,GAAQjE,EAAM8C,SAAS3B,EAAKwC,aAApB3D,CAAkCG,GAAO,EAAM,CAAC,EAAG,CACvDqB,OAAQA,EACRP,SAAS,GACV4E,IACP,CAIA,OAFA5B,GAAQ,QAGZ,EAEAgC,eAAgB,SAASC,GACrB,IACItE,EADOR,KACOH,QAAQW,OACtB2C,EAAQ2B,EAAK3B,MAAQ2B,EAAK3B,MAAM4B,MAAM,KAAO,GAEjD,IAAK5B,EAAMqB,OACP,OAAO,EAGX,IAAK,IAAID,EAAI,EAAGA,EAAIpB,EAAMqB,OAAQD,IAC9B,IAAK/D,EAAO2C,EAAMoB,IACd,OAAO,EAIf,OAAO,CACX,EAEAS,aAAc,SAAStF,GACnB,IACIuF,EAAStG,EAAEe,EAAGuF,QAAQC,QAAQ,IAAMtG,EAAM0D,KAAK,WAAa,KAC5DM,EAAUqC,EAAO3C,KAAK1D,EAAM0D,KAAK,YACjCzC,EAAUoF,EAAO3C,KAAK1D,EAAM0D,KAAK,YAErCzC,EAA8B,iBAAd,EAAyB,CAAEsF,MAAOtF,GAAYA,EAEzD+C,GAPM5C,KAWNoE,QAAQ5E,EAAQ,CACjBoD,QAASA,EACT/C,QAASd,EAAO,CAAEkG,OAAQA,GAAUpF,IAE5C,EAEAuF,aAAc,SAAS1F,GACnB,IACIuF,EAAStG,EAAEe,EAAGuF,QAAQC,QAAQ,IAAMtG,EAAM0D,KAAK,WAAa,KAC5DM,EAAUqC,EAAO3C,KAAK1D,EAAM0D,KAAK,YACjCzC,EAAUoF,EAAO3C,KAAK1D,EAAM0D,KAAK,YAErCzC,EAA8B,iBAAd,EAAyB,CAAEsF,MAAOtF,GAAYA,EAEzD+C,GAPM5C,KAWNoE,QAAQ5E,EAAQ,CACjBoD,QAASA,EACT/C,QAASd,EAAO,CAAEkG,OAAQA,GAAUpF,IAE5C,EAEAU,cAAe,WACX,IAAIR,EAAOC,KAEXD,EAAK4D,OAAO0B,GAAG9F,EAAQD,EACnBD,EAAMM,EAAgBS,OAAOmC,aAC7BxC,EAAKiF,aAAaM,KAAKvF,IAE3BA,EAAK4D,OAAO0B,GArRT,OAqRmB/F,EAClBD,EAAMM,EAAgBS,OAAO+B,MAC7BpC,EAAKqF,aAAaE,KAAKvF,IAE3BA,EAAK4D,OAAO0B,GAAG,QAAU/F,EACrBD,EAAMM,EAAgBS,OAAO+B,OAC7B,SAASzC,GACDA,EAAG6F,UAAY3G,EAAMgG,KAAKY,OAC1BzF,EAAKqF,aAAa1F,EAE1B,IAGAK,EAAKe,YACLf,EAAKe,UAAUuE,GAAG9F,EAAQD,EACtBD,EAAMM,EAAgBS,OAAOqF,KAAO,KAAO7G,EAAM0D,KAAK,WAAa,IACnEvC,EAAKiF,aAAaM,KAAKvF,IAE3BA,EAAKe,UAAUuE,GAAG9F,EAAQD,EACtBD,EAAMM,EAAgBS,OAAOqF,KAAO,MAAQ9F,EAAgBS,OAAOsF,UACnEjG,GAGZ,EAEAiB,cAAe,WACX,IAAIX,EAAOC,KAEP2F,EADQ5F,EAAKF,QAAQW,OAAOoF,MACT,SAAW,GAC9B9E,EAAYf,EAAKe,UAEhBf,EAAKe,YAIVf,EAAK8F,SAAW,IAAI1G,EAAG2G,SAAShF,EAAW,CACvCiF,OAAQ1G,EAAMM,EAAgBS,OAAO4F,WAAa,KAClDC,YAAa5G,EAAMU,EAAKG,oBACxBgG,OAAQ7G,EAAMM,EAAgBS,OAAOqF,KACrCU,KAAM,SAAShF,GACX,OAAOA,EAAQiF,QACVhF,SAASzB,EAAgBS,OAAOiG,SAAW,IAAM1G,EAAgBS,OAAOkG,eAAiBX,GACzFlC,IAAI,CACLC,MAAOvC,EAAQ,GAAGoF,YAClBC,OAAQrF,EAAQ,GAAGsF,cAE3B,EACAC,YAAa,SAASvF,GAClB,OAAOxC,EAAE,eACJyC,SAASzB,EAAgBS,OAAOuG,iBAChClD,IAAI,CACD+C,OAAQrF,EAAQ,GAAGsF,cAE/B,EACAG,KAAM7G,EAAK8G,MAAMvB,KAAKvF,GACtB+G,MAAO/G,EAAKgH,OAAOzB,KAAKvF,GACxBiH,IAAKjH,EAAKkH,KAAK3B,KAAKvF,GACpBmH,OAAQnH,EAAKoH,QAAQ7B,KAAKvF,KAG9BA,EAAK8F,SAASuB,UAAUC,WAAWC,OAAO,UAC1CvH,EAAK8F,SAASuB,UAAUC,WAAW/B,KAAK,SAAUvF,EAAKwH,QAAQjC,KAAKvF,IACxE,EAEAwH,QAAS,SAAS7H,GAId,IAHA,IAAI8H,EAAsB7H,EAAgB6H,oBACtCvC,EAAStG,EAAEe,EAAG+H,MAAMxC,QAEfV,EAAI,EAAGA,EAAIiD,EAAoBhD,OAAQD,IAC5C,GAAIU,EAAOyC,GAAGF,EAAoBjD,IAAK,CACnC7E,EAAGD,iBACH,KACJ,CAER,EAEAoH,MAAO,SAASnH,GACZX,EAAOW,EAAI,CACPiI,cAAejI,EAAGkI,OAAOzG,QAAQ0G,QAAQxI,EAAMM,EAAgBS,OAAOe,WAE1EnB,KAAKoE,QAnWF,OAmWgB1E,EACvB,EAEAqH,OAAQ,SAASrH,GACbX,EAAOW,EAAI,CACPiI,cAAejI,EAAGkI,OAAOzG,QAAQ0G,QAAQxI,EAAMM,EAAgBS,OAAOe,WAE1EnB,KAAKoE,QAzWI,YAyWgB1E,EAC7B,EAEAuH,KAAM,SAASvH,GACXX,EAAOW,EAAI,CACPiI,cAAejI,EAAGkI,OAAOzG,QAAQ0G,QAAQxI,EAAMM,EAAgBS,OAAOe,WAE1EnB,KAAKoE,QA/WE,UA+WgB1E,EAC3B,EAEAyH,QAAS,SAASzH,GAGdX,EAAOW,EAAI,CACPiI,cAAejI,EAAGkI,OAAOzG,QAAQ0G,QAAQxI,EAAMM,EAAgBS,OAAOe,WAH/DnB,KAMNoE,QAxXA,SAwXgB1E,IAEF,YAAdA,EAAGoI,QAAwBpI,EAAGqI,UAAY,GAAqB,SAAdrI,EAAGoI,QAAqBpI,EAAGqI,WAAarI,EAAGsI,WARtFhI,KASFoE,QAAQ5E,EAAQ,CACjBoD,QAAS,kBACT/C,QAASH,GAGrB,EAEAuI,QAAS,WACL,IAAIlI,EAAOC,KAEXD,EAAK4D,OAAOuE,IAAI5I,GAChBS,EAAKe,UAAUoH,IAAI5I,GAEfS,EAAK8F,UACL9F,EAAK8F,SAASoC,SAEtB,IAGAE,EAAqBxI,EAAgBZ,OAAO,CAC5CuB,QAAS,WACL,IAAIP,EAAOC,KACPI,EAAST,EAAgBS,OACzBe,EAAUxC,EAAE,eAAiByB,EAAOe,QAAU,YAAYC,SAAShB,EAAOiC,WAAWC,KAAK1D,EAAM0D,KAAK,OAAQvC,EAAKE,UAAUuD,KAC5HG,EAAShF,EAAE,eAAiByB,EAAOuD,OAAS,YAEhD5D,EAAK4D,OAASA,EAAOG,SAAS3C,GAE9BpB,EAAKuB,oBAELvB,EAAKoB,QAAUA,CACnB,IAGJpC,EAAOH,EAAMO,GAAI,CACbiJ,UAAW,CACPC,OAAQ1I,EACR2I,UAAWH,KAInBpJ,GAAO,EAAMH,EAAMO,GAAGiJ,UAAUC,OAAQ,CACpCjI,OAlawB,CACxBe,QAAS,qBACTwC,OAAQ,4BACR/B,WAAY,iCACZC,SAAU,kBACVG,OAAQ,WACRqC,QAAS,oCACTT,eAAgB,qCAChBC,YAAa,2BACbtB,aAAc,mCACdkD,KAAM,mBACNC,UAAW,eACXrF,eAAgB,iBAChB6B,QAAS,0DACTC,MAAO,gBACPE,UAAW,yBACXhB,WAAY,0BACZiD,SAAU,aACVqC,gBAAiB,+BACjBN,SAAU,wBACVL,WAAY,0BACZM,eAAgB,qBA8YhBkB,oBAAqB,CAAC,QAG7B,CAzbD,CAybGtI,OAAON,MAAM2J,QAEN5J,EA2KPO,OAAON,MAAM2J,OA1KR3J,EAAQM,OAAON,MACfC,EAAaD,EAAMC,WACnBC,EAASF,EAAMQ,WACfL,EAASJ,EAAEI,OAqBXC,EAAgBH,EAAWE,OAAO,CAClCa,KAAM,SAASC,EAASC,EAAU0I,GAC9B,IAAIzI,EAAOC,KAEXD,EAAKE,UAAYH,EACjBC,EAAKyI,UAAYA,EAEjBzI,EAAKF,QAAUd,GAAO,EAAM,CAAC,EAAGc,GAEhCE,EAAKO,UAELzB,EAAW8B,GAAGf,KAAKgB,KAAKb,EAC5B,EAEA0I,gBAAiB,SAAU9G,GAAQ,MAAO,eAAmB7C,EAAO6C,EAAKvB,OAAOuD,QAAW,IAAO7E,EAAO6C,EAAKvB,OAAOsI,MAA3E,eACrB5J,EAAO6C,EAAKvB,OAAOuI,OAAU,IAAO7J,EAAO6C,EAAKvB,OAAOwI,MAAS,eAAoBjH,EAAKkH,WAAajK,EAAM0D,KAAK,WAAa,qBAAuB,IAAM,IAAOxD,EAAOF,EAAMkD,OAAOH,EAAKmH,eAAlBlK,CAAkC+C,IADtL,oBAElB7C,EAAO6C,EAAKvB,OAAO4B,QAAW,YAC5CL,EAAmB,eAHa,qBAKvB7C,EAAO6C,EAAKvB,OAAO2I,MAAS,QAAYjK,EAAOF,EAAMkD,OAAOH,EAAKqH,qBAAlBpK,CAAwC+C,IAAU,YAAc,EAElIsH,uBAAwB,SAAUzG,GAC9B,IAAIpC,EAASoC,EAAIpC,OAEjB,MAAO,eAAmBtB,EAAOsB,EAAO8I,eAAkB,sCAA6CpK,EAAOsB,EAAOqE,QAAW,IAAO3F,EAAOsB,EAAO+I,YAAe,IAAOrK,EAAOsB,EAAOgJ,gBAAmB,KACpLxK,EAAMO,GAAGsD,KAAK,CAAEA,KAAM3D,EAAOsB,EAAOiJ,aAActG,UAAW,kBACjE,iBAC5B,EAEIzC,QAAS,WACL,IAQIgJ,EARAvJ,EAAOC,KACPH,EAAUE,EAAKF,QACfO,EAASpB,EAAcoB,OACvBsB,EAAW7B,EAAQ6B,UAAY3B,EAAK0I,gBACpCtH,EAAUxC,EAAE,eAAiByB,EAAOe,QAAU,IAAMf,EAAOqF,KAAO,IAAMrF,EAAOmJ,WAAa,YAC5FN,EAAyBpJ,EAAQ2J,SAAWzJ,EAAKkJ,uBAAyB,GAC1ET,EAAYzI,EAAK0J,WAAW1J,EAAKE,WACjCyJ,EAAY7J,EAAQW,OAAOoF,MAAQ,mBAAqB,kBAG5DzE,EACKmB,KAAK1D,EAAM0D,KAAK,OAAQvC,EAAKE,UAAUuD,KACvClB,KAAK,iBAAkBzC,EAAQW,OAAOmJ,YACtCrH,KAAK,OAAQ,YACbsH,YAAYxJ,EAAOkE,SAAUzE,EAAQW,OAAOmJ,aAEjDL,EAAiBd,EAAU3I,EAAQgK,oBAAsBrB,EAAU3I,EAAQgK,mBAAmBC,OAC1E/J,EAAKE,UAAU8J,IAAIlK,EAAQgK,qBAG3C1I,EAAQC,SAAShB,EAAO4J,gBAAgBvG,IAAIiG,EAAWJ,GAG3DnI,EAAQF,OAAOrC,EAAM8C,SAASA,EAAf9C,CAAyBG,GAAO,EAAM,CAAC,EAAG,CACrDqB,OAAQA,EACRgJ,eAAgBxK,EAAM8C,SAASuH,EAAfrK,CAAuC,CAAEwB,OAAQA,IACjEyI,WAAYhJ,EAAQW,OAAOyJ,aAC3BzB,UAAWA,EACXM,eAAgBjJ,EAAQiJ,eACxBE,qBAAsBnJ,EAAQmJ,sBAC/BjJ,EAAKE,aAERF,EAAKoB,QAAUA,CACnB,EAEAsI,WAAY,SAAShE,GACjB,IAAI1F,EAAOC,KACPwI,EAAY,CAAC,EAEjB,IAAKzI,EAAKyI,UACN,OAAOA,EAGX,IAAK,IAAI0B,KAAOnK,EAAKyI,UAAW,CAC5B,IAAI2B,EAAWpK,EAAKyI,UAAU0B,GAC1BE,EAAQD,EAASC,MACjBC,EAAgBzL,EAAMkD,OAAOsI,EAAbxL,CAAoB6G,GAExC,GAAK4E,EAAL,CAIKF,EAASG,WACVD,EAAgB,CAACA,IAKrB,IAFA,IAAI1I,EAAOwI,EAASI,WAAWC,OAEtBC,EAAgB,EAAGA,EAAgBJ,EAAc7F,OAAQiG,IAAiB,CAC/E,IAAIC,EAAe,KAEfvF,EAAQkF,EAAcI,GAErBN,EAASQ,iBACVxF,EAAQvG,EAAMkD,OAAOqI,EAASS,eAAtBhM,CAAsCuG,IAGlD,IAAK,IAAI0F,EAAY,EAAGA,EAAYlJ,EAAK6C,OAAQqG,IAC7C,GAAIlJ,EAAKkJ,GAAWd,IAAII,EAASS,iBAAmBzF,EAAO,CACvDuF,EAAe/I,EAAKkJ,GACpB,KACJ,CAGJ,GAAqB,OAAjBH,EAAuB,CACvB,IAAII,EAAgBlM,EAAMkD,OAAOqI,EAASY,eAAtBnM,CAAsC8L,GACtDM,EAAS,CACTZ,MAAOD,EAASC,MAChBzB,MAAOwB,EAASxB,MAChBzF,KAAMiH,EAASjH,KACfP,KAAM/D,EAAMkD,OAAOqI,EAASpI,cAAtBnD,CAAqC8L,GAC3CvF,MAAOA,EACP2E,MAAOgB,GAGPX,EAASG,SACL9B,EAAU2B,EAASC,OACnB5B,EAAU2B,EAASC,OAAOa,KAAKD,GAE/BxC,EAAU2B,EAASC,OAAS,CAACY,GAGjCxC,EAAU2B,EAASC,OAASY,CAEpC,CACJ,CA7CA,CA8CJ,CACA,OAAOxC,CACX,EAEA0C,eAAgB,WACZ,IAAInL,EAAOC,KACPH,EAAUE,EAAKF,QAInB,OAHqBjB,EAAMuM,OAAOpL,EAAKqL,eAAgBvL,EAAQiJ,gBAC5ClK,EAAMuM,OAAOpL,EAAKsL,aAAcxL,EAAQmJ,qBAG/D,IAGJjK,EAAOH,EAAMO,GAAGiJ,UAAW,CACvBkD,KAAMtM,IAGVD,GAAO,EAAMH,EAAMO,GAAGiJ,UAAUkD,KAAM,CAAElL,OAnKd,CACtBe,QAAS,mBACTsE,KAAM,SACN9B,OAAQ,gBACR+E,KAAM,SACNC,MAAO,eACPC,KAAM,SACN5G,OAAQ,WACRyC,OAAQ,WACR2E,eAAgB,6CAChBD,WAAY,4DACZJ,KAAM,cACNM,YAAa,gBACbE,WAAY,gBACZS,eAAgB,4BAChBd,cAAe,wBACf5E,SAAU,gBAuJlB,SAAU3F,EAAGM,GACT,IAAIL,EAAQM,OAAON,MACfG,EAASJ,EAAEI,OAEXwM,GADW3M,EAAM8C,SACH9C,EAAMO,GAAGoM,aACvBzM,EAASF,EAAMQ,WAEfI,EAAS,SAETgM,EAAoBD,EAAYxM,OAAO,CACvCa,KAAM,SAASuB,EAAStB,GACpB,IAAIE,EAAOC,KAEXuL,EAAY5K,GAAGf,KAAKgB,KAAKb,EAAMoB,EAAStB,GAExCE,EAAK0L,qBACL1L,EAAK2L,eAEL3L,EAAKuF,KAAK,SAAUvF,EAAK4L,UAAUrG,KAAKvF,IACxCA,EAAKuF,KAAK,OAAQvF,EAAK6L,QAAQtG,KAAKvF,IACpCA,EAAKuF,KAAK,WAAYvF,EAAK8L,OAAOvG,KAAKvF,GAC3C,EAEA0L,mBAAoB,WAChBzL,KAAK8L,UAAUC,OAAS,SAAUvJ,GAC9B,IAAIC,EAAOD,EAAIC,KACXC,EAAiBF,EAAIE,eAEzB,MAAQ,IAAOD,GAAQC,EAAkB9D,EAAMO,GAAGsD,KAAK,CAAEA,KAAM3D,EAAO2D,GAAQ,IAAKM,UAAWjE,EAAO4D,GAAkB,MAAS,GACpI,CACJ,EAEAsJ,aAAc,CACVC,SAAY,CAAE/I,KAAM,WAAYP,KAAM,YAAaF,KAAM,SAAUG,QAAS,kBAAmBO,MAAO,cACtG+I,WAAc,CAAEhJ,KAAM,aAAcP,KAAM,cAAeF,KAAM,QAASG,QAAS,oBAAqBO,MAAO,eAGjHgJ,OAAQZ,EAAY5K,GAAGwL,OAAOC,OAAO,CACjC5M,IAGJkM,aAAc,WACV,IAEIW,EAFAtM,EAAOC,KACPsM,EAAQvM,EAAKF,QAAQyM,MAGzB,GAAIA,GAASA,EAAM9H,OACf,IAAK,IAAID,EAAI,EAAGA,EAAI+H,EAAM9H,OAAQD,IAC9B8H,EAAOC,EAAM/H,GACG5F,EAAE+F,cAAc2H,IAAsC,IAA7B1H,OAAOC,KAAKyH,GAAM7H,QAAgB6H,EAAKnJ,OAG5EmJ,EAAOA,EAAKnJ,MAGZvE,EAAE+F,cAAc2H,GAChBtM,EAAKwM,QAAQF,GACNtM,EAAKiM,aAAaK,IACzBA,EAAOtM,EAAKiM,aAAaK,GACzBtM,EAAKwM,QAAQF,IACW,iBAAX,IACbA,EAAO,CAAEnJ,KAAMmJ,EAAM1J,KAAM0J,EAAM3J,eAAgB2J,EAAMzJ,QAASyJ,EAAO,WACvEtM,EAAKwM,QAAQF,SAIrB,IAAK,IAAInC,KAAOnK,EAAKiM,aACjBK,EAAOtM,EAAKiM,aAAa9B,GACzBnK,EAAKwM,QAAQF,EAGzB,EAEAE,QAAS,SAASF,GACd,IAAItM,EAAOC,KAEXD,EAAKyM,YAAYH,GAEbtM,EAAK8E,eAAewH,IACpBtM,EAAKkB,OAAOoL,EAEpB,EAEAG,YAAa,SAASH,GAClB,IACIjK,EADOpC,KACSH,QAAQuC,SACxBE,EAAO,CAAC,EAEZA,EAAK1D,EAAM0D,KAAK,YAAc+J,EAAKzJ,QAE/ByJ,EAAKxM,UACLyC,EAAK1D,EAAM0D,KAAK,YAAc+J,EAAKxM,SAGvCd,EAAOsN,EAAM,CACT1J,KAAMP,EAASiK,EAAKnJ,MACpBT,KAAM4J,EAAK5J,MAAQ,GACnBC,eAAgB2J,EAAK3J,gBAAkB,GACvCJ,KAAMA,EACNkB,IAAK5E,EAAM2E,QAEnB,EAEAsB,eAAgB,SAASC,GACrB,IACItE,EADOR,KACOH,QAAQW,OACtB2C,EAAQ2B,EAAK3B,MAAQ2B,EAAK3B,MAAM4B,MAAM,KAAO,GAEjD,IAAK5B,EAAMqB,OACP,OAAO,EAGX,IAAK,IAAID,EAAI,EAAGA,EAAIpB,EAAMqB,OAAQD,IAC9B,IAAK/D,EAAO2C,EAAMoB,IACd,OAAO,EAIf,OAAO,CACX,EAEAoH,UAAW,SAASjM,GAChB,IAAIkD,EAAUjE,EAAEe,EAAG2M,MAAM/J,KAAK1D,EAAM0D,KAAK,YACrCzC,EAAUlB,EAAEe,EAAG2M,MAAM/J,KAAK1D,EAAM0D,KAAK,YACrC2C,EAAStG,EAAEe,EAAGuF,QAElBpF,EAA8B,iBAAd,EAAyB,CAAEsF,MAAOtF,GAAYA,EAEzD+C,GAIL5C,KAAK8H,OAAO,CACRlF,QAASA,EACT/C,QAASd,EAAO,CAAEkG,OAAQA,GAAUpF,IAE5C,EAEA+L,QAAS,SAASlM,IACHA,EAAGkI,OACG/H,QAAQyM,OAEX3N,EAAE8N,cAAczM,KAAKgM,eAC/BtM,EAAGD,gBAEX,EAEAoM,OAAQ,SAASnM,GACTA,EAAGkI,QACHlI,EAAGkI,OAAOzG,QAAQiD,QAAQ,QAElC,EAEA0D,OAAQ,SAAS4E,GACb1M,KAAKoE,QAAQ5E,EAAQkN,EACzB,IAGJ3N,EAAOH,EAAMO,GAAGiJ,UAAW,CACvBuE,SAAUnB,GAGb,CAlKL,CAkKOtM,OAAON,MAAM2J,QAEpB,SAAU5J,EAAGM,GACL,IAAIL,EAAQM,OAAON,MACfG,EAASJ,EAAEI,OACX2F,EAAgB/F,EAAE+F,cAGlBkI,EAFQhO,EAAMiO,MAEW9N,OAAO,CAChCa,KAAM,SAASC,GACXG,KAAKH,QAAUA,EACfG,KAAKoI,UAAYvI,EAAQuI,SAC7B,EACA0E,SAAU,SAASnE,EAAOoE,EAASC,EAAQC,GACvC,IAGIC,EADAC,EAFOnN,KACUoI,UACYvI,QAGjC,GAAI6E,EAAcyI,EAAiBC,YAAwD,IAA3CD,EAAiBC,SAASC,aAAyB,CAC/F,IAAIC,EAAc3O,EAAE4O,WAEpB,OADAD,EAAYE,UACLF,CACX,CAkBA,OAhBAJ,EAAUvO,EAAE,eAAe8O,aAAa1O,EAAO,CAAC,EAAG,CAC/C4J,MAAOA,EACPoE,QAASA,EACT3K,SAAU,CACN4K,OAAQA,EACRC,OAAQA,GAEZS,aAAc,YACd/L,KAAK,iBAEDgM,OAERzJ,YAAW,WACPgJ,EAAQ/L,QAAQiD,QAAQ,QAC5B,IAEO8I,EAAQlC,MACnB,IAIA4C,EAAmBhB,EAAiB7N,OAAO,CAC3C8O,KAAM,WACF,IACIzF,EADOpI,KACUoI,UAEjBA,EAAUhE,QAAQ,aAAc,CAAE0J,OAAQ,SAI9C1F,EAAU2F,UAAUC,MAAK,SAASC,EAAOH,GACrC1F,EAAU8F,eAAeJ,GAAQ,EACrC,IACA1F,EAAU+F,YACd,IAGAC,EAAoBxB,EAAiB7N,OAAO,CAC5C8O,KAAM,WACF,IACIhO,EADOG,KACQH,QACfuI,EAFOpI,KAEUoI,UAEjBA,EAAUhE,QAAQ,aAAc,CAAE0J,OAAQjO,EAAQiO,WAItD1F,EAAU2F,UAAUC,MAAK,SAASC,EAAOH,GACrC1F,EAAU8F,eAAeJ,GAAQ,EACrC,IACA1F,EAAU/G,WAAWxB,EAAQ8H,eACjC,IAGA0G,EAAsBzB,EAAiB7N,OAAO,CAC9C8O,KAAM,WACF,IAAI9N,EAAOC,KACPH,EAAUE,EAAKF,QACfuI,EAAYrI,EAAKqI,UAEjBhG,EADmBgG,EAAUvI,QACDuC,SAC5BkM,EAAWlG,EAAUmG,kBAEZxO,EAAK+M,SAAS1K,EAASgB,aAAchB,EAASoM,oBAAqBpM,EAAiB,OAAGA,EAAS6K,QAEtGwB,MAAK,WACJrG,EAAUhE,QAAQ,eAAgB,CAAE0J,OAAQjO,EAAQiO,SACpD1F,EAAUmC,WAAWmE,iBAIzBJ,EAASK,OAAO9O,EAAQiO,QACxBQ,EAASM,OACb,GACJ,IAGAC,EAAoBjC,EAAiB7N,OAAO,CAC5C8O,KAAM,WACF,IACIhO,EADOG,KACQH,QACfuI,EAFOpI,KAEUoI,UACjB0G,EAAiB1G,EAAUvI,QAAQiP,eACnCR,EAAWlG,EAAUmG,kBACrBT,EAASjO,EAAQiO,OACjBnL,EAAO9C,EAAQoF,OAAO8J,MAEtB3G,EAAUhE,QAAQ,aAAc,CAAE0J,OAAQjO,EAAQiO,SAClD1F,EAAUmC,WAAWmE,iBAIzBZ,EAAOkB,IAAIF,EAAe/M,cAAeY,GACzC2L,EAASM,OACb,IAGAK,EAA0BrC,EAAiB7N,OAAO,CAClD8O,KAAM,WACS7N,KACUoI,UACImG,kBAEhBG,eACb,IAIAQ,EAAmBtC,EAAiB7N,OAAO,CAC3C8O,KAAM,WACF,IAQIsB,EAAarB,EARb/N,EAAOC,KACPoI,EAAYrI,EAAKqI,UACjBvI,EAAUE,EAAKF,QACfuP,EAAcvP,EAAQuP,YACtBzH,EAAgB9H,EAAQ8H,cACxBoG,EAAU3F,EAAU2F,UACpBsB,EAAqB1H,EAAcsG,QACnCqB,EAAYzP,EAAQsF,MAGxB,OAAQmK,GACJ,IAAK,OACDH,EAAcI,KAAKC,IAAI,EAAGH,EAAqB,GAC/C,MACJ,IAAK,QACDF,EAAcI,KAAKE,IAAI1B,EAAQvJ,OAAS,EAAG6K,EAAqB,GAChE,MACJ,QACIF,EAAcE,EAItBtP,EAAKgO,QAAUA,EACfhO,EAAKoP,YAAcA,EACnBpP,EAAK+N,OAASA,EAAS1F,EAAUsH,oBAAoB3B,EAAQ4B,GAAGR,IAChEpP,EAAKyB,MAAQsM,EAAOtM,QAEhB4N,EACArP,EAAK6P,mBAAmBN,EAAWF,GAC5BzH,GAA+B,SAAd2H,EACxBvP,EAAKyB,MAAMmO,GAAG,GAAGvL,QAAQ,SAEzB2J,EAAQ4B,GAAGR,GAAa/K,QAAQ,QAExC,EACAwL,mBAAoB,SAASN,EAAWF,GACpC,IAEIS,EAAW5B,EAFXlO,EAAOC,KACP8P,EAAeV,EAAYnB,QACT8B,GAAoB,EAE1C,OAAQT,GACJ,IAAK,KACDrB,EAAQ6B,EAAe,EACvB,MACJ,IAAK,OACD7B,EAAQ6B,EAAe,EACvB,MACJ,QACIC,GAAoB,EACpB9B,EAAQ6B,IAIhBD,EAAY9P,EAAKyB,MAAMmO,GAAG1B,IAEXzJ,QAAUuL,IACrBF,EAAY9P,EAAKiQ,kBAAkB/B,EAAOqB,IAG1CrB,GAAS,EACT4B,EAAUzL,QAAQ,SAElBrE,EAAKF,QAAQ8H,cAAcsI,OAEnC,EACAD,kBAAmB,SAAS/B,EAAOqB,GAC/B,IAAIvP,EAAOC,KACPkQ,EAAYnQ,EAAKyB,MAAMgD,OAAS,EAChC2L,EAAYpQ,EAAKyB,MAAMmO,GAAGJ,KAAKE,IAAIxB,EAAOiC,IAE9C,GAAIC,EAAU3L,OACV,OAAO2L,EAGX,KAAIpQ,EAAKoP,aAAe,GAAKpP,EAAKoP,aAAepP,EAAKgO,QAAQvJ,OAAS,GAAvE,CAIA,OAAQ8K,GACJ,IAAK,OACDvP,EAAKoP,YAAcI,KAAKC,IAAI,EAAGzP,EAAKoP,YAAc,GAClD,MACJ,IAAK,QACDpP,EAAKoP,YAAcI,KAAKE,IAAI1P,EAAKgO,QAAQvJ,OAAS,EAAGzE,EAAKoP,YAAc,GAOhF,OAHApP,EAAK+N,OAAS/N,EAAKqI,UAAUsH,oBAAoB3P,EAAKgO,QAAQ4B,GAAG5P,EAAKoP,cACtEpP,EAAKyB,MAAQzB,EAAK+N,OAAOtM,QAElBzB,EAAKiQ,kBAAkB/B,EAAOqB,EAdrC,CAgBJ,IAIAc,EAA2BxD,EAAiB7N,OAAO,CACnDsR,aAAc,SAASvC,EAAQgC,GAC3B,IAYIQ,EAXAlI,EADOpI,KACUoI,UAEjBmI,EADmBnI,EAAUvI,QACK0Q,eAClC1Q,EAJOG,KAIQH,QACf2Q,EAAc3Q,EAAQ4F,KACtBgL,EAAY5Q,EAAQuP,YAAcvP,EAAQuP,YAAYnB,QAAUH,EAAOtM,QAAQgD,OAC/EuD,EAAW+H,EACXtO,EAAQsM,EAAOtM,QAAQkP,KAAI,SAASC,EAAKlL,GACrC,OAAO2C,EAAUtI,SAAS2F,EAC9B,IACAmL,EAAWpP,EAAMiP,EAAY,GAG7BD,EAAYxB,IAAIuB,EAAgBxI,GAE5B6I,GAAYA,EAAS7G,IAAIwG,IAAmBC,EAAYzG,IAAIwG,IAC5DC,EAAYxB,IAAIuB,EAAgBK,EAAS7G,IAAIwG,GAAkB,GAGnE,IAAK,IAAIhM,EAAIwD,EAAW,EAAGxD,EAAI/C,EAAMgD,SACjC8L,EAAW9O,EAAM+C,IAEJwF,IAAIwG,IAAmBC,EAAYzG,IAAIwG,GAHXhM,IAIrC+L,EAAStB,IAAIuB,EAAgBC,EAAYzG,IAAIwG,GAAkB,GAC/DC,EAAcF,CAK9B,IAGAO,EAAoBjE,EAAiB7N,OAAO,CAC5C8O,KAAM,WACF,IACIzF,EADOpI,KACUoI,UAEjBgH,EAHOpP,KAEQH,QACOuP,YAE1BhH,EAAUb,QAAQ6H,GAAa,GAC/BA,EAAYa,OAChB,IAGAa,EAAqBV,EAAyBrR,OAAO,CACrD8O,KAAM,WACF,IAAI9N,EAAOC,KACPoI,EAAYrI,EAAKqI,UACjB2I,EAAmB3I,EAAUvI,QAC7BA,EAAUE,EAAKF,QACfmR,EAAiBnR,EAAQ4F,KAAKsE,IAAIgH,EAAiBE,iBACnDC,EAAe9I,EAAU+I,WAAWH,GACpCI,EAAYzS,EAAE0S,SAASC,eAEvBF,EAAU5M,QACV4M,EAAUhN,QAAQ,UAGlBgE,EAAUmJ,MAAQnJ,EAAUmJ,KAAKC,OAASpJ,EAAUmJ,KAAKC,KAAKC,aAI9DrJ,EAAUhE,QAAQ,WAAY,CAAEqB,KAAM5F,EAAQ4F,OAC9C2C,EAAUmC,WAAWmE,iBAIrBwC,GAAgBH,EAAiBR,gBACjCxQ,EAAKsQ,aAAaa,EAAcrR,EAAQ4F,KAAKsE,IAAIgH,EAAiBR,iBAGtEnI,EAAUmC,WAAWqE,OAAO8C,MAAK,WAC7BtJ,EAAU2F,UAAU4B,GAAG,GAAGvL,QAAQ,QACtC,KACJ,IAGAuN,EAAoB/E,EAAiB7N,OAAO,CAC5C8O,KAAM,WACF,IAAI9N,EAAOC,KACPoI,EAAYrI,EAAKqI,UACjBhG,EAAWgG,EAAUvI,QAAQuC,SAC7BvC,EAAUE,EAAKF,QAENE,EAAK+M,SAAS1K,EAAS8J,WAAY9J,EAASwP,kBAAmBxP,EAAiB,OAAGA,EAAS6K,QAGpGwB,MAAK,WACErG,EAAUhE,QAAQ,aAAc,CAAEqB,KAAM5F,EAAQ4F,OAChD2C,EAAUmC,WAAWmE,iBAIzBtG,EAAUmC,WAAWoE,OAAO9O,EAAQ4F,MACpC2C,EAAUmC,WAAWqE,OAAO8C,MAAK,WAC7BtJ,EAAU2F,UAAU4B,GAAG,GAAGvL,QAAQ,QACtC,IACJ,IACCyN,MAAK,WACFhS,EAAQuP,YAAYhL,QAAQ,QAChC,GACR,IAGA0N,EAAkB1B,EAAyBrR,OAAO,CAClD8O,KAAM,WACF,IAAI9N,EAAOC,KACPoI,EAAYrI,EAAKqI,UACjB2I,EAAmB3I,EAAUvI,QAC7BiP,EAAiBiC,EAAiBjC,eAClCjP,EAAUE,EAAKF,QACfmR,EAAiBnR,EAAQiO,OAAO/D,IAAI+E,EAAemC,iBAEvDpR,EAAQ4F,KAAKuJ,IAAI+B,EAAiBE,gBAAiBD,GAE/CD,EAAiBR,gBACjBxQ,EAAKsQ,aAAajI,EAAU+I,WAAWH,GAAiBnR,EAAQkI,UAGpEK,EAAUmC,WAAWqE,MACzB,IAGAmD,EAAkBnF,EAAiB7N,OAAO,CAC1C8O,KAAM,WACF,IACIzF,EADOpI,KACUoI,UACjBvI,EAFOG,KAEQH,QAEfuI,EAAUhE,QAAQ,WAAY,CAAEqB,KAAM5F,EAAQ4F,QAIlD2C,EAAU4J,UAAUjT,EAAO,CACvBwS,KAAM,QACP1R,GACP,IAGAoS,EAAiBrF,EAAiB7N,OAAO,CACzC8O,KAAM,WACF,IACIzF,EADOpI,KACUoI,UACjBvI,EAFOG,KAEQH,QAEfuI,EAAUhE,QAAQ,WAAY,CAAEqB,KAAM,SAG1C2C,EAAUmC,WAAWmE,gBACrBtG,EAAU4J,UAAUjT,EAAO,CACvBwS,KAAM,UACP1R,IACP,IAIAqS,EAAkBtF,EAAiB7N,OAAO,CAC1C8O,KAAM,WACF,IACIhO,EADOG,KACQH,QADRG,KAEUoI,UAEX4J,UAAU,CAChBT,KAAM1R,EAAQsF,MACdM,KAAM5F,EAAQ4F,KACd2J,YAAavP,EAAQuP,YACrBtB,OAAQjO,EAAQiO,OAChBnG,cAAe9H,EAAQ8H,eAE/B,IAGAwK,EAAmBvF,EAAiB7N,OAAO,CAC3C8O,KAAM,WACF,IACIzF,EADOpI,KACUoI,UAErBA,EAAUgK,aACVhK,EAAUmC,WAAWmE,eACzB,IAKA2D,EAAgBzF,EAAiB7N,OAAO,CACxC8O,KAAM,WACF,IAOIyE,EAPAvS,EAAOC,KACPmF,EAAQpF,EAAKF,QAAQsF,MACrBiD,EAAYrI,EAAKqI,UACjB+E,EAAmB/E,EAAUvI,QAC7B0S,EAAgBpF,EAAiBqF,OACjCC,EAAWF,EAAcE,SACzBC,EAAUH,GAAiBA,EAAcG,QAAW,CAAEvF,EAAiBrE,eAAgBqE,EAAiBnE,sBAG5GsJ,EAAUvS,EAAK4S,cAAcD,EAAQD,EAAUtN,GAE/CiD,EAAUmC,WAAWrE,OAAOoM,EAChC,EACAK,cAAe,SAASD,EAAQD,EAAUtN,GAKtC,MAAO,CAAEyN,MAAO,KAAMN,QAJRI,EAAOhC,KAAI,SAAStG,GAC9B,MAAO,CAAEA,MAAOA,EAAOqI,SAAUA,EAAUtN,MAAOA,EACtD,IAGJ,IAGJpG,EAAOH,EAAMO,GAAGiJ,UAAW,CACvByK,QAASjG,EACTkG,SAAU,CACNlF,iBAAkBA,EAClBQ,kBAAmBA,EACnBC,oBAAqBA,EACrBQ,kBAAmBA,EACnBI,wBAAyBA,EACzBiD,gBAAiBA,EACjBC,iBAAkBA,EAClBtB,kBAAmBA,EACnB3B,iBAAkBA,EAClB4B,mBAAoBA,EACpBa,kBAAmBA,EACnBG,gBAAiBA,EACjBC,gBAAiBA,EACjBE,eAAgBA,EAChBI,cAAeA,IAI1B,CA7cL,CA6cOnT,OAAON,MAAM2J,QAEpB,SAAU5J,EAAGM,GACT,IAAIL,EAAQM,OAAON,MACfG,EAASJ,EAAEI,OACXF,EAAaD,EAAMC,WACnBC,EAASF,EAAMQ,WAEf2T,EAAOnU,EAAMO,GAAG4T,KAGhBzT,EAAKD,sBAoBL2T,EAAgBnU,EAAWE,OAAO,CAClCa,KAAM,SAASwI,EAAWvI,EAASC,EAAU0I,GACzC,IAAIzI,EAAOC,KAEXD,EAAKqI,UAAYA,EACjBrI,EAAKE,UAAYH,EACjBC,EAAKyI,UAAYA,EACjBzI,EAAKF,QAAUd,GAAO,EAAM,CAAC,EAAGc,GAEhCE,EAAKO,UAELP,EAAKoB,QAAQkE,GA5BT,QA4BoB/F,EACpB,IAAMV,EAAM0D,KAAK,WAAa,IAC9BvC,EAAKkT,cAAc3N,KAAKvF,IAE5BlB,EAAW8B,GAAGf,KAAKgB,KAAKb,EAC5B,EACAqL,eAAgB,SAAU5I,GACtB,IAAIpC,EAASoC,EAAIpC,OACbgC,EAAWI,EAAIJ,SACf8Q,EAAc1Q,EAAI0Q,YAEtB,MAAO,eAAmBpU,EAAOsB,EAAOwB,YAAe,KAAQsR,EAAxD,sBACyBpU,EAAOsB,EAAO4B,QADvC,wBAEwBlD,EAAOsB,EAAO8I,eAAkB,KAC/CtK,EAAMiE,KAAKC,aAAc,kBAAsBhE,EAAOsD,EAAS+Q,OAAU,KAASrU,EAAOF,EAAM0D,KAAK,YAAe,gCAAoC,CACnJG,KAAM,IACNM,UAAW,gBACXC,SAAU,SAElB,QACpB,EACIoQ,eAAgB,SAAU5Q,GACLA,EAAIpC,OAAjB,IACIqC,EAAOD,EAAIC,KACXC,EAAiBF,EAAIE,eACrBC,EAAOH,EAAIG,KACXK,EAAWR,EAAIQ,SACfqQ,EAAa7Q,EAAI6Q,WACjBzQ,EAAUJ,EAAII,QACd/C,EAAU2C,EAAI3C,QAElB,OAAOjB,EAAMiE,KAAKC,aAAa,kBAAsBhE,EAAO6D,GAAS,KAAS7D,EAAOF,EAAM0D,KAAK,YAAe,KAASxD,EAAO8D,GAAY,KAAS9D,EAAOF,EAAM0D,KAAK,YAAe,KAASxD,EAAOe,GAAY,KAC3Mf,EAAO6D,GACjB,YAAa,CACTF,KAAM3D,EAAO2D,GACbM,UAAY,iBAAoBjE,EAAO4D,GACvCM,SAAUA,EACVqQ,WAAYA,GAExB,EACI5K,gBAAiB,WAAc,MAAO,EAAI,EAC1CxF,eAAgB,CACZ/B,KAAQ,CAAEgC,KAAM,OAAQT,KAAM,SAAUE,KAAM,OAAQ0Q,WAAY,UAAWzQ,QAAS,kBAAmBO,MAAO,cAChHmQ,OAAU,CAAEpQ,KAAM,SAAUT,KAAM,QAASE,KAAM,SAAUC,QAAS,oBAAqBO,MAAO,aAAcH,SAAU,OAAQqQ,WAAY,WAC5IpG,OAAU,CAAE/J,KAAM,SAAUT,KAAM,iBAAkBE,KAAM,SAAUC,QAAS,oBAC7E2Q,YAAe,CAAErQ,KAAM,cAAeT,KAAM,OAAQE,KAAM,OAAQC,QAAS,qBAAsByQ,WAAY,UAAWlQ,MAAO,cAC/HqQ,OAAU,CAAEtQ,KAAM,SAAUT,KAAM,OAAQE,KAAM,SAAUC,QAAS,qBAAsByQ,WAAY,UAAWlQ,MAAO,eAE3HE,eAAgB,GAChB/C,QAAS,WACL,IAAIP,EAAOC,KACPI,EAAS4S,EAAc5S,OACvBe,EAAUxC,EAAE,eAAiByB,EAAOe,QAAU,YAC9CwC,EAAShF,EAAE,eAAiByB,EAAOuD,OAAS,YAC5CoJ,EAAUpO,EAAE,eAAiByB,EAAO2M,QAAU,YAC9C0G,EAAmB9U,EAAE,eAAiByB,EAAOsT,cAAgB,IAAMtT,EAAOuT,oBAAsB,YAEpG5T,EAAK4D,OAASA,EAAOG,SAAS3C,GAC9BpB,EAAKgE,gBACLhE,EAAKgN,QAAUA,EAAQjJ,SAAS3C,GAChCpB,EAAK6T,iBACL7T,EAAK0T,iBAAmBA,EAAiB3P,SAAS3C,GAClDpB,EAAK0T,iBAAiBxS,OAAOlB,EAAK8T,qBAClC9T,EAAKoB,QAAUA,CACnB,EACA4C,cAAe,WACX,IAAIhE,EAAOC,KACPI,EAAS4S,EAAc5S,OACvBP,EAAUE,EAAKF,QACfuC,EAAWvC,EAAQuC,SACnBgJ,EAAiBvL,EAAQuL,eAAiBvL,EAAQuL,eAAiBrL,EAAKqL,eACxE5C,EAAYzI,EAAK0J,WAAW1J,EAAKE,WAErCF,EAAK4D,OAAO1C,OAAOrC,EAAM8C,SAAS0J,EAAfxM,CAA+BG,GAAO,EAAM,CAAC,EAAG,CAC/DqB,OAAQA,EACRgC,SAAUA,EACVoG,UAAWA,EACX0K,YAAanT,EAAK+T,qBAAqB/T,EAAKE,YAC7CF,EAAKE,YACZ,EACA6T,qBAAsB,SAAShU,GAE3B,OAAOhB,EAAOF,EAAMkD,OADT9B,KACqBH,QAAQiJ,eAA1BlK,CAA0CkB,GAC5D,EACA8T,eAAgB,WACZ,IAAI7T,EAAOC,KACPI,EAAS4S,EAAc5S,OACvBP,EAAUE,EAAKF,QACfuC,EAAWvC,EAAQuC,SACnBqG,EAAkB5I,EAAQ6B,UAAY3B,EAAK0I,gBAC3CD,EAAYzI,EAAK0J,WAAW1J,EAAKE,WAErCF,EAAKgN,QAAQ9L,OAAOrC,EAAM8C,SAAS+G,EAAf7J,CAAgCG,GAAO,EAAM,CAAC,EAAG,CACjEqB,OAAQA,EACRgC,SAAUA,EACVoG,UAAWA,GACZzI,EAAKE,YACZ,EACAwJ,WAAY,SAAShE,GACjB,IAAI1F,EAAOC,KACPwI,EAAY,CAAC,EAEjB,IAAKzI,EAAKyI,UACN,OAAOA,EAGX,IAAK,IAAI0B,KAAOnK,EAAKyI,UAAW,CAC5B,IAAI2B,EAAWpK,EAAKyI,UAAU0B,GAC1BE,EAAQD,EAASC,MACjBC,EAAgBzL,EAAMkD,OAAOsI,EAAbxL,CAAoB6G,GAExC,GAAK4E,EAAL,CAIKF,EAASG,WACVD,EAAgB,CAACA,IAKrB,IAFA,IAAI1I,EAAOwI,EAASI,WAAWC,OAEtBC,EAAgB,EAAGA,EAAgBJ,EAAc7F,OAAQiG,IAAiB,CAC/E,IAAIC,EAAe,KAEfvF,EAAQkF,EAAcI,GAErBN,EAASQ,iBACVxF,EAAQvG,EAAMkD,OAAOqI,EAASS,eAAtBhM,CAAsCuG,IAGlD,IAAK,IAAI0F,EAAY,EAAGA,EAAYlJ,EAAK6C,OAAQqG,IAC7C,GAAIlJ,EAAKkJ,GAAWd,IAAII,EAASS,iBAAmBzF,EAAO,CACvDuF,EAAe/I,EAAKkJ,GACpB,KACJ,CAGJ,GAAqB,OAAjBH,EAAuB,CACvB,IAAII,EAAgBlM,EAAMkD,OAAOqI,EAASY,eAAtBnM,CAAsC8L,GACtDM,EAAS,CACTZ,MAAOD,EAASC,MAChBzB,MAAOwB,EAASxB,MAChBzF,KAAMiH,EAASjH,KACfP,KAAM/D,EAAMkD,OAAOqI,EAASpI,cAAtBnD,CAAqC8L,GAC3CvF,MAAOA,EACP2E,MAAOgB,GAGPX,EAASG,SACL9B,EAAU2B,EAASC,OACnB5B,EAAU2B,EAASC,OAAOa,KAAKD,GAE/BxC,EAAU2B,EAASC,OAAS,CAACY,GAGjCxC,EAAU2B,EAASC,OAASY,CAEpC,CACJ,CA7CA,CA8CJ,CACA,OAAOxC,CACX,EACAqL,kBAAmB,WAQf,IAPA,IAAI9T,EAAOC,KACPH,EAAUE,EAAKF,QACfuC,EAAWvC,EAAQuC,SACnB4B,EAAUnE,EAAQmE,SAAWjE,EAAKsD,eAClCjD,EAAS4S,EAAc5S,OACvByC,EAAO,GAEF0B,EAAI,EAAGA,EAAIP,EAAQQ,OAAQD,IAAK,CACrC,IAAIE,EAAST,EAAQO,GAGrB,GAAsB,iBAFtBE,EAAU9F,EAAE+F,cAAcD,IAA0C,IAA/BE,OAAOC,KAAKH,GAAQD,QAAgBC,EAAOvB,KAAQuB,EAAOvB,KAAOuB,GAEtE,CAC5B,GAAe,WAAXA,EAAqB,CACrB5B,GAAQ,iCACR,QACJ,CAEA4B,EAAS1F,GAAO,EAAM,CAAC,EACnBgB,EAAKkD,eAAewB,IAAW,CAAE/B,eAAgB+B,EAAQ7B,QAAS6B,EAAS,WAC3E,CAAE9B,KAAMP,EAASqC,IAAWA,GAEpC,MAAW9F,EAAE+F,cAAcD,IAAWA,EAAOvB,OACzCuB,EAAS1F,GAAO,EAAM0F,EAClB,CAAE9B,KAAMP,EAASqC,EAAOvB,SAI3BnD,EAAK8E,eAAeJ,KAIzBA,EAAO/B,eAAiB+B,EAAO/B,gBAAkB,GAEjDG,GAAQjE,EAAM8C,SAAS3B,EAAKqT,eAApBxU,CAAoCG,GAAO,EAAM,CAAC,EAAG,CACzDqB,OAAQA,EACRgC,SAAUA,EACV2R,SAAS,EACTlU,QAAS,MACV4E,IACP,CAEA,OAAO5B,CACX,EACAoQ,cAAe,SAASvT,GACpB,IACIuF,EAAStG,EAAEe,EAAGuF,QAAQC,QAAQ,IAAMtG,EAAM0D,KAAK,WAAa,KAC5DM,EAAUqC,EAAO3C,KAAK1D,EAAM0D,KAAK,YACjCzC,EAAUoF,EAAO3C,KAAK1D,EAAM0D,KAAK,YACjCmD,EAJOzF,KAIKC,UAEhBJ,EAA8B,iBAAd,EAAyB,CAAEsF,MAAOtF,GAAYA,EAEzD+C,GARM5C,KAYNoE,QAxPA,SAwPgB,CACjBxB,QAASA,EACT/C,QAASd,EAAO,CAAE0G,KAAMA,GAAQ5F,IAExC,EACAgF,eAAgB,SAASC,GACrB,IACItE,EADOR,KACOH,QAAQW,OACtB2C,EAAQ2B,EAAK3B,MAAQ2B,EAAK3B,MAAM4B,MAAM,KAAO,GAEjD,IAAK5B,EAAMqB,OACP,OAAO,EAGX,IAAK,IAAID,EAAI,EAAGA,EAAIpB,EAAMqB,OAAQD,IAC9B,IAAK/D,EAAO2C,EAAMoB,IACd,OAAO,EAIf,OAAO,CACX,EACA0D,QAAS,WACMjI,KAENmB,QAAQ+G,IAAI5I,GAFNU,KAGNmB,QAAQwN,QACjB,IAGAqF,EAAuBhB,EAAcjU,OAAO,CAC5Ca,KAAM,SAASwI,EAAWvI,EAASC,EAAU0I,GACzC,IAAIzI,EAAOC,KAEXH,EAAUd,EAAO,CAAC,EAAGc,EAAQoU,YAAa,CACtCnL,eAAgBjJ,EAAQiJ,eACxBE,qBAAsBnJ,EAAQmJ,qBAC9B5G,SAAUvC,EAAQuC,SAClB5B,OAAQX,EAAQW,SAGpBT,EAAK0I,gBAAkB,SAAU9G,GAAQ,OAAO7C,EAAOF,EAAMkD,OAAOjC,EAAQmJ,qBAArBpK,CAA2C+C,GAAQ,EAE1GqR,EAAcrS,GAAGf,KAAKgB,KAAKb,EAAMqI,EAAWvI,EAASC,EAAU0I,GAE/DzI,EAAKoB,QAAQC,SAAS4R,EAAc5S,OAAO8T,QAC/C,EACA7Q,eAAgB,CAAE,OAAQ,SAAU,YAGpC8Q,EAAoBnB,EAAcjU,OAAO,CACzCa,KAAM,SAASwI,EAAWvI,EAASC,GAC/B,IAAIC,EAAOC,KAEXH,EAAUd,EAAO,CAAC,EAAGc,EAAQuN,SAAU,CACnCtE,eAAgBjJ,EAAQiJ,eACxBE,qBAAsBnJ,EAAQmJ,qBAC9B5G,SAAUvC,EAAQuC,SAClB5B,OAAQX,EAAQW,SAGpBT,EAAKqU,aAAerV,EAAOgB,EAAKqU,aAAc,CAC1C9H,MAAO,CACH,CAAElC,MAAOvK,EAAQiJ,eAAgBuL,MAAOxU,EAAQuC,SAASvC,EAAQiJ,iBACjE,CAAEsB,MAAOvK,EAAQmJ,qBAAsBqL,MAAOxU,EAAQuC,SAASvC,EAAQmJ,yBAE5EnJ,EAAQ2R,MAEXwB,EAAcrS,GAAGf,KAAKgB,KAAKb,EAAMqI,EAAWvI,EAASC,GAErDC,EAAKoB,QAAQC,SAAS4R,EAAc5S,OAAOc,KAC/C,EACAmC,eAAgB,CAAE,cAAe,UACjC+Q,aAAc,CACVE,gBAAiB,WAAc,MAAO,EAAI,GAE9CR,qBAAsB,SAAShU,GAE3B,OADWE,KACGH,QAAQuC,SAAa,KAAI,IAAOtD,EAAOF,EAAMkD,OADhD9B,KAC4DH,QAAQiJ,eAA1BlK,CAA0CkB,GACnG,EACA8T,eAAgB,WACZ,IAAI7T,EAAOC,KACPH,EAAUE,EAAKF,QACfO,EAAS4S,EAAc5S,OACvBgU,EAAevU,EAAQ2R,MAAQzR,EAAKqU,aACpCG,EAAc3V,EAAM2E,OACpBpC,EAAUxC,EAAE,eACP2D,KAAK,OAAQ,QACbA,KAAK,kBAAmBiS,GAEjCxU,EAAK4D,OAAOQ,KArVV,IAqVqB/D,EAAOwB,YAAYU,KAAK,KAAMiS,GAErDxU,EAAKgN,QAAQ9L,OAAOE,GAEpBpB,EAAKyR,KAAO,IAAIuB,EAAK5R,EAASpC,EAAO,CAAC,EAAGqV,EAAc,CACnDI,SAAUzU,EAAKE,aAGnBF,EAAKyR,KAAKrQ,QAAQgD,KAAK,SAASC,QAAQ,QAC5C,IAGAqQ,EAAsBN,EAAkBpV,OAAO,CAC/Ca,KAAM,SAASwI,EAAWvI,EAASC,EAAU0I,EAAWsF,GACpD,IACI4G,EAAoB7U,EAAQiP,eAAemC,gBAC3C0D,EAAcvM,EAAUmG,kBAAkB/D,OAAOoK,GAAG,GACpDC,EAAS/G,EAASA,EAAO4G,GAAqBC,EAAYD,GAC1DtO,EAAQrH,EAAO,CAAC,EAAGe,GAKvB,IAAK,IAAIoK,KAHTpK,EAAWsI,EAAUmC,WAAWuK,OACvB9F,IAAInP,EAAQoR,gBAAiB4D,GAEtBzO,EACZtG,EAASkP,IAAI9E,EAAK9D,EAAM8D,IAG5BiK,EAAkBxT,GAAGf,KAAKgB,KAbfZ,KAa0BoI,EAAWvI,EAASC,EAAU0I,EACvE,EACAsL,qBAAsB,SAAShU,GAE3B,OADWE,KACCH,QAAQuC,SAAS2S,aACjC,EACA1R,eAAgB,CAAE,SAAU,YAGhCtE,EAAOH,EAAMO,GAAGiJ,UAAW,CACvB4M,KAAMhC,EACNiC,MAAO,CACHC,QAASlB,EACTmB,KAAMhB,EACNiB,OAAQX,KAIhB1V,GAAO,EAAMH,EAAMO,GAAGiJ,UAAU4M,KAAM,CAAE5U,OA5Xd,CACtBe,QAAS,mBACTD,KAAM,wBACNgT,QAAS,2BACTvQ,OAAQ,0BACR/B,WAAY,+BACZI,OAAQ,WACRkH,cAAe,kCACf6D,QAAS,2BACT2G,cAAe,2BACfC,oBAAqB,6CACrB0B,WAAY,sBACZC,cAAe,2BAkXtB,CA5YD,CA4YGpW,OAAON,MAAM2J,QAEhB,SAAU5J,EAAGM,GACT,IAAIL,EAAQM,OAAON,MACfC,EAAaD,EAAMC,WAEnBE,EAASJ,EAAEI,OAGXO,EAAKD,wBAKLkW,EAAW1W,EAAWE,OAAO,CAC7Ba,KAAM,SAASuB,GACX,IAAIpB,EAAOC,KAEXD,EAAKyV,SAAW,CAAC,EACjBzV,EAAKoB,QAAUA,EAEfpB,EAAKQ,gBAEL1B,EAAW8B,GAAGf,KAAKgB,KAAKb,EAC5B,EAEA0V,iBAAkB,SAASC,EAAUC,EAAU9V,GAC3C,IAAIE,EAAOC,KAEND,EAAKyV,SAASE,KACf3V,EAAKyV,SAASE,GAAY,IAG1BC,EAASpQ,SAAWqQ,MAAMD,EAASpQ,UAAYoQ,EAASpQ,QAAQsQ,cAChEF,EAASpQ,QAAUoQ,EAASpQ,QAAQsQ,cAAcC,WAAW,IAGjE/V,EAAKyV,SAASE,GAAUzK,KAAK,CACzB0K,SAAU5W,EAAO,CACbwG,QAAS,KACTwQ,SAAS,EACTC,UAAU,EACVC,QAAQ,GACTN,GACH9V,QAASA,GAGjB,EAEAU,cAAe,WACX,IAAIR,EAAOC,KACPkW,EAAUnW,EAAKoW,SAAS7Q,KAAKvF,GAEjCA,EAAKoB,QAAQkE,GA3CP,UA2CoB/F,EAAI4W,EAClC,EAEAC,SAAU,SAASzW,GACf,IAEI0W,EAAWtO,EAFX/H,EAAOC,KACPiF,EAAStG,EAAEe,EAAGuF,QAGlB,IAAK,IAAIyQ,KAAY3V,EAAKyV,SACtB,GAAIvQ,EAAOyC,GAAGgO,KACVU,EAAYrW,EAAKyV,SAASE,GAC1B5N,EAAS/H,EAAKsW,WAAWD,EAAW1W,IAExB,CACRK,EAAKuW,SAASxO,EAAQpI,GACtB,KACJ,CAGZ,EAEA4W,SAAU,SAASxO,EAAQpI,GACvB,IACIuF,EAAStG,EAAEe,EAAGuF,QAEd6C,EAAOlF,SAHA5C,KAIFoE,QApEJ,SAoEoBrF,EAAO,CAAC,EAAGW,EAAI,CAChCkD,QAASkF,EAAOlF,QAChB/C,QAASd,EAAO,CAAC,EAAG,CAChBkG,OAAQA,GACT6C,EAAOjI,YAIdiI,EAAOoO,SACPpO,EAAOoO,QAAQxW,EAEvB,EAEA2W,WAAY,SAASD,EAAW1W,GAG5B,IAFA,IAES6E,EAAI,EAAGA,EAAI6R,EAAU5R,OAAQD,IAClC,GAHOvE,KAGEuW,iBAAiBH,EAAU7R,GAAGoR,SAAUjW,GAC7C,OAAO0W,EAAU7R,GAAG1E,OAGhC,EAEA0W,iBAAkB,SAASZ,EAAUjW,GAGjC,IAAK,IAAIwK,KAAOyL,EAAU,CACtB,IAAI3K,GAAS,EAEb,GACS,YADDd,EAEAc,EAAS2K,EAASzL,KAPnBlK,KAOiCwW,qBAAqB9W,QAGrDsL,EAAS2K,EAASzL,KAASxK,EAAGwK,GAItC,GAAIc,EACA,OAAO,CAEf,CAEA,OAAO,CACX,EAEAwL,qBAAsB,SAAS9W,GAE3B,OADU+W,UAAUC,SAASb,cAAcc,QAAQ,QAAU,EAChDjX,EAAGkX,QAAUlX,EAAGqW,OACjC,EAEA9N,QAAS,WACMjI,KAENmB,QAAQ+G,IAAI5I,EACrB,IAGJP,EAAOH,EAAMO,GAAGiJ,UAAW,CACvByO,gBAAiBtB,GAGxB,CA3ID,CA2IGrW,OAAON,MAAM2J,QAEhB,IAQQuO,EAAkB,CAClBC,QAAS,cACTpT,OAAQ,qBACRoJ,QAAS,sBACTiK,QAAS,qCACTC,iBAAkB,gCAClBxR,KAAM,mBACNqI,OAAQ,qBACRoJ,SAAU,aACV5S,SAAU,aACV0B,WAAY,2BAGZvG,EAAiB,SAASC,GAAMA,EAAGD,gBAAkB,GAEzD,SAAUd,EAAGM,GACT,IAAIL,EAAQM,OAAON,MACfuY,EAASvY,EAAMO,GAAGgY,OAClBC,EAAaxY,EAAM+C,KAAKyV,WACxBrY,EAASJ,EAAEI,OACXI,EAAKP,EAAMO,GACXkY,EAAUC,MAAMD,QAChB3S,EAAgB/F,EAAE+F,cAElB6S,EAAU,WAEVlY,EAAM,IAENmY,EAAO,OACPC,EAAa,YACbC,EAAW,UACXC,EAAS,SACTC,EAAU,UACVpY,EAAS,SACTqY,EAAS,SAGTC,EAAQ,SACRC,EAAc,cACdC,EAAY,YAQZC,EAAqB,qBACrBC,EAAmB,mBAEnBC,EAAYhB,EAAOpY,OAAO,CAC1Ba,KAAM,SAASuB,EAAStB,GACpB,IAAIE,EAAOC,KAEXmX,EAAOxW,GAAGf,KAAKgB,KAAKb,EAAMoB,EAAStB,GAEnCsB,EAAUpB,EAAKgX,QAAUhX,EAAKoB,QAE9BpB,EAAKqY,oBAAsBrY,EAAKoB,QAAQmB,KAAK,OAAS1D,EAAM2E,OAE5DxD,EAAKsY,WACLtY,EAAKuY,qBACLvY,EAAKwY,iBACLxY,EAAKyY,cACLzY,EAAK0Y,eACL1Y,EAAK2Y,gBACL3Y,EAAK4Y,gBAED5Y,EAAKF,QAAQ+Y,UACb7Y,EAAK8Y,OAGTja,EAAMka,OAAO/Y,EACjB,EAEAoM,OAAQ,CACJqL,EACAC,EACAC,EACAG,EACAD,EACAD,EACAI,EACAC,EACAC,EACAC,EA7CQ,WACA,WACE,aACA,aACA,aACE,gBAiDhBrY,QAAS,CACLqD,KAAM,YACN0V,UAAU,EACVpS,OAAQ,IACR9C,MAAO,OACPsT,SAAS,EACT/F,gBAAiB,SACjBnI,eAAgB,QAChBE,qBAAsB,cACtBa,kBAAmB,WACnB0G,eAAgB,KAChB/G,UAAU,EACV4D,UAAU,EACVvE,YAAY,EACZkQ,aAAa,EACb9E,aAAa,EACbzB,OAAQ,CACJC,SAAU,YAEdlI,WAAY,GACZwD,QAAS,GACTe,eAAgB,CACZmC,gBAAiB,SACjBlP,cAAe,OACfwO,eAAgB,MAEpB/H,UAAW,GACXpG,SAAU,CACNlB,KAAM,OACN6T,cAAe,kBACfvB,OAAQ,SACRhB,OAAQ,SACRwG,YAAa,eACbjY,QAAS,WACTkL,SAAU,YACVC,WAAY,cACZiC,UAAW,aACX9M,WAAY,cACZ+B,aAAc,gBACd+P,MAAO,QACPlG,OAAQ,SACRqG,OAAU,SACVC,YAAa,eACb5K,MAAO,SACPsQ,YAAa,eACb5W,UAAW,aACXmM,oBAAqB,+CACrBoD,kBAAmB,+CAI3BsH,aAAc,CACV/K,UAAW,CAAEgL,KAAM,SAAUjW,KAAM,YAAaN,QAAS,mBAAoBH,KAAM,OAAQU,MAAO,cAClGnB,OAAQ,CAAEmX,KAAM,UAChB3G,OAAQ,CACJ2G,KAAM,YACNjW,KAAM,SACNN,QAAS,gBACT/C,QAAS,gDACTsD,MAAO,eACPiW,SAAU,QACVC,UAAW,UACXC,iBAAkB,CACd5S,YAAa,SACbjE,KAAM,SACN8W,UAAW,WAKvBjN,MAAO,WACH,IACItB,EAASrM,EAAE,IAEf,IAAK,IAAIuL,KAHElK,KAGUwZ,SACjB7a,EAAE8a,MAAMzO,EAJDhL,KAIcwZ,SAAStP,GAAK1I,SAGvC,OAAOwJ,CACX,EAEA0O,cAAe,SAAS7E,GAIpB,OAHW7U,KACOmR,WAAW0D,GAAQrT,OAGzC,EAEAmY,cAAe,SAASC,GACpB,IACI9L,EADO9N,KACO0P,oBAAoBkK,GAEtC,GAAI9L,EACA,OAAOA,EAAOtM,OAEtB,EAEAqX,KAAM,WACF,IAAI9Y,EAAOC,KACP6Z,EAAgB,GAMpB,IAAK,IAAI3P,KAJTnK,EAAK+Z,WAAU,GAEfD,EAAc5O,KAAKlL,EAAKwO,kBAAkBwL,SAE1Bha,EAAKyI,UACjBqR,EAAc5O,KAAKlL,EAAKyI,UAAU0B,GAAKK,WAAWwP,SAGtDpb,EAAEqb,KAAKC,MAAM,KAAMJ,GACdnI,KAAK3R,EAAKwK,WAAW2P,KAAK5U,KAAKvF,EAAKwK,YAC7C,EAEAzK,SAAU,SAASqa,GACf,IAEI3W,EADA+G,EADOvK,KACWuK,WAMtB,OAFA/G,GADA2W,EAAUxb,EAAEwb,IACE7X,KAAK1D,EAAM0D,KAAK,QAEvBiI,EAAW6P,SAAS5W,EAC/B,EAEA6W,eAAgB,SAAST,GACrB,IAEIpW,EADA+K,EADOvO,KACkBuO,kBAM7B,OAFA/K,GADAoW,EAAYjb,EAAEib,IACEtX,KAAK1D,EAAM0D,KAAK,QAEzBiM,EAAkB6L,SAAS5W,EACtC,EAEAuK,QAAS,WACL,IACI/C,EAASrM,EAAE,IAEf,IAAK,IAAIuL,KAHElK,KAGUwZ,SACjB7a,EAAE8a,MAAMzO,EAJDhL,KAIcwZ,SAAStP,GAAK/I,SAGvC,OAAO6J,CACX,EAEAsP,eAAgB,SAASzF,GACrB,OAAO7U,KAAKmR,WAAW0D,GAAQ1T,OACnC,EAEAoZ,OAAQ,SAAS9U,EAAM+U,GAGnB,IAAK/U,EACD,OAHOzF,KAGKmB,QACPgD,KAAK9E,EAAM8Y,EAAU/X,OAAOqF,KAAOpG,EAAM8Y,EAAU/X,OAAO8W,UAAUvH,GAAG,GAGhFlK,EAAO9G,EAAE8G,IACT+U,GAAoB,IAAXA,IARExa,KAWFmB,QACAgD,KAAK9E,EAAM8Y,EAAU/X,OAAOqF,KAAOpG,EAAM8Y,EAAU/X,OAAO8W,UAC1DuD,YAAYtC,EAAU/X,OAAO8W,UAGtCzR,EAAKmE,YAAYuO,EAAU/X,OAAO8W,SAAUsD,EAChD,EAEAxB,YAAa,SAAS5J,GAClB,IAAIrP,EAAOC,KACPH,EAAUE,EAAKF,QACf6M,EAAO3M,EAAK2a,gBAAgB,CAAEzV,OAAQmK,IAEtCvP,EAAQoU,aACRlU,EAAKiS,UAAUjT,EAAO,CAClBwS,KAAM,WACP7E,GAEX,EAEAT,SAAU,SAASmD,GACf,IAEI1C,EAFA3M,EAAOC,KACPH,EAAUE,EAAKF,QAGnBuP,EAAczQ,EAAEyQ,GAChB1C,EAAO3M,EAAK2a,gBAAgB,CAAEzV,OAAQmK,IAElCvP,EAAQuN,UACRrN,EAAKiS,UAAUjT,EAAO,CAClBwS,KAAM,QACP7E,GAEX,EAEAiO,SAAU,WACK3a,KAENuK,WAAWqE,MACpB,EAEA1C,WAAY,SAASkD,GACjB,IAAIrP,EAAOC,KACPyF,EAAO1F,EAAKD,SAASsP,GAEzBrP,EAAKwK,WAAWoE,OAAOlJ,GACvB1F,EAAKwK,WAAWqE,MACpB,EAEA7N,QAAS,SAASjB,GACd,IAEI4M,EAAO,CAAEjH,KAAM3F,GAFRE,KACQH,QAGPuN,UAJDpN,KAKFgS,UAAUjT,EAAO,CAClBwS,KAAM,UACP7E,GAEX,EAEAyB,UAAW,SAASF,EAAOtM,GACvB,IAMIU,EAAWuY,EAAO9M,EANlB/N,EAAOC,KACP8O,EAAiB/P,GAAO,EAAM,CAAC,EAAGgB,EAAKF,QAAQiP,eAAgB,CAC3D1M,SAAUrC,EAAKF,QAAQuC,SACvB5B,OAAQT,EAAK8a,eACb1a,mBAAoBJ,EAAKqY,sBAI7BxC,MAAM3H,KAAWtM,IACjBA,EAAOsM,EACPA,EAAQ,MAGZ2M,EAAQ7a,EAAKwO,kBAAkBuM,gBAAgBnZ,GAC/CsM,EAAQ2H,MAAM3H,IAAoB,OAAVA,EAAiBlO,EAAKwO,kBAAkB5M,OAAO6C,OAASyJ,EAChFH,EAAS/N,EAAKgO,UAAU4B,GAAG1B,GAC3BlO,EAAKwO,kBAAkBwM,OAAO9M,EAAO2M,GAErCvY,EAAY,IAAIlD,EAAGiJ,UAAUE,UAAUwG,EAAgB8L,GAEnDhF,MAAM3H,KAAWH,EAAOtJ,OACxBzE,EAAKkX,iBAAiBhW,OAAOoB,EAAUlB,SAEvC2M,EAAOkN,OAAO3Y,EAAUlB,SAG5BkB,EAAUiD,KAAK9F,EAAQO,EAAKkb,eAAe3V,KAAKvF,GACpD,EAEAsB,WAAY,SAASsG,GAGjBA,EAAgBhJ,EAAEgJ,GAFP3H,KAIN0P,oBAAoB/H,GAAezG,MAC5C,EAEAga,WAAY,WACGlb,KAENuO,kBAAkBK,MAC3B,EAEAxL,aAAc,SAASuE,GACnB,IAAI5H,EAAOC,KACP8N,EAAS/N,EAAKsa,eAAe1S,GAEjC5H,EAAKwO,kBAAkBI,OAAOb,GAC9B/N,EAAKwO,kBAAkBK,MAC3B,EAEA6G,iBAAkB,SAASC,EAAUC,EAAU9V,GAChCG,KAENmb,gBAAgB1F,iBAAiBC,EAAUC,EAAU9V,EAC9D,EAEAub,OAAQ,SAAShM,EAAaoL,IAC1BpL,EAAczQ,EAAEyQ,IAEJxF,YAAYuO,EAAU/X,OAAOkE,UAAqB,IAAXkW,GACnDpL,EAAY9M,KAAK,iBAA4B,IAAXkY,EACtC,EAEAtM,eAAgB,SAASvG,EAAe6S,GACpC,IAAIza,EAAOC,KAEX2H,EAAgBhJ,EAAEgJ,GAElB5H,EAAK4Z,cAAchS,GAAeqG,MAAK,SAASC,EAAOxI,GACnD1F,EAAKqb,OAAO3V,EAAM+U,EACtB,GACJ,EAEAa,SAAU,SAASjM,EAAaoL,GAG5BA,GAAoB,IAAXA,GAFTpL,EAAczQ,EAAEyQ,IAIJjL,KAAK,IAAMvF,EAAM0D,KAAK,WAAa,KAAKsH,YAAYuO,EAAU/X,OAAOkE,SAAUkW,GAC3FpL,EAAYjL,KAAK,YAAYyF,YAAYuO,EAAU/X,OAAOkE,SAAUkW,GAEpEpL,EAAYxF,YAAYuO,EAAU/X,OAAO4F,WAAYwU,GACrDpL,EAAY9M,KAAK,gBAAiBkY,EACtC,EAEAc,iBAAkB,SAAS3T,EAAe6S,GACtC,IAAIza,EAAOC,KAEX2H,EAAgBhJ,EAAEgJ,GAElB5H,EAAK4Z,cAAchS,GAAeqG,MAAK,SAASC,EAAOxI,GACnD1F,EAAKsb,SAAS5V,EAAM+U,EACxB,GACJ,EAEAe,cAAe,SAAShR,GACpB,IAAIxK,EAAOC,KAEXD,EAAKF,QAAQ0K,WAAaA,EAC1BxK,EAAKyY,cAEDzY,EAAKF,QAAQ+Y,UACb7Y,EAAKwK,WAAW2P,MAExB,EAEAsB,qBAAsB,SAASjR,GAC3B,IAAIxK,EAAOC,KAEXD,EAAKF,QAAQkO,QAAUxD,EACvBxK,EAAKuY,qBAEDvY,EAAKF,QAAQ+Y,UACb7Y,EAAKwO,kBAAkBwL,OAAM,WACzBha,EAAK0b,aAAa1b,EAAKwK,WAAWC,OACtC,GAER,EAEA2G,WAAY,SAAS0D,GACjB,OAAO7U,KAAKwZ,SAAS3E,EACzB,EAEAnF,oBAAqB,SAAS/H,GAC1B,IAAI5H,EAAOC,KAIX,IAAK,IAAIkK,KAFTvC,EAAgBhJ,EAAEgJ,GAEF5H,EAAKyZ,SACjB,GAAIzZ,EAAKyZ,SAAStP,GAAK/I,QAAQ,KAAOwG,EAAc,GAChD,OAAO5H,EAAKyZ,SAAStP,EAGjC,EAEA8H,UAAW,SAASnS,GAChB,IAII6b,EAAkBP,EAJlBpb,EAAOC,KACPuR,EAAO,IAAIpS,EAAGiJ,UAAU6M,MAAMpV,EAAQ0R,MAAMxR,EAAMhB,EAAO,CAAC,EAAGgB,EAAKF,QAAS,CACvEW,OAAQT,EAAK8a,iBACbhb,EAAQ4F,KAAM1F,EAAKyI,UAAW3I,EAAQiO,QAG1C/N,EAAKwR,MACLxR,EAAKqS,aAGTrS,EAAKwR,KAAOA,EACZxR,EAAKgN,QAAQ4O,MAAM5b,EAAKwR,KAAKpQ,SAC7BpB,EAAKgN,QAAQtJ,IAAI,eACb1D,EAAKwR,KAAKpQ,QAAQya,aAClBC,SAAS9b,EAAKgN,QAAQtJ,IAAI,gBAAiB,KAE/C1D,EAAKwR,KAAKjM,KAAK9F,EAAQO,EAAKkb,eAAe3V,KAAKvF,IAEhDA,EAAKwR,KAAK4J,gBAAkBA,EAAkB,IAAIhc,EAAGiJ,UAAUyO,gBAAgB9W,EAAKwR,KAAKpQ,SAEzFga,EAAgB7V,KAAK9F,EAAQO,EAAKkb,eAAe3V,KAAKvF,IAEtDob,EAAgB1F,iBAAiB,IAAK,CAClClQ,QAAS3G,EAAMgG,KAAKkX,KACrB,CAAElZ,QAAS,qBAEduY,EAAgB1F,iBAAiB,IAAK,CAClClQ,QAAS3G,EAAMgG,KAAKY,OACrB,CAAE5C,QAAS,qBAAsB/C,QAAS,CACzC4F,KAAM1F,EAAKwR,KAAKtR,cAGpByb,EAAmB3b,EAAKwR,KAAKpQ,QAAQgD,KAAK,UAEpBK,SAClBkX,EAAmB3b,EAAKwR,KAAKpQ,QAAQgD,KAAK,WAG9CD,YAAW,WACPwX,EAAiB/L,GAAG,GAAGvL,QAAQ,QACnC,GAAG,EACP,EAEAgO,WAAY,WACR,IAAIrS,EAAOC,KAEPD,EAAKwR,OACLxR,EAAKwR,KAAK4J,gBAAgBlT,UAC1BlI,EAAKwR,KAAKjK,OAAO9H,GACjBO,EAAKwR,KAAKtJ,iBACHlI,EAAKwR,KAEZxR,EAAKgN,QAAQtJ,IAAI,eAAgB,IAEzC,EAEA4U,SAAU,WACN,IAAItY,EAAOC,KACPH,EAAUE,EAAKF,QACfO,EAAS+X,EAAU/X,OACnB2b,EAAY,eAAiB3b,EAAOuD,OAAS,WAC7CqY,EAAa,eAAiB5b,EAAO2M,QAAU,WAC/CkP,EAAgB,eAAiB7b,EAAO6W,iBAAmB,WAE/DlX,EAAKoB,QAAQC,SAAShB,EAAO2W,SACxBrT,MAAM7D,EAAQ6D,OACd8C,OAAO3G,EAAQ2G,QACflE,KAAK,OAAQ,eAClBvC,EAAK4D,OAAShF,EAAEod,GAAWjY,SAAS/D,EAAKoB,SACzCpB,EAAKgN,QAAUpO,EAAEqd,GAAYlY,SAAS/D,EAAKoB,SAC3CpB,EAAKkX,iBAAmBtY,EAAEsd,GAAenY,SAAS/D,EAAKgN,QAC3D,EAEA0L,aAAc,WACV,IAKIyD,EALAnc,EAAOC,KACPI,EAAS+X,EAAU/X,OACnBP,EAAUE,EAAKF,QACfsc,EAAaxd,EAAE,eAAiByB,EAAO4W,QAAU,YACjDoF,EAAiB/E,EAAQxX,EAAQmX,SAAW,CAAE1K,MAAOzM,EAAQmX,SAAYnX,EAAQmX,SAG7D,IAApBnX,EAAQmX,WAEkB,IAAnBoF,IACPA,EAAiB,CAAC,GAGtBF,EAAQE,EAAe9P,MAAQ8P,EAAe9P,MAAQ3H,OAAOC,KAAK7E,EAAKmZ,cACvEgD,EAAQnc,EAAKsc,cAAcH,GAC3BE,EAAeF,MAAQA,EACvBE,EAAelD,aAAenZ,EAAKmZ,aACnCkD,EAAeE,eAAiBvc,EAAKF,QAAQuC,SAE7CrC,EAAK4D,OAAO1C,OAAOkb,GACnBpc,EAAKiX,QAAU,IAAIpY,EAAMO,GAAGod,QAAQJ,EAAYC,GAChDrc,EAAKF,QAAQmX,QAAUjX,EAAKiX,QAAQnX,QAEpCE,EAAKiX,QAAQ1R,KArgBT,QAqgBqBvF,EAAKyc,cAAclX,KAAKvF,IACjDA,EAAKiX,QAAQ1R,KArgBR,SAqgBqBvF,EAAKyc,cAAclX,KAAKvF,IAClDA,EAAKiX,QAAQ1R,KAAKuS,EAAQ9X,EAAKyc,cAAclX,KAAKvF,IACtD,EAEAsc,cAAe,SAASH,GACpB,IAAInc,EAAOC,KACPQ,EAAST,EAAK8a,eA0BlB,OAxBAqB,EAAMO,SAAQ,SAAUC,GACpB,IAAIvZ,EAAQuZ,EAAEvZ,OAASpD,EAAKmZ,aAAawD,GAAK3c,EAAKmZ,aAAawD,GAAGvZ,MAAQ,KAE3E,GAAKA,IAILA,EAAQA,EAAM4B,MAAM,MAETP,OAIX,IAAK,IAAID,EAAI,EAAGA,EAAIpB,EAAMqB,OAAQD,IACzB/D,EAAO2C,EAAMoB,MACVmY,EAAEvZ,MACFuZ,EAAEC,QAAS,EAEX5c,EAAKmZ,aAAawD,GAAGC,QAAS,EAI9C,IAEOT,CACX,EAEAM,cAAe,SAAS9c,GACpB,IAAIkD,EAAUjE,EAAEe,EAAGuF,QAAQtD,KAAK,WAC5B9B,EAAUlB,EAAEe,EAAGuF,QAAQtD,KAAK,WAEhC9B,EAAUd,EAAO,CAAC,EAAGc,EAAS,CAAEsF,MAAOxG,EAAEe,EAAGuF,QAAQ8J,QAE/CnM,GAIL5C,KAAKib,eAAe,CAChBrY,QAASA,EACT/C,QAASA,GAEjB,EAEA+c,eAAgB,SAASC,GAMrB,IALA,IAEIvQ,EAFOtM,KACQH,QAAQmX,QACP1K,OAFTtM,KAEuBkZ,aAC9B4D,GAAQ,EAEHvY,EAAI,EAAGA,EAAI+H,EAAM9H,OAAQD,IAC9B,GAAI+H,EAAM/H,GAAGrB,MAAQ2Z,EAAU,CAC3BC,GAAQ,EACR,KACJ,CAGJ,OAAOxQ,EAAMuQ,IAAaC,CAC9B,EAEAjC,aAAc,WACV,IAAI9a,EAAOC,KAEX,MAAO,CACH+c,WAAYhd,EAAKid,cACjBvc,cAAeV,EAAKkd,iBACpBhT,aAAclK,EAAKmd,gBACnBC,YAAapd,EAAKkd,mBAAqBld,EAAKid,cAC5CrT,YAAa5J,EAAKkd,mBAAqBld,EAAKid,gBAAkBjd,EAAKmd,gBACnEE,aAAcrd,EAAKsd,gBACnBC,kBAAmBvd,EAAKwO,kBAAkBgP,qBAAqB3e,EAAM+C,KAAK6b,gBAC1E5X,MAAOhH,EAAM6e,QAAQ7X,MAAM7F,EAAKgX,SAExC,EAEAsG,cAAe,WACX,QAASrd,KAAKH,QAAQ2S,MAC1B,EAEAwK,YAAa,WACT,QAAShd,KAAKH,QAAQuN,QAC1B,EAEA6P,eAAgB,WACZ,QAASjd,KAAKH,QAAQkZ,WAC1B,EAEAmE,cAAe,WACX,QAASld,KAAKH,QAAQgJ,UAC1B,EAEAoS,eAAgB,SAASvO,GACrB,IACIgR,EAAchR,EAAK9J,QACnB+a,EAAiB5e,EAAO,CAAEqJ,UAAWpI,MAAQ0E,EAAcgI,EAAK7M,SAFzDG,KAEyE0a,gBAAgBhO,EAAK7M,SAAW,CAAEsF,MAAOuH,EAAK7M,UAC9H+C,EAAUzD,EAAGiJ,UAAU0K,SAAS4K,IAAgB,IAAIve,EAAGiJ,UAAU0K,SAAS4K,GAAaC,GAHhF3d,KAMDoE,QAAQwT,EAASlL,KACnB9J,EACAA,EAAQiL,OAER3O,OAAO0e,QAAQC,KAAKjf,EAAMuM,OAAO,qGAAsGuS,IAGnJ,EAEAhD,gBAAiB,SAAShO,GACtB,IAEIkN,EAAWO,EAASE,EAAgByD,EAFpC/d,EAAOC,KACPiF,EAASyH,EAAKqR,eAAiBrR,EAAKL,KAAOK,EAAKzH,OASpD,OANIyH,EAAKjH,OACLR,EAASlF,EAAKuM,QAAQpG,QAAO,SAASyK,EAAKqN,GACvC,OAAOrf,EAAEqf,GAAK1b,KAAK1D,EAAM0D,KAAK,UAAYoK,EAAKjH,KAAKsE,IAAI,MAC5D,KAGC9E,GAAYA,GAAUA,EAAOT,QAIlCoV,EAAYlN,EAAK/E,gBAAkB1C,EAAOyC,GAAGrI,EAAM8Y,EAAU/X,OAAO0N,QAAU7I,EAASA,EAAO4C,QAAQxI,EAAM8Y,EAAU/X,OAAO0N,SAC7HuM,EAAiBta,EAAKwO,kBAAkB6L,SAASR,EAAUjY,KAAK/C,EAAMqf,GAAK,QAC3E9D,EAAUlV,EAAOyC,GAAGrI,EAAM8Y,EAAU/X,OAAOqF,MAAQR,EAASA,EAAOC,QAAQ7F,EAAM8Y,EAAU/X,OAAOqF,MAClGqY,EAAe/d,EAAKwK,WAAW6P,SAASD,EAAQxY,KAAK/C,EAAMqf,GAAK,QAEzDlf,EAAO2N,EAAM,CAChBjH,KAAMqY,EACN1O,YAAa+K,EAAQ3V,OAAS2V,EAAUlb,EACxC6O,OAAQuM,EACR1S,cAAeiS,EAAUpV,OAASoV,EAAY3a,KAZvCyN,CAcf,EAGAnF,QAAS,SAAS9B,EAAM+U,GACpB,IAAIza,EAAOC,KAEI,OAAXwa,IACAA,GAAS,GAGRza,EAAKqE,QAAQuT,EAAQ,CAAElS,KAAMA,MAC9B1F,EAAKwa,OAAO9U,EAAM+U,GAClBza,EAAKiZ,YAAYvT,GAEzB,EAEA6S,mBAAoB,WAChB,IAAIvY,EAAOC,KACPH,EAAUE,EAAKF,QACfiP,EAAiBjP,EAAQiP,eACzBP,EAAoB1O,EAAQkO,QAQhC,GANAQ,EAAoB8I,EAAQ9I,GAAqB,CAAE5M,KAAM4M,GAAsBA,EAE3EO,EAAeyB,iBAAmBhC,EAAkB2P,OACpD3P,EAAkB2P,KAAO,CAAE9T,MAAO0E,EAAeyB,eAAgB4N,IAAK,SAGrE5P,EAAkB6P,OAAQ,CAC3B,IAAI1L,EAAS,CAAC,EAEdA,EAAO5D,EAAemC,iBAAmB,CAAEkI,KAAM,SAAUkF,aAAc,WAAa,OAAOzf,EAAM2E,OAAOwB,MAAM,KAAK,EAAI,GACzH2N,EAAO5D,EAAe/M,eAAiB,CAAEoX,KAAM,UAE3CrK,EAAeyB,iBACfmC,EAAO5D,EAAeyB,gBAAkB,CAAE4I,KAAM,WAGpD5K,EAAkB6P,OAAS,CACvBxD,MAAO,CACHlI,OAAQA,GAGpB,CAEI3S,EAAKwO,mBAAqBxO,EAAKue,uBAC/Bve,EAAKwO,kBAAkBjH,OAAOuQ,EAAQ9X,EAAKue,uBAC3Cve,EAAKwO,kBAAkBjH,OAAOuQ,EAAQ9X,EAAKwe,wBAE3Cxe,EAAKue,sBAAwBve,EAAKye,yBAAyBlZ,KAAKvF,GAChEA,EAAKwe,qBAAuBxe,EAAK0e,OAAOnZ,KAAKvF,IAGjDA,EAAKwO,kBAAoB6I,EAAW5D,OAAOjF,GAC1BjJ,KAAKuS,EAAQ9X,EAAKue,uBAClBhZ,KAAKwS,EAAO/X,EAAKwe,qBACtC,EAEAC,yBAA0B,SAAS9e,GAC/B,IAAIK,EAAOC,KACPwK,EAAOzK,EAAKwO,kBAAkB/D,OAC9BsE,EAAiB/P,GAAO,EAAM,CAAC,EAAGgB,EAAKF,QAAQiP,eAAgB,CAC3D1M,SAAUrC,EAAKF,QAAQuC,SACvB5B,OAAQT,EAAK8a,eACb1a,mBAAoBJ,EAAKqY,sBAE7BsG,EAAc5P,EAAemC,gBAEjC,KAAIvR,EAAGoI,QAAwB,SAAdpI,EAAGoI,QAIhB/H,EAAKqE,QAAQ6T,EAAoBvY,IAArC,CAIAK,EAAK+Z,WAAU,GAEf/Z,EAAKyZ,SAAW,CAAC,EACjBzZ,EAAKkX,iBAAiBpU,KAAK,IAE3B,IAAK,IAAI0B,EAAI,EAAGA,EAAIiG,EAAKhG,OAAQD,IAAK,CAClC,IAEIuJ,EAFAnM,EAAO6I,EAAKjG,GACZsQ,EAASlT,EAAK+c,IAAgBnH,EAGlCzJ,EAAS/N,EAAKyZ,SAAS3E,GAAU,IAAI1V,EAAGiJ,UAAUC,OAAOyG,EAAgBnN,GACzE5B,EAAKkX,iBAAiBhW,OAAO6M,EAAO3M,SACpC2M,EAAOxI,KAAK9F,EAAQO,EAAKkb,eAAe3V,KAAKvF,IAC7C+N,EAAOxI,KAAKkS,EAAMzX,EAAK8G,MAAMvB,KAAKvF,IAClC+N,EAAOxI,KAAKoS,EAAU3X,EAAK4e,SAASrZ,KAAKvF,IACzC+N,EAAOxI,KAAKmS,EAAY1X,EAAK6e,WAAWtZ,KAAKvF,IAC7C+N,EAAOxI,KAAKuS,EAAQ9X,EAAK8e,aAAavZ,KAAKvF,IAC3CA,EAAK+e,UAAUhR,EAAO3M,QAC1B,CAEkB,SAAdzB,EAAGoI,QAAqBpI,EAAGoI,SAAW7I,GACtCc,EAAK0b,aAAa1b,EAAKwK,WAAWC,QAGtCzK,EAAK+Z,WAAU,GACf/Z,EAAKqE,QAAQ8T,EAAkBxY,EA3B/B,CA4BJ,EAEAmH,MAAO,SAASnH,GACZM,KAAKoE,QAAQoT,EAAMxX,KAAK0a,gBAAgBhb,GAC5C,EAEAif,SAAU,SAASjf,GACfM,KAAKoE,QAAQsT,EAAU1X,KAAK0a,gBAAgBhb,GAChD,EAEAkf,WAAY,SAASlf,GACjBM,KAAKoE,QAAQqT,EAAYzX,KAAK0a,gBAAgBhb,GAClD,EAEAmf,aAAc,SAASnf,GACnBM,KAAKoE,QAAQyT,EAAQ7X,KAAK0a,gBAAgBhb,GAC9C,EAEA8Y,YAAa,WACT,IAAIzY,EAAOC,KACPH,EAAUE,EAAKF,QACf0K,EAAa1K,EAAQ0K,WAQzB,GANIA,EAAa8M,EAAQ9M,GAAc,CAAE5I,KAAM4I,GAAeA,EAE1D1K,EAAQ0Q,iBAAmBhG,EAAW2T,OACtC3T,EAAW2T,KAAO,CAAE9T,MAAOvK,EAAQ0Q,eAAgB4N,IAAK,SAGvD5T,EAAW6T,OAAQ,CACpB,IAAI1L,EAAS,CAAC,EAEdA,EAAO7S,EAAQoR,iBAAmB,CAAEkI,KAAM,UAC1CzG,EAAO7S,EAAQiJ,gBAAkB,CAAEqQ,KAAM,UACzCzG,EAAO7S,EAAQmJ,sBAAwB,CAAEmQ,KAAM,UAC/CzG,EAAO7S,EAAQgK,mBAAqB,CAAEsP,KAAM,UAExCtZ,EAAQ0Q,iBACRmC,EAAO7S,EAAQ0Q,gBAAkB,CAAE4I,KAAM,WAG7C5O,EAAW6T,OAAS,CAChBxD,MAAO,CACHlI,OAAQA,GAGpB,CAEI3S,EAAKwK,YAAcxK,EAAKgf,gBACxBhf,EAAKwK,WAAWjD,OAAOuQ,EAAQ9X,EAAKgf,gBACpChf,EAAKwK,WAAWjD,OAAOwQ,EAAO/X,EAAKif,iBAEnCjf,EAAKgf,eAAiBhf,EAAKoH,QAAQ7B,KAAKvF,GACxCA,EAAKif,cAAgBjf,EAAK0e,OAAOnZ,KAAKvF,IAG1CA,EAAKwK,WAAa6M,EAAW5D,OAAOjJ,GACnBjF,KAAKuS,EAAQ9X,EAAKgf,eACvC,EAEA5X,QAAS,SAASzH,GACd,IAAIK,EAAOC,KAEPN,EAAGoI,QAAwB,SAAdpI,EAAGoI,QAIhB/H,EAAKqE,QAAQ2T,EAAarY,KAI9BK,EAAK+Z,WAAU,GAEf/Z,EAAKkf,gBACLlf,EAAK0b,aAAa1b,EAAKwK,WAAWC,QAClCzK,EAAKqS,aAELrS,EAAKqE,QAAQ4T,EAAWtY,GACxBK,EAAK+Z,WAAU,GACnB,EAEA2E,OAAQ,WACJze,KAAK8Z,WAAU,EACnB,EAEA2B,aAAc,SAAS9Z,GAGnB,IAFA,IAES4C,EAAI,EAAGA,EAAI5C,EAAK6C,OAAQD,IAFtBvE,KAGFkf,YAAYvd,EAAK4C,GAE9B,EAEA2a,YAAa,SAASzZ,GAClB,IAAI1F,EAAOC,KACPH,EAAUd,EAAO,CAAC,EAAGgB,EAAKF,QAAS,CAAEW,OAAQT,EAAK8a,iBAElDhG,EAASpP,EADK5F,EAAQoR,kBACQsG,EAE9B1C,GAAU9U,EAAKyZ,SAAS3E,KACxBpP,EAAO,IAAItG,EAAGiJ,UAAUkD,KAAKzL,EAAS4F,EAAM1F,EAAKyI,WACjDzI,EAAKyZ,SAAS3E,GAAQ9T,QAAQ0E,EAAKtE,SACnCpB,EAAK+e,UAAUrZ,EAAKtE,SAE5B,EAEA8d,cAAe,WAGX,IAAK,IAAI/U,KAFElK,KAEUwZ,SAFVxZ,KAGFwZ,SAAStP,GAAKrJ,OAE3B,EAEA6X,cAAe,WACX,IAAI3Y,EAAOC,KACPH,EAAUE,EAAKF,QACfsf,EAAkB9H,EAAQxX,EAAQ2J,UAAY,CAAE8C,MAAOzM,EAAQ2J,UAAa3J,EAAQ2J,SAExF2V,EAAkBpgB,EAAO,CAAC,EAAG,CACzBqD,SAAUvC,EAAQuC,SAClB6C,OAAQlF,EAAKkX,iBACb/Q,OAAQ,gCACR4B,OAAQ/H,EAAKkb,eAAe3V,KAAKvF,GACjCqf,OAAQ,QACRC,eAAe,EACf7e,OAAQT,EAAK8a,gBACdsE,IAEsB,IAArBtf,EAAQ2J,WAIZzJ,EAAKyJ,SAAW,IAAIrK,EAAGiJ,UAAUuE,SAAS,YAAawS,GAC3D,EAEA5G,eAAgB,WAIZ,IAHA,IACI/P,EADOxI,KACUH,QAAQ2I,UAEpBjE,EAAI,EAAGA,EAAIiE,EAAUhE,OAAQD,IAH3BvE,KAIFsf,aAAa9W,EAAUjE,GAEpC,EAEA+a,aAAc,SAASnV,GACnB,IAAIpK,EAAOC,KAEND,EAAKyI,YACNzI,EAAKyI,UAAY,CAAC,GAGtBzI,EAAKyI,UAAU2B,EAASC,OAAS,CAC7BA,MAAOD,EAASC,MAChBlH,KAAMiH,EAASjH,KACfyF,MAAOwB,EAASxB,OAASwB,EAASC,MAClCrI,cAAeoI,EAASpI,eAAiB,OACzC6I,eAAgBT,EAASS,gBAAkB,QAC3CG,eAAgBZ,EAASY,gBAAkB,QAC3CJ,gBAA4C,IAA5BR,EAASQ,eACzBL,SAAUH,EAASG,WAAY,EAC/BC,WAAYxK,EAAKwf,oBAAoBpV,EAASI,YAEtD,EAEAgV,oBAAqB,SAASC,GAC1B,IAAIjV,EAAa8M,EAAQmI,GAAc,CAAE7d,KAAM6d,GAAeA,EAG9D,OAFyB5gB,EAAM+C,KAAKyV,WAAW5D,OAAOjJ,EAG1D,EAEAuP,UAAW,SAASU,GAGhB5b,EAAMO,GAAGsgB,SAFEzf,KAEYmB,QAASqZ,EACpC,EAEA7B,cAAe,WACX,IAAI5Y,EAAOC,KAEXD,EAAKob,gBAAkB,IAAIhc,EAAGiJ,UAAUyO,gBAAgB9W,EAAKoB,SAE7DpB,EAAKob,gBAAgB7V,KAAK9F,EAAQO,EAAKkb,eAAe3V,KAAKvF,IAC3DA,EAAK2f,oBACT,EAEAA,mBAAoB,WAChB,IAAI3f,EAAOC,KACPQ,EAAST,EAAK8a,eAEdra,EAAOuc,aACPhd,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAO0N,OAAQ,CACjEvI,QAAS3G,EAAMgG,KAAK+a,QACrB,CAAE/c,QAAS,wBAEd7C,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAO0N,OAAQ,CACjEvI,QAAS,IACTwQ,SAAS,GACV,CAAEnT,QAAS,oBAAqBsT,QAASzW,IAE5CM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAO0N,OAAQ,CACjEvI,QAAS,IACTwQ,SAAS,GACV,CAAEnT,QAAS,iBAAkBsT,QAASzW,IAEzCM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAO0N,OAAS,KAAM,CACxEvI,QAAS3G,EAAMgG,KAAKkX,KACrB,CAAElZ,QAAS,4BAEd7C,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAOqF,KAAM,CAC/DF,QAAS3G,EAAMgG,KAAK+a,QACrB,CAAE/c,QAAS,sBAEd7C,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAOqF,KAAM,CAC/DF,QAAS,IACTwQ,SAAS,GACV,CAAEnT,QAAS,kBAAmBsT,QAASzW,KAG1Ce,EAAOyJ,cACPlK,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAOqF,KAAM,CAC/DF,QAAS3G,EAAMgG,KAAKY,OACrB,CAAE5C,QAAS,oBAAqBsT,QAASzW,IAGhDM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAOqF,KAAM,CAC/DF,QAAS3G,EAAMgG,KAAKgb,IACrB,CAAEhd,QAAS,mBAAoB/C,QAAS,CAAEsF,MAAO,MAAQ+Q,QAASzW,IAErEM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAOqF,KAAM,CAC/DF,QAAS3G,EAAMgG,KAAKib,MACrB,CAAEjd,QAAS,mBAAoB/C,QAAS,CAAEsF,MAAO,QAAU+Q,QAASzW,IAEvEM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAOqF,KAAM,CAC/DF,QAAS3G,EAAMgG,KAAKkb,MACrB,CAAEld,QAAS,mBAAoB/C,QAAS,CAAEsF,MAAO,QAAU+Q,QAASzW,IAEvEM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAOqF,KAAM,CAC/DF,QAAS3G,EAAMgG,KAAKmb,OACrB,CAAEnd,QAAS,mBAAoB/C,QAAS,CAAEsF,MAAO,SAAW+Q,QAASzW,IAExEM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAO0N,OAAQ,CACjEvI,QAAS3G,EAAMgG,KAAKkb,MACrB,CAAEld,QAAS,mBAAoB/C,QAAS,CAAEsF,MAAO,QAAU+Q,QAASzW,IAEvEM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAO0N,OAAQ,CACjEvI,QAAS3G,EAAMgG,KAAKmb,OACrB,CAAEnd,QAAS,mBAAoB/C,QAAS,CAAEsF,MAAO,SAAW+Q,QAASzW,IAExEM,EAAKob,gBAAgB1F,iBAAiBpW,EAAM8Y,EAAU/X,OAAO0N,OAAQ,CACjEvI,QAAS3G,EAAMgG,KAAKib,MACrB,CAAEjd,QAAS,mBAAoB/C,QAAS,CAAEsF,MAAO,QAAU+Q,QAASzW,GAC3E,EAEAwI,QAAS,WACL,IAAIlI,EAAOC,KAYX,IAAK,IAAIkK,KAVLnK,EAAKue,wBACLve,EAAKwO,kBAAkBjH,OAAOuQ,EAAQ9X,EAAKue,uBAC3Cve,EAAKwO,kBAAkBjH,OAAOuQ,EAAQ9X,EAAKwe,uBAG3Cxe,EAAKgf,iBACLhf,EAAKwK,WAAWjD,OAAOuQ,EAAQ9X,EAAKgf,gBACpChf,EAAKwK,WAAWjD,OAAOwQ,EAAO/X,EAAKif,gBAGvBjf,EAAKyZ,SACjBzZ,EAAKyZ,SAAStP,GAAKjC,UAGnBlI,EAAKiX,SACLjX,EAAKiX,QAAQ/O,UAGblI,EAAKyJ,UACLzJ,EAAKyJ,SAASvB,UAGdlI,EAAKob,iBACLpb,EAAKob,gBAAgBlT,UAGrBlI,EAAKwR,MACLxR,EAAKigB,YAGT7I,EAAOxW,GAAGsH,QAAQrH,KAAKb,EAC3B,IAGJnB,EAAMO,GAAG8gB,OAAO9H,GAEhBpZ,GAAO,EAAMoZ,EAAW,CAAE/X,OAAQ0W,GAErC,CApjCD,CAojCG5X,OAAON,MAAM2J,OAEvB","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.sortable', 'kendo.html.button', 'kendo.core', 'kendo.icons', 'kendo.menu', 'kendo.dialog', 'kendo.form', 'kendo.data', 'kendo.toolbar', 'kendo.textbox'], factory) :\n    factory();\n})((function () {\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n\n            DOT = \".\",\n            NS = DOT + \"kendoTaskBoardColumn\",\n\n            CLICK = \"click\",\n            BLUR = \"blur\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            CHANGE = \"change\",\n            ACTION = \"action\";\n\n        var TaskBoardColumnStyles = {\n            element: \"k-taskboard-column\",\n            header: \"k-taskboard-column-header\",\n            headerText: \"k-taskboard-column-header-text\",\n            ellipsis: \"k-text-ellipsis\",\n            spacer: \"k-spacer\",\n            actions: \"k-taskboard-column-header-actions\",\n            cardsContainer: \"k-taskboard-column-cards-container\",\n            columnCards: \"k-taskboard-column-cards\",\n            actionButton: \"k-taskboard-column-action-button\",\n            card: \"k-taskboard-card\",\n            cardTitle: \"k-card-title\",\n            sortableSuffix: \"-kendosortable\",\n            textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n            input: \"k-input-inner\",\n            newColumn: \"k-taskboard-column-new\",\n            editColumn: \"k-taskboard-column-edit\",\n            disabled: \"k-disabled\",\n            dragPlaceholder: \"k-taskboard-drag-placeholder\",\n            dragHint: \"k-taskboard-drag-hint\",\n            ignoreDrag: \"k-taskboard-drag-ignore\",\n            grabbingCursor: \"k-cursor-grabbing\"\n        };\n\n        function preventDefault(ev) { ev.preventDefault(); }\n\n        var TaskBoardColumn = Observable.extend({\n            init: function(options, dataItem) {\n                var that = this;\n\n                that._dataItem = dataItem;\n                that.options = extend(true, {}, options);\n\n                that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n                that._render();\n                that._attachEvents();\n\n                if (options.states.isReorderable) {\n                    that._initSortable();\n                }\n\n                Observable.fn.init.call(that);\n            },\n\n            empty: function() {\n                var that = this;\n                that.container.empty();\n            },\n\n            addCard: function(cardHtml) {\n                var that = this;\n                that.container.append(cardHtml);\n            },\n\n            edit: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles;\n\n                that.element.addClass(styles.editColumn);\n                that._renderEditHeader();\n            },\n\n            getDataItem: function() {\n                return this._dataItem;\n            },\n\n            cards: function() {\n                var that = this;\n\n                return that.container.children();\n            },\n\n            template: function (data) { return \"<div class=\\\"\" + (encode(data.styles.headerText)) + \" \" + (encode(data.styles.ellipsis)) + \"\\\">\" + (kendo.getter(data.dataTextField)(data)) + \"</div>\" +\n                      \"<span class=\\\"\" + (encode(data.styles.spacer)) + \"\\\"></span>\" +\n                      \"\" + (data.buttons); },\n\n            editTemplate: function (data) { return \"<div class=\\\"\" + (encode(data.styles.headerText)) + \" \" + (encode(data.styles.ellipsis)) + \"\\\">\" +\n                            \"<span class=\\\"\" + (encode(data.styles.textbox)) + \"\\\">\" +\n                                \"<input class=\\\"\" + (encode(data.styles.input)) + \"\\\" placeholder=\\\"\" + (encode(kendo.getter(data.dataTextField)(data) ? data.messages.editColumn : data.messages.newColumn)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"SaveColumnCommand\\\" value=\\\"\" + (encode(kendo.getter(data.dataTextField)(data))) + \"\\\" />\" +\n                            '</span>' +\n                            '</div>' +\n                            \"<span class=\\\"\" + (encode(data.styles.spacer)) + \"\\\"></span>\" +\n                            \"\" + (data.buttons); },\n\n            actionButton: function (ref) {\n                            var styles = ref.styles;\n                            var icon = ref.icon;\n                            var spriteCssClass = ref.spriteCssClass;\n                            var text = ref.text;\n                            var command = ref.command;\n                            var options = ref.options;\n\n                            return kendo.html.renderButton((\"<button class=\\\"\" + (encode(styles.actionButton)) + \"\\\" title=\\\"\" + (encode(text)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"\" + (encode(command)) + \"\\\" \" + (options ? encode(kendo.attr('options')) + \"=\" + encode(options) : \"\") + \"></button>\"), {\n                            icon: encode(icon),\n                            iconClass: (\"k-button-icon \" + (encode(spriteCssClass))),\n                            fillMode: \"flat\"\n                        });\n        },\n\n            builtinButtons: {\n                \"editColumn\": { name: \"editColumn\", icon: \"pencil\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n                \"addCard\": { name: \"addCard\", icon: \"plus\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n                \"deleteColumn\": { name: \"deleteColumn\", icon: \"x\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n            },\n\n            defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    headerLabelId = kendo.guid(),\n                    element = $(\"<div class='\" + styles.element + \"'></div>\")\n                        .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                        .css({\n                            width: that.options.width\n                        })\n                        .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                    cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                    columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n                that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n                that._renderHeader();\n\n                cardsContainer.appendTo(element);\n                that.container = columnCards\n                                    .appendTo(cardsContainer)\n                                    .addClass(that.sortableUniqueClass);\n\n                that.element = element;\n            },\n\n            _renderHeader: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    options = that.options,\n                    template = options.template ? options.template : that.template;\n\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    buttons: that._buildActionsHtml(),\n                    dataTextField: options.dataTextField\n                }, that._dataItem)));\n            },\n\n            _renderEditHeader: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    options = that.options,\n                    template = options.editTemplate ? options.editTemplate : that.editTemplate;\n\n                that.header.html(\"\");\n\n                that.header.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    messages: options.messages,\n                    buttons: that._buildActionsHtml(),\n                    dataTextField: options.dataTextField\n                }, that._dataItem)));\n\n                setTimeout(function() {\n                    that.header.find(\"input\").trigger(\"focus\");\n                }, 0);\n\n                that.header.find(DOT + styles.actions).addClass(styles.disabled);\n            },\n\n            _buildActionsHtml: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    buttons = options.buttons || that.defaultButtons,\n                    styles = TaskBoardColumn.styles,\n                    html = \"<div class='\" + styles.actions + \"'>\";\n\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                    if (typeof button === \"string\") {\n                        button = extend(true, {},\n                            that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                            { text: messages[button] || button }\n                        );\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button,\n                            { text: messages[button.name] }\n                        );\n                    }\n\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n\n                    button.spriteCssClass = button.spriteCssClass || \"\";\n\n                    html += kendo.template(that.actionButton)(extend(true, {}, {\n                        styles: styles,\n                        options: false\n                    }, button));\n                }\n\n                html += \"</div>\";\n\n                return html;\n            },\n\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _actionClick: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\"));\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _textboxBlur: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\"));\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _attachEvents: function() {\n                var that = this;\n\n                that.header.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.actionButton,\n                    that._actionClick.bind(that));\n\n                that.header.on(BLUR + NS,\n                    DOT + TaskBoardColumn.styles.input,\n                    that._textboxBlur.bind(that));\n\n                that.header.on(\"keyup\" + NS,\n                    DOT + TaskBoardColumn.styles.input,\n                    function(ev) {\n                        if (ev.keyCode === kendo.keys.ENTER) {\n                            that._textboxBlur(ev);\n                        }\n                    }\n                );\n\n                if (that.container) {\n                    that.container.on(CLICK + NS,\n                        DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                        that._actionClick.bind(that));\n\n                    that.container.on(CLICK + NS,\n                        DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                        preventDefault);\n\n                }\n            },\n\n            _initSortable: function() {\n                var that = this,\n                    isRtl = that.options.states.isRtl,\n                    dirClass = isRtl ? \" k-rtl\" : \"\",\n                    container = that.container;\n\n                if (!that.container) {\n                    return;\n                }\n\n                that.sortable = new ui.Sortable(container, {\n                    ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                    connectWith: DOT + that.sortableUniqueClass,\n                    filter: DOT + TaskBoardColumn.styles.card,\n                    hint: function(element) {\n                        return element.clone()\n                            .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                            .css({\n                            width: element[0].offsetWidth,\n                            height: element[0].offsetHeight\n                        });\n                    },\n                    placeholder: function(element) {\n                        return $(\"<div></div>\")\n                            .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                            .css({\n                                height: element[0].offsetHeight\n                            });\n                    },\n                    move: that._move.bind(that),\n                    start: that._start.bind(that),\n                    end: that._end.bind(that),\n                    change: that._change.bind(that)\n                });\n\n                that.sortable.draggable.userEvents.unbind(\"select\");\n                that.sortable.draggable.userEvents.bind(\"select\", that._select.bind(that));\n            },\n\n            _select: function(ev) {\n                var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n                var target = $(ev.event.target);\n\n                for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                    if (target.is(ignoreDragSelectors[i])) {\n                        ev.preventDefault();\n                        break;\n                    }\n                }\n            },\n\n            _move: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE, ev);\n            },\n\n            _start: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE_START, ev);\n            },\n\n            _end: function(ev) {\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n                this.trigger(MOVE_END, ev);\n            },\n\n            _change: function(ev) {\n                var that = this;\n\n                extend(ev, {\n                    columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n                });\n\n                that.trigger(CHANGE, ev);\n\n                if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                    that.trigger(ACTION, {\n                        command: \"MoveCardCommand\",\n                        options: ev\n                    });\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.header.off(NS);\n                that.container.off(NS);\n\n                if (that.sortable) {\n                    that.sortable.destroy();\n                }\n            }\n        });\n\n        var TaskBoardNewColumn = TaskBoardColumn.extend({\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardColumn.styles,\n                    element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n                that.header = header.appendTo(element);\n\n                that._renderEditHeader();\n\n                that.element = element;\n            }\n        });\n\n        extend(kendo.ui, {\n            taskboard: {\n                Column: TaskBoardColumn,\n                NewColumn: TaskBoardNewColumn\n            }\n        });\n\n        extend(true, kendo.ui.taskboard.Column, {\n            styles: TaskBoardColumnStyles,\n            ignoreDragSelectors: [\"img\"]\n        });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n            extend = $.extend;\n\n        var TaskBoardCardStyles = {\n            element: \"k-taskboard-card\",\n            card: \"k-card\",\n            header: \"k-card-header\",\n            hbox: \"k-hbox\",\n            title: \"k-card-title\",\n            link: \"k-link\",\n            spacer: \"k-spacer\",\n            button: \"k-button\",\n            cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n            flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n            body: \"k-card-body\",\n            actionsIcon: \"more-vertical\",\n            moveCursor: \"k-cursor-move\",\n            categoryBorder: \"k-taskboard-card-category\",\n            headerActions: \"k-card-header-actions\",\n            disabled: \"k-disabled\"\n        };\n\n        var TaskBoardCard = Observable.extend({\n            init: function(options, dataItem, resources) {\n                var that = this;\n\n                that._dataItem = dataItem;\n                that.resources = resources;\n\n                that.options = extend(true, {}, options);\n\n                that._render();\n\n                Observable.fn.init.call(that);\n            },\n\n            contentTemplate: function (data) { return \"<div class=\\\"\" + (encode(data.styles.header)) + \" \" + (encode(data.styles.hbox)) + \"\\\">\" +\n                \"<a class=\\\"\" + (encode(data.styles.title)) + \" \" + (encode(data.styles.link)) + \"\\\" href=\\\"#\\\" \" + (data.selectable ? kendo.attr(\"command\") + '=SelectCardCommand' : '') + \">\" + (encode(kendo.getter(data.dataTitleField)(data))) + \"</a>\" +\n                \"<span class=\\\"\" + (encode(data.styles.spacer)) + \"\\\"></span>\" +\n                \"\" + (data.cardMenuButton) +\n            '</div>' +\n            \"<div class=\\\"\" + (encode(data.styles.body)) + \"\\\"><p>\" + (encode(kendo.getter(data.dataDescriptionField)(data))) + \"</p></div>\"; },\n\n            cardMenuButtonTemplate: function (ref) {\n                var styles = ref.styles;\n\n                return \"<div class=\\\"\" + (encode(styles.headerActions)) + \"\\\"><button aria-label=\\\"menu\\\" class=\\\"\" + (encode(styles.button)) + \" \" + (encode(styles.flatButton)) + \" \" + (encode(styles.cardMenuButton)) + \"\\\">\" +\n                                        kendo.ui.icon({ icon: encode(styles.actionsIcon), iconClass: \"k-button-icon\" }) +\n                                    '</button></div>';\n        },\n\n            _render: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoardCard.styles,\n                    template = options.template || that.contentTemplate,\n                    element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                    cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                    resources = that._resources(that._dataItem),\n                    borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                    categoryColor;\n\n                element\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .attr(\"aria-disabled\", !options.states.isDisabled)\n                    .attr(\"role\", \"listitem\")\n                    .toggleClass(styles.disabled, options.states.isDisabled);\n\n                categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                    that._dataItem.get(options.dataCategoryField);\n\n                if (categoryColor) {\n                    element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n                }\n\n                element.append(kendo.template(template)(extend(true, {}, {\n                    styles: styles,\n                    cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                    selectable: options.states.isSelectable,\n                    resources: resources,\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField\n                }, that._dataItem)));\n\n                that.element = element;\n            },\n\n            _resources: function(card) {\n                var that = this,\n                    resources = {};\n\n                if (!that.resources) {\n                    return resources;\n                }\n\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n\n                    if (!cardResources) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n\n                        var value = cardResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n\n            _buildTemplate: function() {\n                var that = this,\n                    options = that.options,\n                    headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                    bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n                return headerTemplate + bodyTemplate;\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Card: TaskBoardCard\n        });\n\n        extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            template = kendo.template,\n            ContextMenu = kendo.ui.ContextMenu,\n            encode = kendo.htmlEncode,\n\n            ACTION = \"action\";\n\n        var TaskBoardCardMenu = ContextMenu.extend({\n            init: function(element, options) {\n                var that = this;\n\n                ContextMenu.fn.init.call(that, element, options);\n\n                that._overrideTemplates();\n                that._extendItems();\n\n                that.bind(\"select\", that._onSelect.bind(that));\n                that.bind(\"open\", that._onOpen.bind(that));\n                that.bind(\"activate\", that._focus.bind(that));\n            },\n\n            _overrideTemplates: function() {\n                this.templates.sprite = function (ref) {\n                    var icon = ref.icon;\n                    var spriteCssClass = ref.spriteCssClass;\n\n                    return (\"\" + ((icon || spriteCssClass) ? kendo.ui.icon({ icon: encode(icon || \"\"), iconClass: encode(spriteCssClass || \"\") }) : ''));\n                };\n            },\n\n            defaultItems: {\n                \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"pencil\", command: \"EditCardCommand\", rules: \"isEditable\" },\n                \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"trash\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n            },\n\n            events: ContextMenu.fn.events.concat([\n                ACTION\n            ]),\n\n            _extendItems: function() {\n                var that = this,\n                    items = that.options.items,\n                    item, isBuiltInTool;\n\n                if (items && items.length) {\n                    for (var i = 0; i < items.length; i++) {\n                        item = items[i];\n                        isBuiltInTool = $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                        if (isBuiltInTool) {\n                            item = item.name;\n                        }\n\n                        if ($.isPlainObject(item)) {\n                            that._append(item);\n                        } else if (that.defaultItems[item]) {\n                            item = that.defaultItems[item];\n                            that._append(item);\n                        } else if (typeof(item) === \"string\") {\n                            item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                            that._append(item);\n                        }\n                    }\n                } else {\n                    for (var key in that.defaultItems) {\n                        item = that.defaultItems[key];\n                        that._append(item);\n                    }\n                }\n            },\n\n            _append: function(item) {\n                var that = this;\n\n                that._extendItem(item);\n\n                if (that._validateRules(item)) {\n                    that.append(item);\n                }\n            },\n\n            _extendItem: function(item) {\n                var that = this,\n                    messages = that.options.messages,\n                    attr = {};\n\n                attr[kendo.attr(\"command\")] = item.command;\n\n                if (item.options) {\n                    attr[kendo.attr(\"options\")] = item.options;\n                }\n\n                extend(item, {\n                    text: messages[item.name],\n                    icon: item.icon || \"\",\n                    spriteCssClass: item.spriteCssClass || \"\",\n                    attr: attr,\n                    uid: kendo.guid()\n                });\n            },\n\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _onSelect: function(ev) {\n                var command = $(ev.item).attr(kendo.attr(\"command\")),\n                    options = $(ev.item).attr(kendo.attr(\"options\")),\n                    target = $(ev.target);\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                this.action({\n                    command: command,\n                    options: extend({ target: target }, options)\n                });\n            },\n\n            _onOpen: function(ev) {\n                var menu = ev.sender,\n                    items = menu.options.items;\n\n                if (!items && $.isEmptyObject(this.defaultItems)) {\n                    ev.preventDefault();\n                }\n            },\n\n            _focus: function(ev) {\n                if (ev.sender) {\n                    ev.sender.element.trigger(\"focus\");\n                }\n            },\n\n            action: function(args) {\n                this.trigger(ACTION, args);\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            CardMenu: TaskBoardCardMenu\n        });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n            var kendo = window.kendo,\n                extend = $.extend,\n                isPlainObject = $.isPlainObject,\n                Class = kendo.Class;\n\n            var TaskBoardCommand = Class.extend({\n                init: function(options) {\n                    this.options = options;\n                    this.taskboard = options.taskboard;\n                },\n                _confirm: function(title, content, okText, cancel) {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        confirm;\n\n                    if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                        var fakePromise = $.Deferred();\n                        fakePromise.resolve();\n                        return fakePromise;\n                    }\n\n                    confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                        title: title,\n                        content: content,\n                        messages: {\n                            okText: okText,\n                            cancel: cancel\n                        },\n                        buttonLayout: \"normal\"\n                    })).data(\"kendoConfirm\");\n\n                    confirm.open();\n\n                    setTimeout(function() {\n                        confirm.element.trigger(\"focus\");\n                    });\n\n                    return confirm.result;\n                }\n            });\n\n            // Column commands\n            var AddColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard;\n\n                    if (taskboard.trigger(\"editColumn\", { column: null })) {\n                        return;\n                    }\n\n                    taskboard.columns().each(function(index, column) {\n                        taskboard.enableByColumn(column, false);\n                    });\n                    taskboard.addColumn();\n                }\n            });\n\n            var EditColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard;\n\n                    if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                        return;\n                    }\n\n                    taskboard.columns().each(function(index, column) {\n                        taskboard.enableByColumn(column, false);\n                    });\n                    taskboard.editColumn(options.columnElement);\n                }\n            });\n\n            var DeleteColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        messages = taskboardOptions.messages,\n                        columnDS = taskboard.columnsDataSource;\n\n                    var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                    result.done(function() {\n                        if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        columnDS.remove(options.column);\n                        columnDS.sync();\n                    });\n                }\n            });\n\n            var SaveColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard,\n                        columnSettings = taskboard.options.columnSettings,\n                        columnDS = taskboard.columnsDataSource,\n                        column = options.column,\n                        text = options.target.val();\n\n                    if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    column.set(columnSettings.dataTextField, text);\n                    columnDS.sync();\n                }\n            });\n\n            var CancelEditColumnCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        columnDS = taskboard.columnsDataSource;\n\n                    columnDS.cancelChanges();\n                }\n            });\n\n            //Move focus command\n            var MoveFocusCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options,\n                        cardElement = options.cardElement,\n                        columnElement = options.columnElement,\n                        columns = taskboard.columns(),\n                        currentColumnIndex = columnElement.index(),\n                        direction = options.value,\n                        columnIndex, column;\n\n                    switch (direction) {\n                        case \"left\":\n                            columnIndex = Math.max(0, currentColumnIndex - 1);\n                            break;\n                        case \"right\":\n                            columnIndex = Math.min(columns.length - 1, currentColumnIndex + 1);\n                            break;\n                        default:\n                            columnIndex = currentColumnIndex;\n                            break;\n                    }\n\n                    that.columns = columns;\n                    that.columnIndex = columnIndex;\n                    that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                    that.cards = column.cards();\n\n                    if (cardElement) {\n                        that._moveFromCardFocus(direction, cardElement);\n                    } else if (columnElement && direction === \"down\") {\n                        that.cards.eq(0).trigger(\"focus\");\n                    } else {\n                        columns.eq(columnIndex).trigger(\"focus\");\n                    }\n                },\n                _moveFromCardFocus: function(direction, cardElement) {\n                    var that = this,\n                        currentIndex = cardElement.index(),\n                        focusCard, index, seekFocusableCard = false;\n\n                    switch (direction) {\n                        case \"up\":\n                            index = currentIndex - 1;\n                            break;\n                        case \"down\":\n                            index = currentIndex + 1;\n                            break;\n                        default:\n                            seekFocusableCard = true;\n                            index = currentIndex;\n                            break;\n                    }\n\n                    focusCard = that.cards.eq(index);\n\n                    if (!focusCard.length && seekFocusableCard) {\n                        focusCard = that._getFocusableCard(index, direction);\n                    }\n\n                    if (index >= 0) {\n                        focusCard.trigger(\"focus\");\n                    } else {\n                        that.options.columnElement.focus();\n                    }\n                },\n                _getFocusableCard: function(index, direction) {\n                    var that = this,\n                        lastIndex = that.cards.length - 1,\n                        focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                    if (focusable.length) {\n                        return focusable;\n                    }\n\n                    if (that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                        return;\n                    }\n\n                    switch (direction) {\n                        case \"left\":\n                            that.columnIndex = Math.max(0, that.columnIndex - 1);\n                            break;\n                        case \"right\":\n                            that.columnIndex = Math.min(that.columns.length - 1, that.columnIndex + 1);\n                            break;\n                    }\n\n                    that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                    that.cards = that.column.cards();\n\n                    return that._getFocusableCard(index, direction);\n\n                }\n            });\n\n            // Card commands\n            var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n                _updateOrder: function(column, currentIndex) {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        dataOrderField = taskBoardOptions.dataOrderField,\n                        options = that.options,\n                        currentCard = options.card,\n                        cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                        newIndex = currentIndex,\n                        cards = column.cards().map(function(idx, card) {\n                            return taskboard.dataItem(card);\n                        }),\n                        prevCard = cards[cardIndex - 1],\n                        nextCard;\n\n                        currentCard.set(dataOrderField, newIndex);\n\n                        if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                            currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                        }\n\n                        for (var i = newIndex + 1; i < cards.length; i++) {\n                            nextCard = cards[i];\n\n                            if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                                nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                                currentCard = nextCard;\n                            } else {\n                                break;\n                            }\n                        }\n                }\n            });\n\n            var SelectCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options,\n                        cardElement = options.cardElement;\n\n                    taskboard._select(cardElement, true);\n                    cardElement.focus();\n                }\n            });\n\n            var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        options = that.options,\n                        receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                        targetColumn = taskboard._getColumn(receivedStatus),\n                        activeElm = $(document.activeElement);\n\n                    if (activeElm.length) {\n                        activeElm.trigger(\"change\");\n                    }\n\n                    if (taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                        return;\n                    }\n\n                    if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    if (targetColumn && taskBoardOptions.dataOrderField) {\n                        that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                    }\n\n                    taskboard.dataSource.sync().then(function() {\n                        taskboard.columns().eq(0).trigger(\"focus\");\n                    });\n                }\n            });\n\n            var DeleteCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        messages = taskboard.options.messages,\n                        options = that.options;\n\n                    var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                    result\n                        .done(function() {\n                            if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                                taskboard.dataSource.cancelChanges();\n                                return;\n                            }\n\n                            taskboard.dataSource.remove(options.card);\n                            taskboard.dataSource.sync().then(function() {\n                                taskboard.columns().eq(0).trigger(\"focus\");\n                            });\n                        })\n                        .fail(function() {\n                            options.cardElement.trigger(\"focus\");\n                        });\n                }\n            });\n\n            var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        taskBoardOptions = taskboard.options,\n                        columnSettings = taskBoardOptions.columnSettings,\n                        options = that.options,\n                        receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                    options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                    if (taskBoardOptions.dataOrderField) {\n                        that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                    }\n\n                    taskboard.dataSource.sync();\n                }\n            });\n\n            var EditCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options;\n\n                    if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                        return;\n                    }\n\n                    taskboard._openPane(extend({\n                        pane: \"Edit\"\n                    }, options));\n                }\n            });\n\n            var AddCardCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard,\n                        options = that.options;\n\n                    if (taskboard.trigger(\"editCard\", { card: null })) {\n                        return;\n                    }\n                    taskboard.dataSource.cancelChanges();\n                    taskboard._openPane(extend({\n                        pane: \"Create\"\n                    }, options));\n                }\n            });\n\n            // Pane commands\n            var OpenPaneCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        options = that.options,\n                        taskboard = that.taskboard;\n\n                    taskboard._openPane({\n                        pane: options.value,\n                        card: options.card,\n                        cardElement: options.cardElement,\n                        column: options.column,\n                        columnElement: options.columnElement\n                    });\n                }\n            });\n\n            var ClosePaneCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        taskboard = that.taskboard;\n\n                    taskboard._closePane();\n                    taskboard.dataSource.cancelChanges();\n                }\n            });\n\n            // Search command\n\n            var SearchCommand = TaskBoardCommand.extend({\n                exec: function() {\n                    var that = this,\n                        value = that.options.value,\n                        taskboard = that.taskboard,\n                        taskboardOptions = taskboard.options,\n                        searchOptions = taskboardOptions.search,\n                        operator = searchOptions.operator,\n                        fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                        filters;\n\n                    filters = that._buildFilters(fields, operator, value);\n\n                    taskboard.dataSource.filter(filters);\n                },\n                _buildFilters: function(fields, operator, value) {\n                    var filters = fields.map(function(field) {\n                        return { field: field, operator: operator, value: value };\n                    });\n\n                    return { logic: \"or\", filters: filters };\n                }\n            });\n\n            extend(kendo.ui.taskboard, {\n                Command: TaskBoardCommand,\n                commands: {\n                    AddColumnCommand: AddColumnCommand,\n                    EditColumnCommand: EditColumnCommand,\n                    DeleteColumnCommand: DeleteColumnCommand,\n                    SaveColumnCommand: SaveColumnCommand,\n                    CancelEditColumnCommand: CancelEditColumnCommand,\n                    OpenPaneCommand: OpenPaneCommand,\n                    ClosePaneCommand: ClosePaneCommand,\n                    SelectCardCommand: SelectCardCommand,\n                    MoveFocusCommand: MoveFocusCommand,\n                    SaveChangesCommand: SaveChangesCommand,\n                    DeleteCardCommand: DeleteCardCommand,\n                    MoveCardCommand: MoveCardCommand,\n                    EditCardCommand: EditCardCommand,\n                    AddCardCommand: AddCardCommand,\n                    SearchCommand: SearchCommand\n                }\n            });\n\n        })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            Observable = kendo.Observable,\n            encode = kendo.htmlEncode,\n\n            Form = kendo.ui.Form,\n\n            DOT = \".\",\n            NS = DOT + \"kendoTaskBoardPane\",\n\n            ACTION = \"action\",\n            CLICK = \"click\";\n\n        var TaskBoardPaneStyles = {\n            element: \"k-taskboard-pane\",\n            edit: \"k-taskboard-edit-pane\",\n            preview: \"k-taskboard-preview-pane\",\n            header: \"k-taskboard-pane-header\",\n            headerText: \"k-taskboard-pane-header-text\",\n            spacer: \"k-spacer\",\n            headerActions: \"k-taskboard-pane-header-actions\",\n            content: \"k-taskboard-pane-content\",\n            footerActions: \"k-taskboard-pane-actions\",\n            footerActionButtons: \"k-actions k-hstack k-justify-content-start\",\n            baseButton: \"k-button-solid-base\",\n            primaryButton: \"k-button-solid-primary\"\n        };\n\n        var TaskBoardPane = Observable.extend({\n            init: function(taskboard, options, dataItem, resources) {\n                var that = this;\n\n                that.taskboard = taskboard;\n                that._dataItem = dataItem;\n                that.resources = resources;\n                that.options = extend(true, {}, options);\n\n                that._render();\n\n                that.element.on(CLICK + NS,\n                    \"[\" + kendo.attr(\"command\") + \"]\",\n                    that._commandClick.bind(that));\n\n                Observable.fn.init.call(that);\n            },\n            headerTemplate: function (ref) {\n                var styles = ref.styles;\n                var messages = ref.messages;\n                var fieldFormat = ref.fieldFormat;\n\n                return \"<div class=\\\"\" + (encode(styles.headerText)) + \"\\\">\" + fieldFormat + \"</div>\" +\n                            \"<span class=\\\"\" + (encode(styles.spacer)) + \"\\\"></span>\" +\n                            \"<div class=\\\"\" + (encode(styles.headerActions)) + \"\\\">\" +\n                                kendo.html.renderButton((\"<button title=\\\"\" + (encode(messages.close)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"ClosePaneCommand\\\"></button>\"), {\n                                    icon: \"x\",\n                                    iconClass: 'k-button-icon',\n                                    fillMode: \"flat\",\n                                }) +\n                            '</div>';\n        },\n            buttonTemplate: function (ref) {\n                    var styles = ref.styles;\n                    var icon = ref.icon;\n                    var spriteCssClass = ref.spriteCssClass;\n                    var text = ref.text;\n                    var fillMode = ref.fillMode;\n                    var themeColor = ref.themeColor;\n                    var command = ref.command;\n                    var options = ref.options;\n\n                    return kendo.html.renderButton(\"<button title=\\\"\" + (encode(text)) + \"\\\" \" + (encode(kendo.attr(\"command\"))) + \"=\\\"\" + (encode(command)) + \"\\\" \" + (encode(kendo.attr(\"options\"))) + \"=\\\"\" + (encode(options)) + \"\\\">\" +\n                    \"\" + (encode(text)) +\n                '</button>', {\n                    icon: encode(icon),\n                    iconClass: (\"k-button-icon \" + (encode(spriteCssClass))),\n                    fillMode: fillMode,\n                    themeColor: themeColor\n                });\n        },\n            contentTemplate: function () { return \"\"; },\n            builtinButtons: {\n                \"edit\": { name: \"edit\", icon: \"pencil\", text: \"Edit\", themeColor: \"primary\", command: \"EditCardCommand\", rules: \"isEditable\" },\n                \"delete\": { name: \"delete\", icon: \"trash\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\", fillMode: \"flat\", themeColor: \"primary\" },\n                \"cancel\": { name: \"cancel\", icon: \"cancel-outline\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n                \"saveChanges\": { name: \"saveChanges\", icon: \"save\", text: \"Save\", command: \"SaveChangesCommand\", themeColor: \"primary\", rules: \"isEditable\" },\n                \"create\": { name: \"create\", icon: \"save\", text: \"Create\", command: \"SaveChangesCommand\", themeColor: \"primary\", rules: \"isEditable\" }\n            },\n            defaultButtons: [],\n            _render: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                    header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                    content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                    buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n                that.header = header.appendTo(element);\n                that._renderHeader();\n                that.content = content.appendTo(element);\n                that._renderContent();\n                that.buttonsContainer = buttonsContainer.appendTo(element);\n                that.buttonsContainer.append(that._buildButtonsHtml());\n                that.element = element;\n            },\n            _renderHeader: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    options = that.options,\n                    messages = options.messages,\n                    headerTemplate = options.headerTemplate ? options.headerTemplate : that.headerTemplate,\n                    resources = that._resources(that._dataItem);\n\n                that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources,\n                    fieldFormat: that._buildHeaderTemplate(that._dataItem)\n                }, that._dataItem)));\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return encode(kendo.getter(that.options.dataTitleField)(dataItem));\n            },\n            _renderContent: function() {\n                var that = this,\n                    styles = TaskBoardPane.styles,\n                    options = that.options,\n                    messages = options.messages,\n                    contentTemplate = options.template || that.contentTemplate,\n                    resources = that._resources(that._dataItem);\n\n                that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    resources: resources\n                }, that._dataItem)));\n            },\n            _resources: function(card) {\n                var that = this,\n                    resources = {};\n\n                if (!that.resources) {\n                    return resources;\n                }\n\n                for (var key in that.resources) {\n                    var resource = that.resources[key];\n                    var field = resource.field;\n                    var cardResources = kendo.getter(field)(card);\n\n                    if (!cardResources) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        cardResources = [cardResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                        var cardResource = null;\n\n                        var value = cardResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                cardResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (cardResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                            var result = {\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(cardResource),\n                                value: value,\n                                color: resourceColor\n                            };\n\n                            if (resource.multiple) {\n                                if (resources[resource.field]) {\n                                    resources[resource.field].push(result);\n                                } else {\n                                    resources[resource.field] = [result];\n                                }\n                            } else {\n                                resources[resource.field] = result;\n                            }\n                        }\n                    }\n                }\n                return resources;\n            },\n            _buildButtonsHtml: function() {\n                var that = this,\n                    options = that.options,\n                    messages = options.messages,\n                    buttons = options.buttons || that.defaultButtons,\n                    styles = TaskBoardPane.styles,\n                    html = \"\";\n\n                for (var i = 0; i < buttons.length; i++) {\n                    var button = buttons[i];\n                    button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                    if (typeof button === \"string\") {\n                        if (button === \"spacer\") {\n                            html += '<span class=\"k-spacer\"></span>';\n                            continue;\n                        }\n\n                        button = extend(true, {},\n                            that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                            { text: messages[button] || button }\n                        );\n                    } else if ($.isPlainObject(button) && button.name) {\n                        button = extend(true, button,\n                            { text: messages[button.name] }\n                        );\n                    }\n\n                    if (!that._validateRules(button)) {\n                        continue;\n                    }\n\n                    button.spriteCssClass = button.spriteCssClass || \"\";\n\n                    html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                        styles: styles,\n                        messages: messages,\n                        primary: false,\n                        options: null\n                    }, button));\n                }\n\n                return html;\n            },\n            _commandClick: function(ev) {\n                var that = this,\n                    target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                    command = target.attr(kendo.attr(\"command\")),\n                    options = target.attr(kendo.attr(\"options\")),\n                    card = that._dataItem;\n\n                options = typeof(options) === \"string\" ? { value: options } : options;\n\n                if (!command) {\n                    return;\n                }\n\n                that.trigger(ACTION, {\n                    command: command,\n                    options: extend({ card: card }, options)\n                });\n            },\n            _validateRules: function(tool) {\n                var that = this,\n                    states = that.options.states,\n                    rules = tool.rules ? tool.rules.split(\";\") : [];\n\n                if (!rules.length) {\n                    return true;\n                }\n\n                for (var i = 0; i < rules.length; i++) {\n                    if (!states[rules[i]]) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n                that.element.remove();\n            }\n        });\n\n        var TaskBoardPreviewPane = TaskBoardPane.extend({\n            init: function(taskboard, options, dataItem, resources) {\n                var that = this;\n\n                options = extend({}, options.previewPane, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n\n                that.contentTemplate = function (data) { return encode(kendo.getter(options.dataDescriptionField)(data)); };\n\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n                that.element.addClass(TaskBoardPane.styles.preview);\n            },\n            defaultButtons: [ \"edit\", \"spacer\", \"delete\" ]\n        });\n\n        var TaskBoardEditPane = TaskBoardPane.extend({\n            init: function(taskboard, options, dataItem) {\n                var that = this;\n\n                options = extend({}, options.editable, {\n                    dataTitleField: options.dataTitleField,\n                    dataDescriptionField: options.dataDescriptionField,\n                    messages: options.messages,\n                    states: options.states\n                });\n\n                that.formSettings = extend(that.formSettings, {\n                    items: [\n                        { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                        { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                    ]\n                }, options.form);\n\n                TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n                that.element.addClass(TaskBoardPane.styles.edit);\n            },\n            defaultButtons: [ \"saveChanges\", \"cancel\" ],\n            formSettings: {\n                buttonsTemplate: function () { return \"\"; }\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return ((that.options.messages.edit) + \" \" + (encode(kendo.getter(that.options.dataTitleField)(dataItem))));\n            },\n            _renderContent: function() {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoardPane.styles,\n                    formSettings = options.form || that.formSettings,\n                    formLabelId = kendo.guid(),\n                    element = $(\"<div></div>\")\n                        .attr(\"role\", \"form\")\n                        .attr(\"aria-labelledby\", formLabelId);\n\n                that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n                that.content.append(element);\n\n                that.form = new Form(element, extend({}, formSettings, {\n                    formData: that._dataItem\n                }));\n\n                that.form.element.find(\"input\").trigger(\"focus\");\n            }\n        });\n\n        var TaskBoardCreatePane = TaskBoardEditPane.extend({\n            init: function(taskboard, options, dataItem, resources, column) {\n                var that = this,\n                    columnStatusField = options.columnSettings.dataStatusField,\n                    firstColumn = taskboard.columnsDataSource.view().at(0),\n                    status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                    clone = extend({}, dataItem);\n\n                dataItem = taskboard.dataSource.add();\n                dataItem.set(options.dataStatusField, status);\n\n                for (var key in clone) {\n                    dataItem.set(key, clone[key]);\n                }\n\n                TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n            },\n            _buildHeaderTemplate: function(dataItem) {\n                var that = this;\n                return that.options.messages.createNewCard;\n            },\n            defaultButtons: [ \"create\", \"cancel\"]\n        });\n\n        extend(kendo.ui.taskboard, {\n            Pane: TaskBoardPane,\n            panes: {\n                Preview: TaskBoardPreviewPane,\n                Edit: TaskBoardEditPane,\n                Create: TaskBoardCreatePane\n            }\n        });\n\n        extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n    })(window.kendo.jQuery);\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Observable = kendo.Observable,\n\n            extend = $.extend,\n\n            DOT = \".\",\n            NS = DOT + \"kendoKeyboardManager\",\n            KEYDOWN = \"keydown\",\n            ACTION = \"action\";\n\n\n        var Keyboard = Observable.extend({\n            init: function(element) {\n                var that = this;\n\n                that.register = {};\n                that.element = element;\n\n                that._attachEvents();\n\n                Observable.fn.init.call(that);\n            },\n\n            registerShortcut: function(selector, shortcut, options) {\n                var that = this;\n\n                if (!that.register[selector]) {\n                    that.register[selector] = [];\n                }\n\n                if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                    shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n                }\n\n                that.register[selector].push({\n                    shortcut: extend({\n                        keyCode: null,\n                        ctrlKey: false,\n                        shiftKey: false,\n                        altKey: false\n                    }, shortcut),\n                    options: options\n                });\n\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    handler = that._handler.bind(that);\n\n                that.element.on(KEYDOWN + NS, handler);\n            },\n\n            _handler: function(ev) {\n                var that = this,\n                    target = $(ev.target),\n                    shortcuts, action;\n\n                for (var selector in that.register) {\n                    if (target.is(selector)) {\n                        shortcuts = that.register[selector];\n                        action = that._getAction(shortcuts, ev);\n\n                        if (action) {\n                            that._trigger(action, ev);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            _trigger: function(action, ev) {\n                var that = this,\n                    target = $(ev.target);\n\n                if (action.command) {\n                    that.trigger(ACTION, extend({}, ev, {\n                        command: action.command,\n                        options: extend({}, {\n                            target: target\n                        }, action.options)\n                    }));\n                }\n\n                if (action.handler) {\n                    action.handler(ev);\n                }\n            },\n\n            _getAction: function(shortcuts, ev) {\n                var that = this;\n\n                for (var i = 0; i < shortcuts.length; i++) {\n                    if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                        return shortcuts[i].options;\n                    }\n                }\n            },\n\n            _compareShortcut: function(shortcut, ev) {\n                var that = this;\n\n                for (var key in shortcut) {\n                    var result = false;\n\n                    switch (key) {\n                        case \"ctrlKey\":\n                            result = shortcut[key] !== that._getShortcutModifier(ev);\n                            break;\n                        default:\n                            result = shortcut[key] !== ev[key];\n                            break;\n                    }\n\n                    if (result) {\n                        return false;\n                    }\n                }\n\n                return true;\n            },\n\n            _getShortcutModifier: function(ev) {\n                var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n                return mac ? ev.metaKey : ev.ctrlKey;\n            },\n\n            destroy: function() {\n                var that = this;\n\n                that.element.off(NS);\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            KeyboardManager: Keyboard\n        });\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n            id: \"taskboard\",\n            name: \"TaskBoard\",\n            category: \"web\",\n            description: \"The TaskBoard widget displays cards.\",\n            depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\", \"textbox\"]\n        };\n\n        var TaskBoardStyles = {\n            wrapper: \"k-taskboard\",\n            header: \"k-taskboard-header\",\n            content: \"k-taskboard-content\",\n            toolbar: \"k-taskboard-toolbar k-toolbar-flat\",\n            columnsContainer: \"k-taskboard-columns-container\",\n            card: \"k-taskboard-card\",\n            column: \"k-taskboard-column\",\n            selected: \"k-selected\",\n            disabled: \"k-disabled\",\n            ignoreDrag: \"k-taskboard-drag-ignore\"\n        };\n\n        var preventDefault = function(ev) { ev.preventDefault(); };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                Widget = kendo.ui.Widget,\n                DataSource = kendo.data.DataSource,\n                extend = $.extend,\n                ui = kendo.ui,\n                isArray = Array.isArray,\n                isPlainObject = $.isPlainObject,\n\n                GENERIC = \"_generic\",\n\n                DOT = \".\",\n\n                MOVE = \"move\",\n                MOVE_START = \"moveStart\",\n                MOVE_END = \"moveEnd\",\n                SELECT = \"select\",\n                EXECUTE = \"execute\",\n                ACTION = \"action\",\n                CHANGE = \"change\",\n                CLICK = \"click\",\n                TOGGLE = \"toggle\",\n                ERROR = \"change\",\n                DATABINDING = \"dataBinding\",\n                DATABOUND = \"dataBound\",\n                EDIT_CARD = \"editCard\",\n                SAVE_CARD = \"saveCard\",\n                DELETE_CARD = \"deleteCard\",\n                EDIT_COLUMN = \"editColumn\",\n                SAVE_COLUMN = \"saveColumn\",\n                DELETE_COLUMN = \"deleteColumn\",\n\n                COLUMNSDATABINDING = \"columnsDataBinding\",\n                COLUMNSDATABOUND = \"columnsDataBound\";\n\n            var TaskBoard = Widget.extend({\n                init: function(element, options) {\n                    var that = this;\n\n                    Widget.fn.init.call(that, element, options);\n\n                    element = that.wrapper = that.element;\n\n                    that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                    that._wrapper();\n                    that._columnsDataSource();\n                    that._initResources();\n                    that._dataSource();\n                    that._initToolbar();\n                    that._initCardMenu();\n                    that._initKeyboard();\n\n                    if (that.options.autoBind) {\n                        that.load();\n                    }\n\n                    kendo.notify(that);\n                },\n\n                events: [\n                    MOVE,\n                    MOVE_START,\n                    MOVE_END,\n                    CHANGE,\n                    EXECUTE,\n                    SELECT,\n                    DATABINDING,\n                    DATABOUND,\n                    COLUMNSDATABINDING,\n                    COLUMNSDATABOUND,\n                    EDIT_CARD,\n                    SAVE_CARD,\n                    DELETE_CARD,\n                    EDIT_COLUMN,\n                    SAVE_COLUMN,\n                    DELETE_COLUMN\n                ],\n\n                options: {\n                    name: \"TaskBoard\",\n                    autoBind: true,\n                    height: 600,\n                    width: \"100%\",\n                    toolbar: true,\n                    dataStatusField: \"status\",\n                    dataTitleField: \"title\",\n                    dataDescriptionField: \"description\",\n                    dataCategoryField: \"category\",\n                    dataOrderField: null,\n                    cardMenu: true,\n                    editable: true,\n                    selectable: true,\n                    reorderable: true,\n                    previewPane: true,\n                    search: {\n                        operator: \"contains\"\n                    },\n                    dataSource: [],\n                    columns: [],\n                    columnSettings: {\n                        dataStatusField: \"status\",\n                        dataTextField: \"text\",\n                        dataOrderField: null\n                    },\n                    resources: [],\n                    messages: {\n                        edit: \"Edit\",\n                        createNewCard: \"Create new card\",\n                        create: \"Create\",\n                        search: \"Search\",\n                        previewCard: \"Preview card\",\n                        addCard: \"Add card\",\n                        editCard: \"Edit card\",\n                        deleteCard: \"Delete Card\",\n                        addColumn: \"Add column\",\n                        editColumn: \"Edit column\",\n                        deleteColumn: \"Delete column\",\n                        close: \"Close\",\n                        cancel: \"Cancel\",\n                        \"delete\": \"Delete\",\n                        saveChanges: \"Save changes\",\n                        title: \"Title:\",\n                        description: \"Description:\",\n                        newColumn: \"New column\",\n                        deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                        deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                    }\n                },\n\n                defaultTools: {\n                    addColumn: { type: \"button\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n                    spacer: { type: \"spacer\" },\n                    search: {\n                        type: \"component\",\n                        name: \"search\",\n                        command: \"SearchCommand\",\n                        options: \"{ \\\"field\\\": \\\"name\\\", \\\"operator\\\": \\\"startswith\\\" }\",\n                        rules: \"isSearchable\",\n                        overflow: \"never\",\n                        component: \"TextBox\",\n                        componentOptions: {\n                            placeholder: \"Search\",\n                            icon: \"search\",\n                            commandOn: \"input\"\n                        }\n                    }\n                },\n\n                items: function() {\n                    var that = this,\n                        result = $([]);\n\n                    for (var key in that._columns) {\n                        $.merge(result, that._columns[key].cards());\n                    }\n\n                    return result;\n                },\n\n                itemsByStatus: function(status) {\n                    var that = this,\n                        result = that._getColumn(status).cards();\n\n                    return result;\n                },\n\n                itemsByColumn: function(columnElm) {\n                    var that = this,\n                        column = that._getColumnByElement(columnElm);\n\n                    if (column) {\n                        return column.cards();\n                    }\n                },\n\n                load: function() {\n                    var that = this,\n                        fetchPromises = [];\n\n                    that._progress(true);\n\n                    fetchPromises.push(that.columnsDataSource.fetch());\n\n                    for (var key in that.resources) {\n                        fetchPromises.push(that.resources[key].dataSource.fetch());\n                    }\n\n                    $.when.apply(null, fetchPromises)\n                        .then(that.dataSource.read.bind(that.dataSource));\n                },\n\n                dataItem: function(cardElm) {\n                    var that = this,\n                        dataSource = that.dataSource,\n                        uid;\n\n                    cardElm = $(cardElm);\n                    uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                    return dataSource.getByUid(uid);\n                },\n\n                columnDataItem: function(columnElm) {\n                    var that = this,\n                        columnsDataSource = that.columnsDataSource,\n                        uid;\n\n                    columnElm = $(columnElm);\n                    uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                    return columnsDataSource.getByUid(uid);\n                },\n\n                columns: function() {\n                    var that = this,\n                        result = $([]);\n\n                    for (var key in that._columns) {\n                        $.merge(result, that._columns[key].element);\n                    }\n\n                    return result;\n                },\n\n                columnByStatus: function(status) {\n                    return this._getColumn(status).element;\n                },\n\n                select: function(card, toggle) {\n                    var that = this;\n\n                    if (!card) {\n                        return that.element\n                            .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                    }\n\n                    card = $(card);\n                    toggle = toggle !== false;\n\n                    if (toggle) {\n                        that.element\n                            .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                            .removeClass(TaskBoard.styles.selected);\n                    }\n\n                    card.toggleClass(TaskBoard.styles.selected, toggle);\n                },\n\n                previewCard: function(cardElement) {\n                    var that = this,\n                        options = that.options,\n                        args = that._extendExecArgs({ target: cardElement });\n\n                    if (options.previewPane) {\n                        that._openPane(extend({\n                            pane: \"Preview\"\n                        }, args));\n                    }\n                },\n\n                editCard: function(cardElement) {\n                    var that = this,\n                        options = that.options,\n                        args;\n\n                    cardElement = $(cardElement);\n                    args = that._extendExecArgs({ target: cardElement });\n\n                    if (options.editable) {\n                        that._openPane(extend({\n                            pane: \"Edit\"\n                        }, args));\n                    }\n                },\n\n                saveCard: function() {\n                    var that = this;\n\n                    that.dataSource.sync();\n                },\n\n                deleteCard: function(cardElement) {\n                    var that = this,\n                        card = that.dataItem(cardElement);\n\n                    that.dataSource.remove(card);\n                    that.dataSource.sync();\n                },\n\n                addCard: function(dataItem) {\n                    var that = this,\n                        options = that.options,\n                        args = { card: dataItem };\n\n                    if (options.editable) {\n                        that._openPane(extend({\n                            pane: \"Create\"\n                        }, args));\n                    }\n                },\n\n                addColumn: function(index, data) {\n                    var that = this,\n                        columnSettings = extend(true, {}, that.options.columnSettings, {\n                            messages: that.options.messages,\n                            states: that._buildStates(),\n                            sortableIdentifier: that._sortableIdentifier\n                        }),\n                        newColumn, model, column;\n\n                    if (isNaN(index) && !data) {\n                        data = index;\n                        index = null;\n                    }\n\n                    model = that.columnsDataSource._createNewModel(data);\n                    index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                    column = that.columns().eq(index);\n                    that.columnsDataSource.insert(index, model);\n\n                    newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                    if (isNaN(index) || !column.length) {\n                        that.columnsContainer.append(newColumn.element);\n                    } else {\n                        column.before(newColumn.element);\n                    }\n\n                    newColumn.bind(ACTION, that.executeCommand.bind(that));\n                },\n\n                editColumn: function(columnElement) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that._getColumnByElement(columnElement).edit();\n                },\n\n                saveColumn: function() {\n                    var that = this;\n\n                    that.columnsDataSource.sync();\n                },\n\n                deleteColumn: function(columnElement) {\n                    var that = this,\n                        column = that.columnDataItem(columnElement);\n\n                    that.columnsDataSource.remove(column);\n                    that.columnsDataSource.sync();\n                },\n\n                registerShortcut: function(selector, shortcut, options) {\n                    var that = this;\n\n                    that.keyboardManager.registerShortcut(selector, shortcut, options);\n                },\n\n                enable: function(cardElement, toggle) {\n                    cardElement = $(cardElement);\n\n                    cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                    cardElement.attr(\"aria-disabled\", toggle === false);\n                },\n\n                enableByColumn: function(columnElement, toggle) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that.itemsByColumn(columnElement).each(function(index, card) {\n                        that.enable(card, toggle);\n                    });\n                },\n\n                readOnly: function(cardElement, toggle) {\n                    cardElement = $(cardElement);\n\n                    toggle = toggle !== false;\n\n                    cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                    cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                    cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                    cardElement.attr(\"aria-readonly\", toggle);\n                },\n\n                readOnlyByColumn: function(columnElement, toggle) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    that.itemsByColumn(columnElement).each(function(index, card) {\n                        that.readOnly(card, toggle);\n                    });\n                },\n\n                setDataSource: function(dataSource) {\n                    var that = this;\n\n                    that.options.dataSource = dataSource;\n                    that._dataSource();\n\n                    if (that.options.autoBind) {\n                        that.dataSource.read();\n                    }\n                },\n\n                setColumnsDataSource: function(dataSource) {\n                    var that = this;\n\n                    that.options.columns = dataSource;\n                    that._columnsDataSource();\n\n                    if (that.options.autoBind) {\n                        that.columnsDataSource.fetch(function() {\n                            that._renderCards(that.dataSource.view());\n                        });\n                    }\n                },\n\n                _getColumn: function(status) {\n                    return this._columns[status];\n                },\n\n                _getColumnByElement: function(columnElement) {\n                    var that = this;\n\n                    columnElement = $(columnElement);\n\n                    for (var key in that._columns) {\n                        if (that._columns[key].element[0] === columnElement[0]) {\n                            return that._columns[key];\n                        }\n                    }\n                },\n\n                _openPane: function(options) {\n                    var that = this,\n                        pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                            states: that._buildStates()\n                        }), options.card, that.resources, options.column),\n                        focusableElement, keyboardManager;\n\n                    if (that.pane) {\n                        that._closePane();\n                    }\n\n                    that.pane = pane;\n                    that.content.after(that.pane.element);\n                    that.content.css(\"margin-right\",\n                        that.pane.element.outerWidth() -\n                        parseInt(that.content.css(\"paddingRight\"), 10));\n\n                    that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                    that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                    keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                    keyboardManager.registerShortcut(\"*\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"ClosePaneCommand\" });\n\n                    keyboardManager.registerShortcut(\"*\", {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SaveChangesCommand\", options: {\n                        card: that.pane._dataItem\n                    } });\n\n                    focusableElement = that.pane.element.find(\"input\");\n\n                    if (!focusableElement.length) {\n                        focusableElement = that.pane.element.find(\"button\");\n                    }\n\n                    setTimeout(function() {\n                        focusableElement.eq(0).trigger(\"focus\");\n                    }, 0);\n                },\n\n                _closePane: function() {\n                    var that = this;\n\n                    if (that.pane) {\n                        that.pane.keyboardManager.destroy();\n                        that.pane.unbind(ACTION);\n                        that.pane.destroy();\n                        delete that.pane;\n\n                        that.content.css(\"margin-right\", \"\");\n                    }\n                },\n\n                _wrapper: function() {\n                    var that = this,\n                        options = that.options,\n                        styles = TaskBoard.styles,\n                        headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                        contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                        colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                    that.element.addClass(styles.wrapper)\n                        .width(options.width)\n                        .height(options.height)\n                        .attr(\"role\", \"application\");\n                    that.header = $(headerElm).appendTo(that.element);\n                    that.content = $(contentElm).appendTo(that.element);\n                    that.columnsContainer = $(colsContainer).appendTo(that.content);\n                },\n\n                _initToolbar: function() {\n                    var that = this,\n                        styles = TaskBoard.styles,\n                        options = that.options,\n                        toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                        toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar,\n                        tools;\n\n                    if (options.toolbar === false) {\n                        return;\n                    } else if (toolbarOptions === true) {\n                        toolbarOptions = {};\n                    }\n\n                    tools = toolbarOptions.items ? toolbarOptions.items : Object.keys(that.defaultTools);\n                    tools = that._processTools(tools);\n                    toolbarOptions.tools = tools;\n                    toolbarOptions.defaultTools = that.defaultTools;\n                    toolbarOptions.parentMessages = that.options.messages;\n\n                    that.header.append(toolbarElm);\n                    that.toolbar = new kendo.ui.ToolBar(toolbarElm, toolbarOptions);\n                    that.options.toolbar = that.toolbar.options;\n\n                    that.toolbar.bind(CLICK, that._toolbarClick.bind(that));\n                    that.toolbar.bind(TOGGLE, that._toolbarClick.bind(that));\n                    that.toolbar.bind(CHANGE, that._toolbarClick.bind(that));\n                },\n\n                _processTools: function(tools) {\n                    var that = this,\n                        states = that._buildStates();\n\n                    tools.forEach(function (t) {\n                        var rules = t.rules || that.defaultTools[t] ? that.defaultTools[t].rules : null;\n\n                        if (!rules) {\n                            return;\n                        }\n\n                        rules = rules.split(\";\");\n\n                        if (!rules.length) {\n                            return;\n                        }\n\n                        for (var i = 0; i < rules.length; i++) {\n                            if (!states[rules[i]]) {\n                                if (t.rules) {\n                                    t.hidden = true;\n                                } else {\n                                    that.defaultTools[t].hidden = true;\n                                }\n                            }\n                        }\n                    });\n\n                    return tools;\n                },\n\n                _toolbarClick: function(ev) {\n                    var command = $(ev.target).data(\"command\"),\n                        options = $(ev.target).data(\"options\");\n\n                    options = extend({}, options, { value: $(ev.target).val() });\n\n                    if (!command) {\n                        return;\n                    }\n\n                    this.executeCommand({\n                        command: command,\n                        options: options\n                    });\n                },\n\n                _isToolEnabled: function(toolName) {\n                    var that = this,\n                        options = that.options.toolbar,\n                        items = options.items || that.defaultTools,\n                        found = false;\n\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].name == toolName) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    return items[toolName] || found;\n                },\n\n                _buildStates: function() {\n                    var that = this;\n\n                    return {\n                        isEditable: that._isEditable(),\n                        isReorderable: that._isReorderable(),\n                        isSelectable: that._isSelectable(),\n                        isReadOnly: !that._isReorderable() && !that._isEditable(),\n                        isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                        isSearchable: that._isSearchable(),\n                        notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                        isRtl: kendo.support.isRtl(that.wrapper)\n                    };\n                },\n\n                _isSearchable: function() {\n                    return !!this.options.search;\n                },\n\n                _isEditable: function() {\n                    return !!this.options.editable;\n                },\n\n                _isReorderable: function() {\n                    return !!this.options.reorderable;\n                },\n\n                _isSelectable: function() {\n                    return !!this.options.selectable;\n                },\n\n                executeCommand: function(args) {\n                    var that = this,\n                        commandName = args.command,\n                        commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                        command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                    if (!that.trigger(EXECUTE, args)) {\n                        if (command) {\n                            command.exec();\n                        } else {\n                            window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                        }\n                    }\n                },\n\n                _extendExecArgs: function(args) {\n                    var that = this,\n                        target = args.draggableEvent ? args.item : args.target,\n                        columnElm, cardElm, columnDataItem, cardDataItem;\n\n                    if (args.card) {\n                        target = that.items().filter(function(idx, elm) {\n                            return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                        });\n                    }\n\n                    if (!target || !(target && target.length)) {\n                        return args;\n                    }\n\n                    columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                    columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                    cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                    cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                    return extend(args, {\n                        card: cardDataItem,\n                        cardElement: cardElm.length ? cardElm : undefined$1,\n                        column: columnDataItem,\n                        columnElement: columnElm.length ? columnElm : undefined$1\n                    });\n                },\n\n\n                _select: function(card, toggle) {\n                    var that = this;\n\n                    if (toggle === null) {\n                        toggle = true;\n                    }\n\n                    if (!that.trigger(SELECT, { card: card })) {\n                        that.select(card, toggle);\n                        that.previewCard(card);\n                    }\n                },\n\n                _columnsDataSource: function() {\n                    var that = this,\n                        options = that.options,\n                        columnSettings = options.columnSettings,\n                        columnsDataSource = options.columns;\n\n                    columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                    if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                        columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                    }\n\n                    if (!columnsDataSource.schema) {\n                        var fields = {};\n\n                        fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function() { return kendo.guid().split(\"-\")[0]; } };\n                        fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                        if (columnSettings.dataOrderField) {\n                            fields[columnSettings.dataOrderField] = { type: \"number\" };\n                        }\n\n                        columnsDataSource.schema = {\n                            model: {\n                                fields: fields\n                            }\n                        };\n                    }\n\n                    if (that.columnsDataSource && that._columnsChangeHandler) {\n                        that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                        that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                    } else {\n                        that._columnsChangeHandler = that._columnsDataSourceChange.bind(that);\n                        that._columnsErrorHandler = that._error.bind(that);\n                    }\n\n                    that.columnsDataSource = DataSource.create(columnsDataSource)\n                                    .bind(CHANGE, that._columnsChangeHandler)\n                                    .bind(ERROR, that._columnsErrorHandler);\n                },\n\n                _columnsDataSourceChange: function(ev) {\n                    var that = this,\n                        view = that.columnsDataSource.view(),\n                        columnSettings = extend(true, {}, that.options.columnSettings, {\n                            messages: that.options.messages,\n                            states: that._buildStates(),\n                            sortableIdentifier: that._sortableIdentifier\n                         }),\n                        statusField = columnSettings.dataStatusField;\n\n                    if (ev.action && ev.action !== \"sync\") {\n                        return;\n                    }\n\n                    if (that.trigger(COLUMNSDATABINDING, ev)) {\n                        return;\n                    }\n\n                    that._progress(true);\n\n                    that._columns = {};\n                    that.columnsContainer.html(\"\");\n\n                    for (var i = 0; i < view.length; i++) {\n                        var data = view[i];\n                        var status = data[statusField] || GENERIC;\n                        var column;\n\n                        column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                        that.columnsContainer.append(column.element);\n                        column.bind(ACTION, that.executeCommand.bind(that));\n                        column.bind(MOVE, that._move.bind(that));\n                        column.bind(MOVE_END, that._moveEnd.bind(that));\n                        column.bind(MOVE_START, that._moveStart.bind(that));\n                        column.bind(CHANGE, that._changeOrder.bind(that));\n                        that._tabindex(column.element);\n                    }\n\n                    if (ev.action === \"sync\" || ev.action === undefined$1) {\n                        that._renderCards(that.dataSource.view());\n                    }\n\n                    that._progress(false);\n                    that.trigger(COLUMNSDATABOUND, ev);\n                },\n\n                _move: function(ev) {\n                    this.trigger(MOVE, this._extendExecArgs(ev));\n                },\n\n                _moveEnd: function(ev) {\n                    this.trigger(MOVE_END, this._extendExecArgs(ev));\n                },\n\n                _moveStart: function(ev) {\n                    this.trigger(MOVE_START, this._extendExecArgs(ev));\n                },\n\n                _changeOrder: function(ev) {\n                    this.trigger(CHANGE, this._extendExecArgs(ev));\n                },\n\n                _dataSource: function() {\n                    var that = this,\n                        options = that.options,\n                        dataSource = options.dataSource;\n\n                        dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                    if (options.dataOrderField && !dataSource.sort) {\n                        dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                    }\n\n                    if (!dataSource.schema) {\n                        var fields = {};\n\n                        fields[options.dataStatusField] = { type: \"string\" };\n                        fields[options.dataTitleField] = { type: \"string\" };\n                        fields[options.dataDescriptionField] = { type: \"string\" };\n                        fields[options.dataCategoryField] = { type: \"string\" };\n\n                        if (options.dataOrderField) {\n                            fields[options.dataOrderField] = { type: \"number\" };\n                        }\n\n                        dataSource.schema = {\n                            model: {\n                                fields: fields\n                            }\n                        };\n                    }\n\n                    if (that.dataSource && that._changeHandler) {\n                        that.dataSource.unbind(CHANGE, that._changeHandler);\n                        that.dataSource.unbind(ERROR, that._errorHandler);\n                    } else {\n                        that._changeHandler = that._change.bind(that);\n                        that._errorHandler = that._error.bind(that);\n                    }\n\n                    that.dataSource = DataSource.create(dataSource)\n                                    .bind(CHANGE, that._changeHandler);\n                },\n\n                _change: function(ev) {\n                    var that = this;\n\n                    if (ev.action && ev.action !== \"sync\") {\n                        return;\n                    }\n\n                    if (that.trigger(DATABINDING, ev)) {\n                        return;\n                    }\n\n                    that._progress(true);\n\n                    that._clearColumns();\n                    that._renderCards(that.dataSource.view());\n                    that._closePane();\n\n                    that.trigger(DATABOUND, ev);\n                    that._progress(false);\n                },\n\n                _error: function() {\n                    this._progress(false);\n                },\n\n                _renderCards: function(data) {\n                    var that = this;\n\n                    for (var i = 0; i < data.length; i++) {\n                        that._renderCard(data[i]);\n                    }\n                },\n\n                _renderCard: function(card) {\n                    var that = this,\n                        options = extend({}, that.options, { states: that._buildStates() }),\n                        statusField = options.dataStatusField,\n                        status = card[statusField] || GENERIC;\n\n                    if (status && that._columns[status]) {\n                        card = new ui.taskboard.Card(options, card, that.resources);\n                        that._columns[status].addCard(card.element);\n                        that._tabindex(card.element);\n                    }\n                },\n\n                _clearColumns: function() {\n                    var that = this;\n\n                    for (var key in that._columns) {\n                        that._columns[key].empty();\n                    }\n                },\n\n                _initCardMenu: function() {\n                    var that = this,\n                        options = that.options,\n                        cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                    cardMenuOptions = extend({}, {\n                        messages: options.messages,\n                        target: that.columnsContainer,\n                        filter: \".k-taskboard-card-menu-button\",\n                        action: that.executeCommand.bind(that),\n                        showOn: \"click\",\n                        alignToAnchor: true,\n                        states: that._buildStates()\n                    }, cardMenuOptions);\n\n                    if (options.cardMenu === false) {\n                        return;\n                    }\n\n                    that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n                },\n\n                _initResources: function() {\n                    var that = this,\n                        resources = that.options.resources;\n\n                    for (var i = 0; i < resources.length; i++) {\n                        that._addResource(resources[i]);\n                    }\n                },\n\n                _addResource: function(resource) {\n                    var that = this;\n\n                    if (!that.resources) {\n                        that.resources = {};\n                    }\n\n                    that.resources[resource.field] = {\n                        field: resource.field,\n                        name: resource.name,\n                        title: resource.title || resource.field,\n                        dataTextField: resource.dataTextField || \"text\",\n                        dataValueField: resource.dataValueField || \"value\",\n                        dataColorField: resource.dataColorField || \"color\",\n                        valuePrimitive: resource.valuePrimitive === false ? false : true,\n                        multiple: resource.multiple || false,\n                        dataSource: that._resourceDataSource(resource.dataSource)\n                    };\n                },\n\n                _resourceDataSource: function(resourceDS) {\n                    var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                        dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                    return dataSourceInstance;\n                },\n\n                _progress: function(toggle) {\n                    var that = this;\n\n                    kendo.ui.progress(that.element, toggle);\n                },\n\n                _initKeyboard: function() {\n                    var that = this;\n\n                    that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                    that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                    that._registerShortcuts();\n                },\n\n                _registerShortcuts: function() {\n                    var that = this,\n                        states = that._buildStates();\n\n                    if (states.isEditable) {\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: kendo.keys.DELETE\n                        }, { command: \"DeleteColumnCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: \"e\",\n                            ctrlKey: true\n                        }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                            keyCode: \"a\",\n                            ctrlKey: true\n                        }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                            keyCode: kendo.keys.ESC\n                        }, { command: \"CancelEditColumnCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: kendo.keys.DELETE\n                        }, { command: \"DeleteCardCommand\" });\n\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: \"e\",\n                            ctrlKey: true\n                        }, { command: \"EditCardCommand\", handler: preventDefault });\n                    }\n\n                    if (states.isSelectable) {\n                        that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                            keyCode: kendo.keys.ENTER\n                        }, { command: \"SelectCardCommand\", handler: preventDefault });\n                    }\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.UP\n                    }, { command: \"MoveFocusCommand\", options: { value: \"up\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DOWN\n                    }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.LEFT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.RIGHT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.LEFT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"left\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.RIGHT\n                    }, { command: \"MoveFocusCommand\", options: { value: \"right\" }, handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DOWN\n                    }, { command: \"MoveFocusCommand\", options: { value: \"down\" }, handler: preventDefault });\n                },\n\n                destroy: function() {\n                    var that = this;\n\n                    if (that._columnsChangeHandler) {\n                        that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                        that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                    }\n\n                    if (that._changeHandler) {\n                        that.dataSource.unbind(CHANGE, that._changeHandler);\n                        that.dataSource.unbind(ERROR, that._errorHandler);\n                    }\n\n                    for (var key in that._columns) {\n                        that._columns[key].destroy();\n                    }\n\n                    if (that.toolbar) {\n                        that.toolbar.destroy();\n                    }\n\n                    if (that.cardMenu) {\n                        that.cardMenu.destroy();\n                    }\n\n                    if (that.keyboardManager) {\n                        that.keyboardManager.destroy();\n                    }\n\n                    if (that.pane) {\n                        that.closePane();\n                    }\n\n                    Widget.fn.destroy.call(that);\n                }\n            });\n\n            kendo.ui.plugin(TaskBoard);\n\n            extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n        })(window.kendo.jQuery);\n\n}));\n"]}