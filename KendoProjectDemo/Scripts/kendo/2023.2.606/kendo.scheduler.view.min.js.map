{"version":3,"file":"kendo.scheduler.view.min.js","names":["factory","define","amd","kendo","ui","scheduler","$","window","getDate","date","Widget","outerHeight","_outerHeight","keys","ONGOING_CLASS","math","Math","SPACE","levels","values","key","result","collect","depth","level","idx","length","push","table","tableRows","className","trim","join","scrollbarWidth","ResourceView","Class","extend","init","index","isRtl","enforceAllDaySlot","this","_index","_timeSlotCollections","_daySlotCollections","_isRtl","_enforceAllDaySlot","addTimeSlotCollection","startDate","endDate","_addCollection","addDaySlotCollection","collections","collection","SlotCollection","timeSlotCollectionCount","daySlotCollectionCount","daySlotByPosition","x","y","byDate","_slotByPosition","timeSlotByPosition","collectionIndex","slotIndex","count","nextSlot","slot","at","width","element","offsetWidth","height","offsetHeight","horizontalEnd","offsetLeft","verticalEnd","offsetTop","refresh","timeSlotRanges","startTime","endTime","firstIndex","lastIndex","start","_startSlot","inRange","end","_endSlot","MS_PER_DAY","first","last","_continuousRange","TimeSlotRange","daySlotRanges","isAllDay","DaySlotRange","range","startSlot","endSlot","startIndex","endIndex","ranges","head","tail","slotRanges","event","isDay","_startTime","toUtcTime","_endTime","undefined","isMultiDay","_startCollection","startInRange","_endCollection","endInRange","_getCollections","continuousSlot","reverse","pad","isDaySlot","firstSlot","lastSlot","upSlot","keepCollection","groupByDateVertically","that","_verticalSlot","downSlot","leftSlot","_horizontalSlot","rightSlot","step","swapCollection","_collection","multiday","time","_start","slotByStartDate","slotByEndDate","getSlotCollection","getTimeSlotCollection","getDaySlotCollection","SlotRange","options","innerHeight","events","addEvent","outerRect","snap","_rect","property","top","bottom","left","right","support","startOffset","startSlotDuration","endOffset","endSlotDuration","round","innerRect","innerWidth","groupIndex","_slots","_events","_end","_groupIndex","_collectionIndex","allday","addTimeSlot","isHorizontal","TimeSlot","addDaySlot","eventCount","DaySlot","Slot","clientWidth","clientHeight","timezone","toLocalDate","fn","apply","arguments","offsetX","rtl","offset","difference","duration","floor","children","firstChild","firstChildHeight","firstChildTop","Date","rangeIndex","eventElement","slotIndexEnd","SchedulerView","call","_normalizeOptions","_initDefaultTools","_scrollbar","scrollbar","_resizeHint","_moveHint","_cellId","guid","_resourcesForGroups","_selectedSlots","attr","messages","ariaEventLabel","on","to","allDay","prefix","visibleEndDate","_defaultTools","todayMobile","type","fillMode","text","today","click","_footerTodayClickHandler","bind","attributes","class","fulldayDesktop","icon","showWorkHours","showFullDay","showWorkDay","toggleFullDay","noop","fulldayMobile","setMilliseconds","workDayStart","workDayEnd","_isMobile","mobile","mobileOS","_addResourceView","resourceView","groups","dateForTitle","format","selectedDateFormat","shortDateForTitle","selectedShortDateFormat","mobileDateForTitle","selectedMobileDateFormat","_changeGroup","selection","previous","_isGroupedByDate","_changeDate","group","_changeGroupContinuously","_changeViewPeriod","_isInRange","newStart","newEnd","min","max","_horizontalSlots","multiple","method","horizontalRange","isVertical","_isVerticallyGrouped","_normalizeHorizontalSelection","tempSlot","_getNextHorizontalRange","_continuousSlot","_verticalSlots","verticalRange","_normalizeVerticalSelection","_getNextVerticalRange","e","preventDefault","currentDate","timezoneOffset","convert","getTimezoneOffset","trigger","view","name","action","_footerItems","items","_footer","footer","html","appendTo","kendoToolBar","resizable","constrainSelection","move","shift","handled","verticalByDate","slots","DOWN","UP","_updateDirection","LEFT","RIGHT","backward","moveToEventInGroup","selectedEvents","prev","i","lastSelected","_continuousEvents","uid","inArray","moveToEvent","allEvents","_getAllEvents","uniqueAllEvents","_getUniqueEvents","sortedEvents","_getSortedEvents","eventIndex","_getNextEventIndexBySlot","_getStartIdx","_getSelectedSlot","current","candidate","_current","content","has","_scrollTo","select","clearSelection","_selectEvents","_selectSlots","tempIndex","slotStartDate","eventStartDate","getTime","selectedEventIndex","each","concat","exists","j","sort","second","firstStartDate","secondStartDate","cell","replace","selectedStateRegExp","groupEvent","found","groupEvents","add","indexOf","addClass","addDays","_resourceValue","resource","item","valuePrimitive","getter","dataValueField","_setResourceValue","groupLevelMember","value","setter","field","_resourceBySlot","resources","groupedResources","passedChildren","numberOfChildren","resourceIndex","groupOptions","nestedMember","orientation","rowLevels","columnLevels","dateGroupCompensation","groupLevel","_createResizeHint","css","_removeResizeHint","remove","_removeMoveHint","filter","container","elementOffset","elementOffsetDir","containerScroll","scrollTop","containerOffsetDir","bottomDistance","_inverseEventColor","eventColor","eventColorIsDark","Color","isDark","eventBackground","_eventTmpl","template","wrapper","settings","Template","templateSettings","paramName","state","storage","tmpl","eventResources","data","dataSource","eventResource","dataIndex","get","resourceColor","dataColorField","title","dataTextField","color","createLayout","layout","allDayIndex","rows","allDaySlot","splice","_isVirtualized","_trimRowLevels","rowCount","find","append","_topSection","_bottomSection","_updateDomRowLevels","_groupOrientation","_outerWidth","_scroller","virtual","levelMarker","lastGroup","cachedRowLevels","_hasContentToRender","stopAtLevel","parentLevel","parentValue","rowLevelIndex","stop","createNextLayout","trimmedRowLevels","clone","_height","_times","rowSpan","parseInt","_virtualContent","render","_cachedEvents","_tryRenderContent","bufferHeight","_isSchedulerHeightSet","initialHeight","el","style","groupCells","times","_rowLevelIndices","toArray","map","refreshLayout","toolbar","headerHeight","paddingDirection","eq","datesHeader","timesHeader","datesHeaderRows","contentDiv","kineticScrollNeeded","timesTable","removeClass","thElm","columnLevelCount","_datesHeader","dateGroup","closest","wrap","parent","scrollLeft","touchScroller","avoidScrolling","target","movable","_touchScroller","scrollElement","sender","groupIdx","groupLength","_createDateLayout","dates","inner","createDateLayoutConfiguration","_createColumnsLayout","createLayoutConfiguration","_createRowsLayout","selectionByElement","removeAttr","destroy","_ongoingTimer","clearInterval","getKendoToolBar","calendarInfo","getCulture","calendars","standard","prevGroupSlot","nextGroupSlot","_eventOptionsForMove","_updateEventForResize","_updateEventForSelection","_innerElements","countInner","innerCollection","innerSpan","innerEls","isMobile","rowIndex","Array","split","rowHeaderRows","rowsBefore","currentRow","rowspan","columnIndex","dateTableRows","columnLevelIndex","th","column","colspan","allDayTableRows","lastLevel","td","cellContent","_formatEventAriaLabel","labelText","labelMessages","sameDate","toString","_ongoingEvents","interval","ongoingOptions","ongoingEvents","enabled","_ongoingUpdater","updateInterval","isNaN","setInterval","currentTime","ongoingClass","cssClass","_updateOngoing","useLocalTimezone","forEach","appointment","re","processor","parts","channels","formats","resolveColor","process","exec","r","g","b","normalizeByte","_createColumns","eventElements","columns","eventRange","zeroWidthEventOffset","columnLength","endOverlaps","configuration","obj","minorTicks","itemParentValue","dataParentValueField","htmlEncode","slice","prototype","charAt","substr","toLowerCase","namedColors","percBrightness","sqrt","aqua","azure","beige","black","blue","brown","coral","cyan","darkblue","darkcyan","darkgray","darkgreen","darkorange","darkred","dimgray","fuchsia","gold","goldenrod","gray","green","greenyellow","indigo","ivory","khaki","lightblue","lightgrey","lightgreen","lightpink","lightyellow","lime","limegreen","linen","magenta","maroon","mediumblue","navy","olive","orange","orangered","orchid","pink","plum","purple","red","royalblue","salmon","silver","skyblue","slateblue","slategray","snow","steelblue","tan","teal","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","createColumns","createRows","collidingEvents","elements","slotStart","slotEnd","eventsForSlot","groupEqFilter","isArray","ObservableArray","jQuery"],"sources":["kendo.scheduler.view.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.toolbar'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.view\",\n        name: \"Scheduler View\",\n        category: \"web\",\n        description: \"The Scheduler Common View\",\n        depends: [ \"core\", \"toolbar\" ],\n        hidden: true\n    };\n        kendo.ui.scheduler = {};\n\n    (function($) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            getDate = kendo.date.getDate,\n            Widget = ui.Widget,\n            outerHeight = kendo._outerHeight,\n            keys = kendo.keys,\n            NS = \".kendoSchedulerView\",\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            ONGOING_CLASS = \"k-event-ongoing\",\n            MIN_HORIZONTAL_SCROLL_SIZE = 1024,\n            math = Math,\n            SPACE = \" \",\n            DOT = \".\";\n\n        function levels(values, key) {\n            var result = [];\n\n            function collect(depth, values) {\n                values = values[key];\n\n                if (values) {\n                    var level = result[depth] = result[depth] || [];\n\n                    for (var idx = 0; idx < values.length; idx++) {\n                        level.push(values[idx]);\n                        collect(depth + 1, values[idx]);\n                    }\n                }\n            }\n\n            collect(0, values);\n\n            return result;\n        }\n\n        function table(tableRows, className) {\n            if (!tableRows.length) {\n                return \"\";\n            }\n\n            return '<table role=\"presentation\" class=\"' + kendo.trim('k-scheduler-table ' + (className || \"\")) + '\">' +\n                   '<tr>' +\n                        tableRows.join(\"</tr><tr>\") +\n                   '</tr>' +\n                   '</table>';\n        }\n\n        function allDayTable(tableRows, className) {\n            if (!tableRows.length) {\n                return \"\";\n            }\n\n            return \"<div style='position:relative'>\" + table(tableRows, className) + \"</div>\";\n        }\n\n        function timesHeader(columnLevelCount, allDaySlot, rowCount) {\n            var tableRows = [];\n\n            if (rowCount > 0) {\n                for (var idx = 0; idx < columnLevelCount; idx++) {\n                    tableRows.push(\"<th>&#8203;</th>\");\n                }\n            }\n\n            if (allDaySlot) {\n                tableRows.push('<th class=\"k-scheduler-times-all-day\">' + allDaySlot.text + '</th>');\n            }\n\n            if (rowCount < 1) {\n               return $();\n            }\n\n            return $('<div class=\"k-scheduler-times\">' + table(tableRows) + '</div>');\n        }\n\n        function content() {\n            return $(\n                '<div class=\"k-scheduler-content\">' +\n                    '<table role=\"presentation\" class=\"k-scheduler-table\"></table>' +\n                '</div>'\n            );\n        }\n        var HINT = '<div class=\"k-marquee k-scheduler-marquee\">' +\n                        '<div class=\"k-marquee-color\"></div>' +\n                        '<div class=\"k-marquee-text\">' +\n                            '<div class=\"k-label-top\"></div>' +\n                            '<div class=\"k-label-bottom\"></div>' +\n                        '</div>' +\n                    '</div>';\n\n\n        var ResourceView = kendo.Class.extend({\n            init: function(index, isRtl, enforceAllDaySlot) {\n                this._index = index;\n                this._timeSlotCollections = [];\n                this._daySlotCollections = [];\n                this._isRtl = isRtl;\n                this._enforceAllDaySlot = enforceAllDaySlot;\n            },\n\n            addTimeSlotCollection: function(startDate, endDate) {\n                return this._addCollection(startDate, endDate, this._timeSlotCollections);\n            },\n\n            addDaySlotCollection: function(startDate, endDate) {\n                return this._addCollection(startDate, endDate, this._daySlotCollections);\n            },\n\n            _addCollection: function(startDate, endDate, collections) {\n                var collection = new SlotCollection(startDate, endDate, this._index, collections.length);\n\n                collections.push(collection);\n\n                return collection;\n            },\n\n            timeSlotCollectionCount: function() {\n                return this._timeSlotCollections.length;\n            },\n\n            daySlotCollectionCount: function() {\n                return this._daySlotCollections.length;\n            },\n\n            daySlotByPosition: function(x, y, byDate) {\n                return this._slotByPosition(x, y, this._daySlotCollections, byDate);\n            },\n\n            timeSlotByPosition: function(x, y, byDate) {\n                return this._slotByPosition(x, y, this._timeSlotCollections, byDate);\n            },\n\n            _slotByPosition: function(x, y, collections, byDate) {\n               for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                   var collection = collections[collectionIndex];\n\n                   for (var slotIndex = 0; slotIndex < collection.count(); slotIndex++) {\n                       var slot = collection.at(slotIndex);\n                       var width = slot.element.offsetWidth;\n                       var height = slot.element.offsetHeight;\n                       var nextSlot;\n\n                       var horizontalEnd = slot.element.offsetLeft + width;\n                       var verticalEnd = slot.element.offsetTop + height;\n\n                       if (!byDate) {\n                            nextSlot = collection.at(slotIndex + 1);\n                       }\n\n                       if (nextSlot) {\n                           if (nextSlot.element.offsetLeft != slot.element.offsetLeft) {\n                               if (this._isRtl) {\n                                   horizontalEnd = slot.element.offsetLeft + (slot.element.offsetLeft - nextSlot.element.offsetLeft);\n                               } else {\n                                   horizontalEnd = nextSlot.element.offsetLeft;\n                               }\n                           } else {\n                               verticalEnd = nextSlot.element.offsetTop;\n                           }\n                       }\n\n                       if (x >= slot.element.offsetLeft && x < horizontalEnd &&\n                           y >= slot.element.offsetTop && y < verticalEnd) {\n                           return slot;\n                       }\n                   }\n               }\n            },\n\n            refresh: function() {\n                var collectionIndex;\n\n                for (collectionIndex = 0; collectionIndex < this._daySlotCollections.length; collectionIndex++) {\n                    this._daySlotCollections[collectionIndex].refresh();\n                }\n\n                for (collectionIndex = 0; collectionIndex < this._timeSlotCollections.length; collectionIndex++) {\n                    this._timeSlotCollections[collectionIndex].refresh();\n                }\n            },\n\n            timeSlotRanges: function(startTime, endTime) {\n                var collections = this._timeSlotCollections;\n                var start = this._startSlot(startTime, collections);\n                var firstIndex, lastIndex;\n\n                if (!start.inRange && startTime >= start.slot.end) {\n                    firstIndex = start.slot.collectionIndex + 1;\n                    start = null;\n                }\n\n                var end = start;\n\n                if (startTime < endTime) {\n                    end = this._endSlot(endTime, collections);\n                }\n\n                if (end && !end.inRange && endTime <= end.slot.start) {\n                    lastIndex = end.slot.collectionIndex;\n\n                    if (endTime === end.slot.start && ((start && lastIndex > start.slot.collectionIndex) || (lastIndex > firstIndex))) {\n                        lastIndex -= 1;\n                    }\n\n                    end = null;\n                }\n\n                if (start === null && end === null) {\n                    if (endTime - startTime < kendo.date.MS_PER_DAY) {\n                        return [];\n                    } else {\n                        start = {\n                            inRange: true,\n                            slot: collections[firstIndex].first()\n                        };\n\n                        end = {\n                            inRange: true,\n                            slot: collections[lastIndex].last()\n                        };\n                    }\n                }\n\n                if (start === null) {\n                    if (end.slot.end <= startTime) {\n                        return [];\n                    }\n\n                    start = {\n                        inRange: true,\n                        slot: (collections[firstIndex] || collections[end.slot.collectionIndex]).first()\n                    };\n                }\n\n                if (end === null) {\n                    if (start.slot.start >= endTime) {\n                        return [];\n                    }\n\n                    end = {\n                        inRange: true,\n                        slot: (collections[lastIndex] || collections[start.slot.collectionIndex]).last()\n                    };\n                }\n\n                return this._continuousRange(TimeSlotRange, collections, start, end);\n            },\n\n            daySlotRanges: function(startTime, endTime, isAllDay) {\n                var collections = this._daySlotCollections;\n\n                var start = this._startSlot(startTime, collections, isAllDay);\n\n                if (!start.inRange && startTime >= start.slot.end) {\n                    start = null;\n                }\n\n                var end = start;\n\n                if (startTime < endTime) {\n                    end = this._endSlot(endTime, collections, isAllDay);\n                }\n\n                if (end && !end.inRange && endTime <= end.slot.start) {\n                    end = null;\n                }\n\n                if (start === null && end === null) {\n                    return [];\n                }\n\n                if (start === null) {\n                    if (end.slot.end <= startTime) {\n                        return [];\n                    }\n\n                    do {\n                        startTime += kendo.date.MS_PER_DAY;\n                        start = this._startSlot(startTime, collections, isAllDay);\n                    } while (!start.inRange && startTime >= start.slot.end);\n                }\n\n                if (end === null) {\n                    if (start.slot.start >= endTime) {\n                        return [];\n                    }\n\n                    do {\n                        endTime -= kendo.date.MS_PER_DAY;\n                        end = this._endSlot(endTime, collections, isAllDay);\n                    } while (!end.inRange && endTime <= end.slot.start);\n                }\n\n                return this._continuousRange(DaySlotRange, collections, start, end);\n            },\n\n            _continuousRange: function(range, collections, start, end) {\n                var startSlot = start.slot;\n                var endSlot = end.slot;\n\n                var startIndex = startSlot.collectionIndex;\n                var endIndex = endSlot.collectionIndex;\n\n                var ranges = [];\n\n                for (var collectionIndex = startIndex; collectionIndex <= endIndex; collectionIndex++) {\n                    var collection = collections[collectionIndex];\n\n                    var first = collection.first();\n                    var last = collection.last();\n                    var head = false;\n                    var tail = false;\n\n                    if (collectionIndex == startIndex) {\n                        tail = !start.inRange;\n                    }\n\n                    if (collectionIndex == endIndex) {\n                        head = !end.inRange;\n                    }\n\n                    if (first.start < startSlot.start) {\n                        first = startSlot;\n                    }\n\n                    if (last.start > endSlot.start) {\n                        last = endSlot;\n                    }\n\n                    if (startIndex < endIndex) {\n                        if (collectionIndex == startIndex) {\n                            head = true;\n                        } else if (collectionIndex == endIndex) {\n                            tail = true;\n                        } else {\n                            head = tail = true;\n                        }\n                    }\n\n                    ranges.push(new range({\n                        start: first,\n                        end: last,\n                        collection: collection,\n                        head: head,\n                        tail: tail\n                    }));\n                }\n\n                return ranges;\n            },\n\n            slotRanges: function(event, isDay) {\n                var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n                var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n\n                if (isDay === undefined) {\n                    if (this._enforceAllDaySlot) {\n                        isDay = event.isMultiDay();\n                    } else {\n                        isDay = event.isAllDay;\n                    }\n                }\n\n                if (isDay) {\n                    return this.daySlotRanges(startTime, endTime, event.isAllDay);\n                }\n\n                return this.timeSlotRanges(startTime, endTime);\n            },\n\n            ranges: function(startTime, endTime, isDay, isAllDay) {\n                if (typeof startTime != \"number\") {\n                    startTime = kendo.date.toUtcTime(startTime);\n                }\n\n                if (typeof endTime != \"number\") {\n                    endTime = kendo.date.toUtcTime(endTime);\n                }\n\n                if (isDay) {\n                    return this.daySlotRanges(startTime, endTime, isAllDay);\n                }\n\n                return this.timeSlotRanges(startTime, endTime);\n            },\n\n            _startCollection: function(date, collections) {\n                for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                    var collection = collections[collectionIndex];\n\n                    if (collection.startInRange(date)) {\n                        return collection;\n                    }\n                }\n\n                return null;\n            },\n\n            _endCollection: function(date, collections, isAllDay) {\n                for (var collectionIndex = 0; collectionIndex < collections.length; collectionIndex++) {\n                    var collection = collections[collectionIndex];\n\n                    if (collection.endInRange(date, isAllDay)) {\n                        return collection;\n                    }\n                }\n\n                return null;\n            },\n\n            _getCollections: function(isDay) {\n                return isDay ? this._daySlotCollections : this._timeSlotCollections;\n            },\n\n            continuousSlot: function(slot, reverse) {\n                var pad = reverse ? -1 : 1;\n                var collections = this._getCollections(slot.isDaySlot);\n                var collection = collections[slot.collectionIndex + pad];\n\n                return collection ? collection[reverse ? \"last\" : \"first\"]() : undefined;\n            },\n\n            firstSlot: function() {\n                var collections = this._getCollections(this.daySlotCollectionCount());\n\n                return collections[0].first();\n            },\n\n            lastSlot: function() {\n                var collections = this._getCollections(this.daySlotCollectionCount());\n\n                return collections[collections.length - 1].last();\n            },\n\n            upSlot: function(slot, keepCollection, groupByDateVertically) {\n                var that = this;\n                var moveToDaySlot = function(isDaySlot, collectionIndex, index) {\n                    var isFirstCell = index === 0;\n\n                    if (!keepCollection && !isDaySlot && isFirstCell && that.daySlotCollectionCount()) {\n                        return that._daySlotCollections[0].at(collectionIndex);\n                    }\n                };\n\n                if (!this.timeSlotCollectionCount()) {\n                    keepCollection = true;\n                }\n\n                return this._verticalSlot(slot, -1, moveToDaySlot, groupByDateVertically);\n            },\n\n            downSlot: function(slot, keepCollection, groupByDateVertically) {\n                var that = this;\n                var moveToTimeSlot = function(isDaySlot, collectionIndex, index) {\n                    if (!keepCollection && isDaySlot && that.timeSlotCollectionCount()) {\n                        return that._timeSlotCollections[index].at(0);\n                    }\n                };\n\n                if (!this.timeSlotCollectionCount()) {\n                    keepCollection = true;\n                }\n\n                return this._verticalSlot(slot, 1, moveToTimeSlot, groupByDateVertically);\n            },\n\n            leftSlot: function(slot, groupByDateVertically) {\n                return this._horizontalSlot(slot, -1, groupByDateVertically);\n            },\n\n            rightSlot: function(slot, groupByDateVertically) {\n                return this._horizontalSlot(slot, 1, groupByDateVertically);\n            },\n\n            _horizontalSlot: function(slot, step, groupByDateVertically) {\n                var index = slot.index;\n                var isDaySlot = slot.isDaySlot;\n                var collectionIndex = slot.collectionIndex;\n                var collections = this._getCollections(isDaySlot);\n\n                isDaySlot = groupByDateVertically ? false : isDaySlot;\n\n                if (isDaySlot) {\n                    index += step;\n                } else {\n                    collectionIndex += step;\n                }\n\n                var collection = collections[collectionIndex];\n\n                return collection ? collection.at(index) : undefined;\n            },\n\n            _verticalSlot: function(slot, step, swapCollection, groupByDateVertically) {\n                var index = slot.index;\n                var isDaySlot = slot.isDaySlot;\n                var collectionIndex = slot.collectionIndex;\n                var collections = this._getCollections(isDaySlot);\n\n                slot = swapCollection(isDaySlot, collectionIndex, index);\n                if (slot) {\n                    return slot;\n                }\n\n                isDaySlot = groupByDateVertically ? false : isDaySlot;\n\n                if (isDaySlot) {\n                    collectionIndex += step;\n                } else {\n                    index += step;\n                }\n\n                var collection = collections[collectionIndex];\n\n                return collection ? collection.at(index) : undefined;\n            },\n\n            _collection: function(index, multiday) {\n                var collections = multiday ? this._daySlotCollections : this._timeSlotCollections;\n\n                return collections[index];\n            },\n\n            _startSlot: function(time, collections, isAllDay) {\n                var collection = this._startCollection(time, collections);\n                var inRange = true;\n                var index = 0;\n\n                if (!collection) {\n                    collection = collections[index];\n\n                    while (index < collections.length - 1 && collection._start < time) {\n                        index++;\n                        collection = collections[index];\n                    }\n\n                    inRange = false;\n                }\n\n                var slot = collection.slotByStartDate(time, isAllDay);\n\n                if (!slot) {\n                    slot = collection.first();\n                    inRange = false;\n                }\n\n                return {\n                    slot: slot,\n                    inRange: inRange\n                };\n            },\n\n            _endSlot: function(time, collections, isAllDay) {\n                var collection = this._endCollection(time, collections, isAllDay);\n                var inRange = true;\n                var index = collections.length - 1;\n\n                if (!collection) {\n                    collection = collections[index];\n\n                    while (index > 0 && collection._start > time) {\n                        index--;\n                        collection = collections[index];\n                    }\n\n                    inRange = false;\n                }\n\n                var slot = collection.slotByEndDate(time, isAllDay);\n\n                if (!slot) {\n                    if (time <= collection.first().start) {\n                        slot = collection.first();\n                    } else {\n                        slot = collection.last();\n                    }\n\n                    inRange = false;\n                }\n\n                return {\n                    slot: slot,\n                    inRange: inRange\n                };\n            },\n\n            getSlotCollection: function(index, isDay) {\n                return this[isDay ? \"getDaySlotCollection\" : \"getTimeSlotCollection\"](index);\n            },\n\n            getTimeSlotCollection: function(index) {\n                return this._timeSlotCollections[index];\n            },\n\n            getDaySlotCollection: function(index) {\n                return this._daySlotCollections[index];\n            }\n        });\n\n        var SlotRange = kendo.Class.extend({\n            init: function(options) {\n                $.extend(this, options);\n            },\n\n            innerHeight: function() {\n                var collection = this.collection;\n\n                var startIndex = this.start.index;\n\n                var endIndex = this.end.index;\n\n                var result = 0;\n\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                   result += collection.at(slotIndex).offsetHeight;\n                }\n\n                return result;\n            },\n\n            events: function() {\n                return this.collection.events();\n            },\n\n            addEvent: function(event) {\n                this.events().push(event);\n            },\n\n            startSlot: function() {\n                if (this.start.offsetLeft > this.end.offsetLeft) {\n                    return this.end;\n                }\n                return this.start;\n            },\n\n            endSlot: function() {\n                if (this.start.offsetLeft > this.end.offsetLeft) {\n                    return this.start;\n                }\n                return this.end;\n            }\n        });\n\n        var TimeSlotRange = SlotRange.extend({\n            innerHeight: function() {\n                var collection = this.collection;\n\n                var startIndex = this.start.index;\n\n                var endIndex = this.end.index;\n\n                var result = 0;\n\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                   result += collection.at(slotIndex).offsetHeight;\n                }\n\n                return result;\n            },\n\n            outerRect: function(start, end, snap) {\n                return this._rect(\"offset\", start, end, snap);\n            },\n\n            _rect: function(property, start, end, snap) {\n                var top;\n                var bottom;\n                var left;\n                var right;\n                var startSlot = this.start;\n                var endSlot = this.end;\n                var isRtl = kendo.support.isRtl(startSlot.element);\n\n                if (typeof start != \"number\") {\n                    start = kendo.date.toUtcTime(start);\n                }\n\n                if (typeof end != \"number\") {\n                    end = kendo.date.toUtcTime(end);\n                }\n\n                if (snap) {\n                    top = startSlot.offsetTop;\n                    bottom = endSlot.offsetTop + endSlot[property + \"Height\"];\n                    if (isRtl) {\n                        left = endSlot.offsetLeft;\n                        right = startSlot.offsetLeft + startSlot[property + \"Width\"];\n                    } else {\n                        left = startSlot.offsetLeft;\n                        right = endSlot.offsetLeft + endSlot[property + \"Width\"];\n                    }\n                } else {\n                    var startOffset = start - startSlot.start;\n\n                    if (startOffset < 0) {\n                        startOffset = 0;\n                    }\n\n                    var startSlotDuration = startSlot.end - startSlot.start;\n\n                    top = startSlot.offsetTop + startSlot[property + \"Height\"] * startOffset / startSlotDuration;\n\n                    var endOffset = endSlot.end - end;\n\n                    if (endOffset < 0) {\n                        endOffset = 0;\n                    }\n\n                    var endSlotDuration = endSlot.end - endSlot.start;\n\n                    bottom = endSlot.offsetTop + endSlot[property + \"Height\"] - endSlot[property + \"Height\"] * endOffset / endSlotDuration;\n\n                    if (isRtl) {\n                        left = Math.round(endSlot.offsetLeft + endSlot[property + \"Width\"] * endOffset / endSlotDuration);\n                        right = Math.round(startSlot.offsetLeft + startSlot[property + \"Width\"] - startSlot[property + \"Width\"] * startOffset / startSlotDuration);\n                    } else {\n                        left = Math.round(startSlot.offsetLeft + startSlot[property + \"Width\"] * startOffset / startSlotDuration);\n                        right = Math.round(endSlot.offsetLeft + endSlot[property + \"Width\"] - endSlot[property + \"Width\"] * endOffset / endSlotDuration);\n                    }\n                }\n\n                return {\n                    top: top,\n                    bottom: bottom,\n                    //first column has no left border\n                    left: left === 0 ? left : left + 1,\n                    right: right\n                };\n            },\n\n            innerRect: function(start, end, snap) {\n                return this._rect(\"client\", start, end, snap);\n            }\n        });\n\n        var DaySlotRange = SlotRange.extend({\n            innerWidth: function() {\n                var collection = this.collection;\n\n                var startIndex = this.start.index;\n\n                var endIndex = this.end.index;\n\n                var result = 0;\n\n                var width = startIndex !== endIndex ? \"offsetWidth\" : \"clientWidth\";\n\n                for (var slotIndex = startIndex; slotIndex <= endIndex; slotIndex++) {\n                   result += collection.at(slotIndex)[width];\n                }\n\n                return result;\n            }\n        });\n\n        var SlotCollection = kendo.Class.extend({\n            init: function(startDate, endDate, groupIndex, collectionIndex) {\n                this._slots = [];\n\n                this._events = [];\n\n                this._start = kendo.date.toUtcTime(startDate);\n\n                this._end = kendo.date.toUtcTime(endDate);\n\n                this._groupIndex = groupIndex;\n\n                this._collectionIndex = collectionIndex;\n            },\n            refresh: function() {\n                for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                    this._slots[slotIndex].refresh();\n                }\n            },\n\n            startInRange: function(date) {\n                return this._start <= date && date < this._end;\n            },\n\n            endInRange: function(date, isAllDay) {\n                var end = isAllDay ? date < this._end : date <= this._end;\n                return this._start <= date && end;\n            },\n\n            slotByStartDate: function(date) {\n                var time = date;\n\n                if (typeof time != \"number\") {\n                    time = kendo.date.toUtcTime(date);\n                }\n\n                for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                    var slot = this._slots[slotIndex];\n\n                    if (slot.startInRange(time)) {\n                        return slot;\n                    }\n                }\n\n                return null;\n            },\n\n            slotByEndDate: function(date, allday) {\n                var time = date;\n\n                if (typeof time != \"number\") {\n                    time = kendo.date.toUtcTime(date);\n                }\n\n                if (allday) {\n                    return this.slotByStartDate(date, false);\n                }\n\n                for (var slotIndex = 0; slotIndex < this._slots.length; slotIndex++) {\n                    var slot = this._slots[slotIndex];\n\n                    if (slot.endInRange(time)) {\n                        return slot;\n                    }\n                }\n\n                return null;\n            },\n\n            count: function() {\n                return this._slots.length;\n            },\n            events: function() {\n                return this._events;\n            },\n            addTimeSlot: function(element, start, end, isHorizontal) {\n                var slot = new TimeSlot(element, start, end, this._groupIndex, this._collectionIndex, this._slots.length, isHorizontal);\n\n                this._slots.push(slot);\n            },\n            addDaySlot: function(element, start, end, eventCount) {\n                var slot = new DaySlot(element, start, end, this._groupIndex, this._collectionIndex, this._slots.length, eventCount);\n\n                this._slots.push(slot);\n            },\n            first: function() {\n                return this._slots[0];\n            },\n            last: function() {\n                return this._slots[this._slots.length - 1];\n            },\n            at: function(index) {\n                return this._slots[index];\n            }\n        });\n\n        var Slot = kendo.Class.extend({\n            init: function(element, start, end, groupIndex, collectionIndex, index) {\n                this.element = element;\n                this.clientWidth = element.clientWidth;\n                this.clientHeight = element.clientHeight;\n                this.offsetWidth = element.offsetWidth;\n                this.offsetHeight = element.offsetHeight;\n                this.offsetTop = element.offsetTop;\n                this.offsetLeft = element.offsetLeft;\n\n                this.start = start;\n                this.end = end;\n                this.element = element;\n                this.groupIndex = groupIndex;\n                this.collectionIndex = collectionIndex;\n                this.index = index;\n                this.isDaySlot = false;\n            },\n\n            refresh: function() {\n                var element = this.element;\n\n                this.clientWidth = element.clientWidth;\n                this.clientHeight = element.clientHeight;\n                this.offsetWidth = element.offsetWidth;\n                this.offsetHeight = element.offsetHeight;\n                this.offsetTop = element.offsetTop;\n                this.offsetLeft = element.offsetLeft;\n            },\n\n            startDate: function() {\n                return kendo.timezone.toLocalDate(this.start);\n            },\n\n            endDate: function() {\n                return kendo.timezone.toLocalDate(this.end);\n            },\n\n            startInRange: function(date) {\n                return this.start <= date && date < this.end;\n            },\n\n            endInRange: function(date) {\n                return this.start < date && date <= this.end;\n            },\n\n            startOffset: function() {\n               return this.start;\n            },\n\n            endOffset: function() {\n                return this.end;\n            }\n        });\n\n        var TimeSlot = Slot.extend({\n            init: function(element, start, end, groupIndex, collectionIndex, index, isHorizontal) {\n                Slot.fn.init.apply(this, arguments);\n\n                this.isHorizontal = isHorizontal ? true : false;\n            },\n\n            offsetX: function(rtl, offset) {\n                if (rtl) {\n                    return this.offsetLeft + offset;\n                } else {\n                    return this.offsetLeft + offset;\n                }\n            },\n\n            startInRange: function(date) {\n                return this.start <= date && date < this.end;\n            },\n\n            endInRange: function(date) {\n                return this.start < date && date <= this.end;\n            },\n\n            startOffset: function(x, y, snap) {\n                if (snap) {\n                    return this.start;\n                }\n\n                var offset = $(this.element).offset();\n\n                var duration = this.end - this.start;\n                var difference;\n                var time;\n\n                if (this.isHorizontal) {\n                    //need update\n                    var isRtl = kendo.support.isRtl(this.element);\n                    difference = x - offset.left;\n                    time = Math.floor(duration * ( difference / this.offsetWidth));\n\n                    if (isRtl) {\n                        return this.start + duration - time;\n                    }\n                } else {\n                    difference = y - offset.top;\n                    time = Math.floor(duration * ( difference / this.offsetHeight));\n                }\n\n                return this.start + time;\n            },\n\n            endOffset: function(x, y, snap) {\n                if (snap) {\n                    return this.end;\n                }\n\n                var offset = $(this.element).offset();\n\n                var duration = this.end - this.start;\n                var difference;\n                var time;\n\n                if (this.isHorizontal) {\n                    //need update\n                    var isRtl = kendo.support.isRtl(this.element);\n                    difference = x - offset.left;\n                    time = Math.floor(duration * ( difference / this.offsetWidth));\n\n                    if (isRtl) {\n                        return this.start + duration - time;\n                    }\n                } else {\n                    difference = y - offset.top;\n                    time = Math.floor(duration * ( difference / this.offsetHeight));\n                }\n\n                return this.start + time;\n            }\n        });\n\n        var DaySlot = Slot.extend({\n            init: function(element, start, end, groupIndex, collectionIndex, index, eventCount) {\n                Slot.fn.init.apply(this, arguments);\n\n                this.eventCount = eventCount;\n                this.isDaySlot = true;\n\n                if (this.element.children.length) {\n                    var firstChild = this.element.children[0];\n\n                    this.firstChildHeight = firstChild.offsetHeight;\n                    this.firstChildTop = firstChild.offsetTop;\n                } else {\n                    this.firstChildHeight = 3;\n                    this.firstChildTop = 0;\n                }\n            },\n\n            startDate: function() {\n                var date = new Date(this.start);\n\n                return kendo.timezone.apply(date, \"Etc/UTC\");\n            },\n\n            endDate: function() {\n                var date = new Date(this.end);\n\n                return kendo.timezone.apply(date, \"Etc/UTC\");\n            },\n\n            startInRange: function(date) {\n                return this.start <= date && date < this.end;\n            },\n\n            endInRange: function(date) {\n                return this.start < date && date <= this.end;\n            }\n        });\n\n        var scrollbarWidth;\n        function scrollbar() {\n            scrollbarWidth = scrollbarWidth ? scrollbarWidth : kendo.support.scrollbar();\n            return scrollbarWidth;\n        }\n\n        kendo.ui.SchedulerView = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, $.extend({}, this.options, options));\n\n                this._normalizeOptions();\n                this._initDefaultTools();\n                this._scrollbar = scrollbar();\n                this._isRtl = kendo.support.isRtl(element);\n                this._resizeHint = $();\n                this._moveHint = $();\n                this._cellId = kendo.guid();\n                this._resourcesForGroups();\n                this._selectedSlots = [];\n                this.element.attr(\"role\", \"application\");\n            },\n\n            options: {\n                messages: {\n                    ariaEventLabel: {\n                        on: \"on\",\n                        at: \"at\",\n                        to: \"to\",\n                        allDay: \"(all day)\",\n                        prefix: \"\"\n                    }\n                }\n            },\n\n            visibleEndDate: function() {\n                return this.endDate();\n            },\n\n            _initDefaultTools: function() {\n                this._defaultTools = {\n                    todayMobile: {\n                        type: \"button\",\n                        fillMode: \"flat\",\n                        text: this.options.messages.today,\n                        click: this._footerTodayClickHandler.bind(this),\n                        attributes: {\n                            class: \"k-scheduler-today\"\n                        }\n                    },\n                    fulldayDesktop: {\n                        type: \"button\",\n                        icon: \"clock\",\n                        text: this.options.showWorkHours ? this.options.messages.showFullDay : this.options.messages.showWorkDay,\n                        click: this.toggleFullDay ? this.toggleFullDay.bind(this) : $.noop,\n                        attributes: {\n                            class: \"k-scheduler-fullday\"\n                        }\n                    },\n                    fulldayMobile: {\n                        type: \"button\",\n                        fillMode: \"flat\",\n                        text: this.options.showWorkHours ? this.options.messages.showFullDay : this.options.messages.showWorkDay,\n                        click: this.toggleFullDay ? this.toggleFullDay.bind(this) : $.noop,\n                        attributes: {\n                            class: \"k-scheduler-fullday\"\n                        }\n                    }\n                };\n            },\n\n            _normalizeOptions: function() {\n                var options = this.options;\n\n                if (options.startTime) {\n                    options.startTime.setMilliseconds(0);\n                }\n\n                if (options.endTime) {\n                    options.endTime.setMilliseconds(0);\n                }\n\n                if (options.workDayStart) {\n                    options.workDayStart.setMilliseconds(0);\n                }\n\n                if (options.workDayEnd) {\n                    options.workDayEnd.setMilliseconds(0);\n                }\n            },\n\n            _isMobile: function() {\n                var options = this.options;\n                return (options.mobile === true && kendo.support.mobileOS) || options.mobile === \"phone\" || options.mobile === \"tablet\";\n            },\n\n            _addResourceView: function() {\n                var resourceView = new ResourceView(this.groups.length, this._isRtl, this.options.enforceAllDaySlot);\n\n                this.groups.push(resourceView);\n\n                return resourceView;\n            },\n\n            dateForTitle: function() {\n                return kendo.format(this.options.selectedDateFormat, this.startDate(), this.endDate());\n            },\n\n            shortDateForTitle: function() {\n                return kendo.format(this.options.selectedShortDateFormat, this.startDate(), this.endDate());\n            },\n\n            mobileDateForTitle: function() {\n                return kendo.format(this.options.selectedMobileDateFormat || this.options.selectedShortDateFormat, this.startDate(), this.endDate());\n            },\n\n            _changeGroup: function(selection, previous) {\n                var method = previous ? \"prevGroupSlot\" : \"nextGroupSlot\";\n                var slot = this[method](selection.start, selection.groupIndex, selection.isAllDay);\n\n                if (slot) {\n                    selection.groupIndex += previous ? -1 : 1;\n                }\n\n                if (this._isGroupedByDate() && !slot) {\n                   selection.groupIndex = previous ? this.groups.length - 1 : 0;\n                }\n\n                return slot;\n            },\n\n            _changeDate: function(selection, slot, previous) {\n                var group = this.groups[selection.groupIndex];\n                var collections, index;\n\n                if (previous) {\n                      collections = group._getCollections(false);\n                      index = group.daySlotCollectionCount() ? slot.index - 1 : slot.collectionIndex - 1;\n\n                      if (index >= 0) {\n                          return collections[index]._slots[collections[index]._slots.length - 1];\n                      }\n                  } else {\n                      collections = group._getCollections(group.daySlotCollectionCount());\n                      index = group.daySlotCollectionCount() ? 0 : slot.collectionIndex + 1;\n                      var slotIndex = group.daySlotCollectionCount() ? slot.collectionIndex + 1 : 0;\n\n                      if (collections[index] && collections[index]._slots[slotIndex]) {\n                          return collections[index]._slots[slotIndex];\n                      }\n                   }\n            },\n\n            _changeGroupContinuously: function() {\n                return null;\n            },\n\n            _changeViewPeriod: function() {\n                return false;\n            },\n\n            _isInRange: function(newStart, newEnd) {\n                if (!newStart || !newEnd || !this.options.min || !this.options.max) {\n                    return false;\n                }\n                return getDate(newStart) <= getDate(this.options.min) || getDate(newEnd) >= getDate(this.options.max);\n            },\n\n            _horizontalSlots: function(selection, ranges, multiple, reverse) {\n                var method = reverse ? \"leftSlot\" : \"rightSlot\";\n                var horizontalRange = {\n                     startSlot: ranges[0].start,\n                     endSlot: ranges[ranges.length - 1].end\n                 };\n                var group = this.groups[selection.groupIndex];\n                var isVertical = this._isVerticallyGrouped();\n\n                if (!multiple) {\n                    var slot = this._normalizeHorizontalSelection(selection, ranges, reverse);\n                    if (slot) {\n                        horizontalRange.startSlot = horizontalRange.endSlot = slot;\n                    }\n                }\n\n                if (this._isGroupedByDate() && !multiple) {\n                      var tempSlot = this._changeGroup(selection, reverse);\n\n                      if (!tempSlot)\n                      {\n                        horizontalRange = this._getNextHorizontalRange(group, method, horizontalRange);\n                      } else {\n                          horizontalRange.startSlot = horizontalRange.endSlot = tempSlot;\n                      }\n                } else {\n                      horizontalRange.startSlot = group[method](horizontalRange.startSlot);\n                      horizontalRange.endSlot = group[method](horizontalRange.endSlot);\n\n                      if (!multiple && !isVertical && (!horizontalRange.startSlot || !horizontalRange.endSlot)) {\n                            horizontalRange.startSlot = horizontalRange.endSlot = this._changeGroup(selection, reverse);\n                      }\n                }\n\n                var continuousSlot;\n\n                if ((!horizontalRange.startSlot || !horizontalRange.endSlot) && !this._isGroupedByDate()) {\n                    continuousSlot = this._continuousSlot(selection, ranges, reverse);\n                    continuousSlot = this._changeGroupContinuously(selection, continuousSlot, multiple, reverse);\n\n                    if (continuousSlot) {\n                        horizontalRange.startSlot = horizontalRange.endSlot = continuousSlot;\n                    }\n                }\n\n                return horizontalRange;\n            },\n\n             _getNextHorizontalRange: function(group, method, horizontalRange) {\n                if (!this._isVerticallyGrouped()) {\n                    horizontalRange.startSlot = group[method](horizontalRange.startSlot);\n                    horizontalRange.endSlot = group[method](horizontalRange.endSlot);\n                }\n\n                 return horizontalRange;\n            },\n\n            _verticalSlots: function(selection, ranges, multiple, reverse) {\n                var group = this.groups[selection.groupIndex];\n                var slot;\n                var verticalRange = {\n                    startSlot: ranges[0].start,\n                    endSlot: ranges[ranges.length - 1].end\n                };\n\n                if (!multiple) {\n                    slot = this._normalizeVerticalSelection(selection, ranges, reverse);\n                    if (slot) {\n                        verticalRange.startSlot = verticalRange.endSlot = slot;\n                    }\n                }\n\n                var method = reverse ? \"upSlot\" : \"downSlot\";\n\n                verticalRange = this._getNextVerticalRange(group, method, verticalRange, multiple);\n\n                if (!multiple && this._isVerticallyGrouped() && (!verticalRange.startSlot || !verticalRange.endSlot)) {\n                    if (this._isGroupedByDate()) {\n                        verticalRange.startSlot = verticalRange.endSlot = this._changeDate(selection, slot, reverse);\n\n                   } else {\n                        verticalRange.startSlot = verticalRange.endSlot = this._changeGroup(selection, reverse);\n                   }\n                }\n\n                return verticalRange;\n            },\n\n            _getNextVerticalRange: function(group, method, verticalRange, multiple) {\n                 verticalRange.startSlot = group[method](verticalRange.startSlot, multiple);\n                 verticalRange.endSlot = group[method](verticalRange.endSlot, multiple);\n\n                 return verticalRange;\n            },\n\n            _normalizeHorizontalSelection: function() {\n                return null;\n            },\n\n            _normalizeVerticalSelection: function(selection, ranges, reverse) {\n                var slot;\n\n                if (reverse) {\n                    slot = ranges[0].start;\n                } else {\n                    slot = ranges[ranges.length - 1].end;\n                }\n\n                return slot;\n            },\n\n            _continuousSlot: function() {\n                return null;\n            },\n\n            _footerTodayClickHandler: function(e) {\n                e.preventDefault();\n\n                var that = this;\n                var options = that.options;\n                var timezone = that.options.timezone;\n                var action = \"today\";\n                var currentDate = new Date();\n                var date;\n\n                if (timezone) {\n                    var timezoneOffset = kendo.timezone.offset(currentDate, timezone);\n                    date = kendo.timezone.convert(currentDate, currentDate.getTimezoneOffset(), timezoneOffset);\n                } else {\n                    date = currentDate;\n                }\n\n                that.trigger(\"navigate\", { view: that.name || options.name, action: action, date: date });\n            },\n\n            _footerItems: function() {\n                var that = this,\n                    items = [],\n                    options = this.options;\n\n                if (that._isMobile()) {\n                    items.push({\n                        type: \"button\",\n                        fillMode: \"flat\",\n                        text: options.messages.today,\n                        click: that._footerTodayClickHandler.bind(that),\n                        attributes: {\n                            class: \"k-scheduler-today\"\n                        }\n                    });\n                }\n\n                return items;\n            },\n\n            _footer: function() {\n                if (this.options.footer === false) {\n                    return;\n                }\n\n                var that = this,\n                    items = that._footerItems();\n\n                if (items.length > 0) {\n                    var html = $('<div class=\"k-scheduler-footer\">');\n\n                    that.footer = html.appendTo(that.element);\n\n                    that.footer.kendoToolBar({\n                        resizable: false,\n                        items: items\n                    });\n                }\n            },\n\n            constrainSelection: function(selection) {\n                var group = this.groups[0];\n                var slot;\n\n                if (!this.inRange(selection)) {\n                   slot = group.firstSlot();\n\n                   selection.isAllDay = slot.isDaySlot;\n                   selection.start = slot.startDate();\n                   selection.end = slot.endDate();\n                } else {\n                    if (!group.daySlotCollectionCount()) {\n                        selection.isAllDay = false;\n                    } else if (!group.timeSlotCollectionCount()) {\n                        selection.isAllDay = true;\n                    }\n               }\n\n                if (!this.groups[selection.groupIndex]) {\n                    selection.groupIndex = 0;\n                }\n            },\n\n            move: function(selection, key, shift) {\n                var handled = false;\n                var group = this.groups[selection.groupIndex];\n                var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n\n                if (!group.timeSlotCollectionCount()) {\n                    selection.isAllDay = true;\n                }\n\n                var ranges = group.ranges(selection.start, selection.end, selection.isAllDay, false);\n                var startSlot, endSlot, reverse, slots;\n\n                if (key === keys.DOWN || key === keys.UP) {\n                    handled = true;\n                    reverse = key === keys.UP;\n\n                    this._updateDirection(selection, ranges, shift, reverse, true);\n\n                    slots = this._verticalSlots(selection, ranges, shift, reverse);\n\n                    if (!slots.startSlot && !shift && this._changeViewPeriod(selection, reverse, !verticalByDate)) {\n                        return handled;\n                    }\n\n                } else if (key === keys.LEFT || key === keys.RIGHT) {\n                    handled = true;\n                    reverse = key === keys.LEFT;\n\n                    this._updateDirection(selection, ranges, shift, reverse, false);\n\n                    slots = this._horizontalSlots(selection, ranges, shift, reverse);\n\n                    if (!slots.startSlot && !shift && this._changeViewPeriod(selection, reverse, verticalByDate)) {\n                        return handled;\n                    }\n                }\n\n                if (handled) {\n                    startSlot = slots.startSlot;\n                    endSlot = slots.endSlot;\n\n                    if (shift) {\n                        var backward = selection.backward;\n                        if (backward && startSlot) {\n                            selection.start = startSlot.startDate();\n                        } else if (!backward && endSlot) {\n                            selection.end = endSlot.endDate();\n                        }\n                    } else if (startSlot && endSlot) {\n                        selection.isAllDay = startSlot.isDaySlot;\n                        selection.start = startSlot.startDate();\n                        selection.end = endSlot.endDate();\n                    }\n\n                    selection.events = [];\n                }\n\n                return handled;\n            },\n\n            moveToEventInGroup: function(group, slot, selectedEvents, prev) {\n                var events = group._continuousEvents || [];\n                var found, event;\n                var pad = prev ? -1 : 1;\n                var length = events.length;\n                var idx = prev ? length - 1 : 0;\n                var i, lastSelected;\n\n                if (selectedEvents.length) {\n                    lastSelected = selectedEvents[selectedEvents.length - 1];\n\n                    if (prev) {\n                        for (i = 0; i < events.length; i++) {\n                            if (events[i].uid === lastSelected) {\n                                idx = i + pad;\n                            }\n                        }\n                    } else {\n                        for (i = events.length - 1; i > -1; i--) {\n                            if (events[i].uid === lastSelected) {\n                                idx = i + pad;\n                            }\n                        }\n                    }\n                }\n\n                while (idx < length && idx > -1) {\n                    event = events[idx];\n\n                    if ( (!prev && event.start.startDate() >= slot.startDate()) ||\n                        (prev && event.start.startDate() <= slot.startDate()) ) {\n\n                        if (event && $.inArray(event.uid, selectedEvents) === -1) {\n                            found = !!event;\n                            break;\n                        }\n                    }\n\n                    idx += pad;\n                }\n\n                return event;\n            },\n\n            moveToEvent: function(selection, prev) {\n                var groupIndex = selection.groupIndex;\n\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(selection.start, selection.end, this.name === \"month\" || selection.isAllDay, false)[0].start;\n\n                var length = this.groups.length;\n                var pad = prev ? -1 : 1;\n                var events = selection.events;\n                var event;\n\n                if (this._isGroupedByDate()) {\n                    var allEvents = this._getAllEvents();\n                    var uniqueAllEvents = this._getUniqueEvents(allEvents);\n                    var sortedEvents = this._getSortedEvents(uniqueAllEvents);\n\n                    if (events.length === 0) {\n                        var eventIndex = this._getNextEventIndexBySlot(slot, sortedEvents, groupIndex);\n\n                        if (prev) {\n                            eventIndex--;\n                        }\n\n                        event = sortedEvents[eventIndex];\n                    } else {\n                         var idx = this._getStartIdx(events, sortedEvents);\n\n                        while (idx < sortedEvents.length && idx > -1) {\n                            if (events.length > 0) {\n                                slot = this._getSelectedSlot(slot, sortedEvents, event, idx, pad, prev);\n                            }\n\n                            if (!slot) {\n                                break;\n                            }\n\n                            if ( (!prev && sortedEvents[idx].start.startDate() >= slot.startDate()) ||\n                                  (prev && sortedEvents[idx].start.startDate() <= slot.startDate())) {\n                                 if (events[0] != sortedEvents[idx].uid) {\n                                     event = sortedEvents[idx];\n                                      break;\n                                 }\n                            }\n                            idx += pad;\n                        }\n                    }\n                } else {\n                      while (groupIndex < length && groupIndex > -1) {\n                        event = this.moveToEventInGroup(group, slot, events, prev);\n\n                        groupIndex += pad;\n                        group = this.groups[groupIndex];\n\n                        if (!group || event) {\n                            break;\n                        }\n\n                        events = [];\n                        if (prev) {\n                            slot = group.lastSlot();\n                        } else {\n                            slot = group.firstSlot(true);\n                        }\n                    }\n                }\n\n                if (event) {\n                    selection.events = [ event.uid ];\n                    selection.start = event.start.startDate();\n                    selection.end = event.end.endDate();\n                    selection.isAllDay = event.start.isDaySlot;\n                    selection.groupIndex = event.start.groupIndex;\n                    selection.eventElement = event.element[0];\n                }\n\n                return !!event;\n            },\n\n            current: function(candidate) {\n                if (candidate !== undefined) {\n                    this._current = candidate;\n                    if (this.content.has(candidate)) {\n                        this._scrollTo(candidate, this.content[0]);\n                    }\n                } else {\n                    return this._current;\n                }\n            },\n\n            select: function(selection) {\n                this.clearSelection();\n\n                if (!this._selectEvents(selection)) {\n                    this._selectSlots(selection);\n                }\n            },\n\n            _getNextEventIndexBySlot: function(slot, sortedEvents, groupIndex) {\n                var tempIndex = 0;\n                var slotStartDate = kendo.date.getDate(slot.startDate());\n\n                for (var i = 0; i < sortedEvents.length; i++) {\n                    var eventStartDate = kendo.date.getDate(sortedEvents[i].start.startDate());\n                    if (slotStartDate > eventStartDate) {\n                        tempIndex++;\n                        continue;\n                    }\n\n                    if (slotStartDate.getTime() === eventStartDate.getTime() && groupIndex > sortedEvents[i].start.groupIndex) {\n                          tempIndex++;\n                          continue;\n                    }\n\n                    if (slotStartDate.getTime() === eventStartDate.getTime() &&\n                        groupIndex >= sortedEvents[i].start.groupIndex &&\n                        slot.startDate() > sortedEvents[i].start.startDate()) {\n                        tempIndex++;\n                        continue;\n                     }\n\n                     break;\n                }\n                return tempIndex;\n            },\n\n            _getSelectedSlot: function(slot, sortedEvents, event, idx, pad, prev) {\n                  if (sortedEvents[idx + pad] &&\n                   sortedEvents[idx].start.groupIndex !== sortedEvents[idx + pad].start.groupIndex) {\n                        var groupIndex = sortedEvents[idx + pad].start.groupIndex;\n                        var group = this.groups[groupIndex];\n\n                        if (!group || event) {\n                           slot = null;\n                        }\n\n                        if (prev) {\n                            slot = group.lastSlot();\n                        } else {\n                            slot = group.firstSlot(true);\n                        }\n                    }\n                 return slot;\n            },\n\n            _getStartIdx: function(events, sortedEvents) {\n                var selectedEventIndex = 0;\n\n                $.each(sortedEvents, function() {\n                    if (this.uid === events[0]) {\n                         return false;\n                    }\n\n                    selectedEventIndex++;\n                });\n\n                return selectedEventIndex;\n            },\n\n            _getAllEvents: function() {\n                var allEvents = [];\n                var groups = this.groups;\n\n                for (var idx = 0; idx < groups.length; idx++) {\n                    if (groups[idx]._continuousEvents) {\n                        allEvents = allEvents.concat(groups[idx]._continuousEvents);\n                    }\n                }\n\n                return allEvents;\n            },\n\n            _getUniqueEvents: function(allEvents) {\n                var uniqueAllEvents = [];\n\n                for (var i = 0; i < allEvents.length; i++) {\n                    var exists = false;\n                    for (var j = 0; j < uniqueAllEvents.length; j++) {\n                        if (allEvents[i].uid === uniqueAllEvents[j].uid) {\n                            exists = true;\n                            break;\n                        }\n                    }\n\n                    if (!exists) {\n                        uniqueAllEvents.push(allEvents[i]);\n                    }\n                }\n\n                return uniqueAllEvents;\n            },\n\n            _getSortedEvents: function(uniqueAllEvents) {\n                 return uniqueAllEvents.sort(function(first, second) {\n                    var firstStartDate = first.start.startDate();\n                    var secondStartDate = second.start.startDate();\n                    var result = kendo.date.getDate(firstStartDate) - kendo.date.getDate(secondStartDate);\n\n                    if (result === 0) {\n                        result = first.start.groupIndex - second.start.groupIndex;\n                    }\n\n                    if (result === 0) {\n                        result = firstStartDate.getTime() - secondStartDate.getTime();\n                    }\n\n                    if (result === 0) {\n                        if (first.start.isDaySlot && !second.start.isDaySlot) {\n                                result = -1;\n                        }\n\n                        if (!first.start.isDaySlot && second.start.isDaySlot) {\n                                result = 1;\n                        }\n                    }\n\n                    if (result === 0) {\n                        result = $(first.element).index() - $(second.element).index();\n                    }\n\n                    return result;\n                });\n            },\n\n            _selectSlots: function(selection) {\n                var isAllDay = selection.isAllDay;\n                var group = this.groups[selection.groupIndex];\n\n                if (!group.timeSlotCollectionCount()) {\n                    isAllDay = true;\n                }\n\n                this._selectedSlots = [];\n\n                var ranges = group.ranges(selection.start, selection.end, isAllDay, false);\n                var element;\n                var slot;\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var collection = range.collection;\n\n                    for (var slotIndex = range.start.index; slotIndex <= range.end.index; slotIndex++) {\n                        slot = collection.at(slotIndex);\n\n                        element = slot.element;\n                        addSelectedState(element);\n\n                        this._selectedSlots.push({\n                            start: slot.startDate(),\n                            end: slot.endDate(),\n                            element: element\n                        });\n                    }\n                }\n\n                if (selection.backward) {\n                    element = ranges[0].start.element;\n                }\n\n                this.current(element);\n            },\n\n            _selectEvents: function(selection) {\n                var found = false;\n                var events = selection.events;\n                var groupEvents = this._getAllEvents();\n                var idx, groupEvent, length = groupEvents.length;\n\n                if (!events[0] || !groupEvents[0]) {\n                    return found;\n                }\n\n                var result = $();\n                selection.events = [];\n                for (idx = 0; idx < length; idx ++) {\n                    if ($.inArray(groupEvents[idx].uid, events) > -1) {\n                        groupEvent = groupEvents[idx];\n                        result = result.add(groupEvent.element);\n                        if (selection.events.indexOf(groupEvent.uid) === -1) {\n                            selection.events.push(groupEvent.uid);\n                        }\n                    }\n                }\n\n                if (result[0]) {\n                    result.addClass(\"k-selected\");\n\n                    if (selection.eventElement) {\n                        this.current(selection.eventElement);\n                    } else {\n                        this.current(result.last()[0]);\n                    }\n\n                    this._selectedSlots = [];\n                    found = true;\n                }\n\n                return found;\n            },\n\n            inRange: function(options) {\n                var startDate = this.startDate();\n                var endDate = kendo.date.addDays(this.endDate(), 1);\n                var start = options.start;\n                var end = options.end;\n\n                return startDate <= start && start < endDate && startDate < end && end <= endDate;\n            },\n\n            _resourceValue: function(resource, item) {\n                if (resource.valuePrimitive) {\n                    item = kendo.getter(resource.dataValueField)(item);\n                }\n                return item;\n            },\n\n            _setResourceValue: function(groupLevelMember, resource, result) {\n                var value = groupLevelMember.value,\n                    setter;\n\n                if (resource.multiple) {\n                    value = [value];\n                }\n\n                setter = kendo.setter(resource.field);\n                setter(result, value);\n            },\n\n            _resourceBySlot: function(slot) {\n                var resources = this.groupedResources;\n                var result = {};\n\n                if (resources.length) {\n                    var resourceIndex = slot.groupIndex,\n                        groupOptions = this.options.group,\n                        nestedMember = groupOptions.date || groupOptions.orientation === \"horizontal\" ? \"columns\" : \"rows\",\n                        levels = nestedMember === \"rows\" ? this.rowLevels : this.columnLevels,\n                        dateGroupCompensation = groupOptions.date && groupOptions.orientation === \"horizontal\" ? 1 : 0,\n                        groupLevel = levels[resources.length - 1 + dateGroupCompensation],\n                        resource = resources[resources.length - 1],\n                        groupLevelMember = groupLevel[resourceIndex],\n                        passedChildren, numberOfChildren, j, i;\n\n                    this._setResourceValue(groupLevelMember, resource, result);\n\n                    for (j = resources.length - 2; j >= 0; j--) {\n                        groupLevel = levels[j + dateGroupCompensation];\n                        resource = resources[j];\n                        passedChildren = 0;\n\n                        for (i = 0; i < groupLevel.length; i++) {\n                            groupLevelMember = groupLevel[i];\n                            numberOfChildren = groupLevelMember[nestedMember].length;\n\n                            if (numberOfChildren > resourceIndex - passedChildren) {\n                                this._setResourceValue(groupLevelMember, resource, result);\n\n                                i = groupLevel.length;\n                            } else {\n                                passedChildren += numberOfChildren;\n                            }\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            _createResizeHint: function(left, top, width, height) {\n                return $(HINT).css({\n                    left: left,\n                    top: top,\n                    width: width,\n                    height: height\n                });\n            },\n\n            _removeResizeHint: function() {\n                this._resizeHint.remove();\n                this._resizeHint = $();\n            },\n\n            _removeMoveHint: function(uid) {\n                if (uid) {\n                    this._moveHint.filter(\"[data-uid='\" + uid + \"']\").remove();\n\n                    this._moveHint = this._moveHint.filter(\"[data-uid!='\" + uid + \"']\");\n                } else {\n                    this._moveHint.remove();\n                    this._moveHint = $();\n                }\n            },\n\n            _scrollTo: function(element, container) {\n                var elementOffset = element.offsetTop,\n                    elementOffsetDir = element.offsetHeight,\n                    containerScroll = container.scrollTop,\n                    containerOffsetDir = container.clientHeight,\n                    bottomDistance = elementOffset + elementOffsetDir,\n                    result = 0;\n\n                    if (containerScroll > elementOffset) {\n                        result = elementOffset;\n                    } else if (bottomDistance > (containerScroll + containerOffsetDir)) {\n                        if (elementOffsetDir <= containerOffsetDir) {\n                            result = (bottomDistance - containerOffsetDir);\n                        } else {\n                            result = elementOffset;\n                        }\n                    } else {\n                        result = containerScroll;\n                    }\n                    container.scrollTop = result;\n            },\n\n            _inverseEventColor: function(element) {\n                var eventColor = element.css(\"color\");\n                var eventColorIsDark = new Color(eventColor).isDark();\n                var eventBackground = element.css(\"background-color\");\n                var eventBackgroundIsDark = new Color(eventBackground).isDark();\n\n                if (eventColorIsDark == eventBackgroundIsDark) {\n                    element.addClass(INVERSE_COLOR_CLASS);\n                }\n            },\n\n            // Possibly legacy code. Ensure clients do not use it before removing. Or throw warning.\n            // CSP: leave it as it is (for now).\n           _eventTmpl: function(template, wrapper) {\n               var options = this.options,\n                   settings = $.extend({}, kendo.Template, options.templateSettings),\n                   paramName = settings.paramName,\n                   html = \"\",\n                   type = typeof template,\n                   state = { storage: {}, count: 0 };\n\n                if (type === \"function\") {\n                    state.storage[\"tmpl\" + state.count] = template;\n                    html += \"#=this.tmpl\" + state.count + \"(\" + paramName + \")#\";\n                    state.count ++;\n                } else if (type === \"string\") {\n                    html += template;\n                }\n\n                var tmpl = kendo.template(kendo.format(wrapper, html), settings);\n\n                if (state.count > 0) {\n                    tmpl = tmpl.bind(state.storage);\n                }\n\n                return tmpl;\n           },\n\n            eventResources: function(event) {\n                var resources = [],\n                    options = this.options;\n\n                if (!options.resources) {\n                    return resources;\n                }\n\n                for (var idx = 0; idx < options.resources.length; idx++) {\n                    var resource = options.resources[idx];\n                    var field = resource.field;\n                    var eventResources = kendo.getter(field)(event);\n\n                    if (eventResources == null) {\n                        continue;\n                    }\n\n                    if (!resource.multiple) {\n                        eventResources = [eventResources];\n                    }\n\n                    var data = resource.dataSource.view();\n\n                    for (var resourceIndex = 0; resourceIndex < eventResources.length; resourceIndex++) {\n                        var eventResource = null;\n\n                        var value = eventResources[resourceIndex];\n\n                        if (!resource.valuePrimitive) {\n                            value = kendo.getter(resource.dataValueField)(value);\n                        }\n\n                        for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                            if (data[dataIndex].get(resource.dataValueField) == value) {\n                                eventResource = data[dataIndex];\n                                break;\n                            }\n                        }\n\n                        if (eventResource !== null) {\n                            var resourceColor = kendo.getter(resource.dataColorField)(eventResource);\n                            resources.push({\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                text: kendo.getter(resource.dataTextField)(eventResource),\n                                value: value,\n                                color: resourceColor\n                            });\n                        }\n                    }\n                }\n                return resources;\n            },\n\n            createLayout: function(layout) {\n                var allDayIndex = -1;\n\n                if (!layout.rows) {\n                    layout.rows = [];\n                }\n\n                for (var idx = 0; idx < layout.rows.length; idx++) {\n                    if (layout.rows[idx].allDay) {\n                        allDayIndex = idx;\n                        break;\n                    }\n                }\n\n                var allDaySlot = layout.rows[allDayIndex];\n\n                if (allDayIndex >= 0) {\n                    layout.rows.splice(allDayIndex, 1);\n                }\n\n                var columnLevels = this.columnLevels = levels(layout, \"columns\");\n                var rowLevels = this.rowLevels = levels(layout, \"rows\");\n\n                if (this._isVirtualized()) {\n                    this._trimRowLevels(rowLevels);\n                }\n\n                this.table = $('<table role=\"presentation\" class=\"k-scheduler-layout k-scheduler-' + this.name + 'view\"><tbody></tbody></table>');\n\n                var rowCount = rowLevels[rowLevels.length - 1].length;\n\n                this.table.find(\"tbody\").first().append(this._topSection(columnLevels, allDaySlot, rowCount));\n                this.table.find(\"tbody\").first().append(this._bottomSection(columnLevels, rowLevels, rowCount));\n                this.element.append(this.table);\n\n                if (this._isVirtualized()) {\n                    this._updateDomRowLevels();\n                }\n\n                // Enable horizontal scrolling when mobile, grouped and less than 1024px width\n                if (this._isMobile() &&\n                        columnLevels.length > 1 &&\n                        this._groupOrientation() === \"horizontal\" &&\n                        kendo._outerWidth($(window)) < MIN_HORIZONTAL_SCROLL_SIZE ) {\n\n                    this.table.find(\".k-scheduler-content .k-scheduler-table\").width((columnLevels[columnLevels.length - 2].length * 100) + \"%\");\n                    this.table.find(\".k-scheduler-header .k-scheduler-table\").width((columnLevels[columnLevels.length - 2].length * 100) + \"%\");\n                }\n\n                this._scroller();\n            },\n\n            _isVirtualized: function() {\n                return this.options.virtual && this.rowLevels.length > 1 && this._isVerticallyGrouped();\n            },\n\n            _trimRowLevels: function(rowLevels) {\n                var lastGroup = rowLevels[rowLevels.length - 2];\n                var cachedRowLevels = this.cachedRowLevels || [];\n                var levelMarker;\n\n                this._hasContentToRender = true;\n\n                var stopAtLevel = function(levels, index) {\n                    var hasParent = levels[index - 1].length > 0,\n                    parentLevel, parentValue;\n\n                    if (hasParent) {\n                        parentLevel = levels[index - 1][0];\n                        parentValue = levels[index][0].parentValue;\n\n                        return parentLevel.value !== parentValue;\n                    } else {\n                        return true;\n                    }\n                };\n\n                for (var rowLevelIndex = rowLevels.length - 2; rowLevelIndex >= 0; rowLevelIndex--) {\n                    var stop = false;\n                    if (rowLevelIndex > 0 && stopAtLevel(rowLevels, rowLevelIndex)) {\n                        stop = true;\n                        levelMarker = rowLevelIndex;\n                    }\n\n                    cachedRowLevels[rowLevelIndex] = rowLevels[rowLevelIndex].splice(1);\n\n                    if (rowLevelIndex < rowLevels.length - 2 && rowLevels[rowLevelIndex][0].rows.length != 1) {\n                        rowLevels[rowLevelIndex][0].rows = rowLevels[rowLevelIndex + 1];\n                    }\n\n                    if (stop) {\n                        break;\n                    }\n                }\n\n                cachedRowLevels[rowLevels.length - 1] = rowLevels[rowLevels.length - 1].splice(lastGroup[0].rows.length);\n\n                this.cachedRowLevels = cachedRowLevels;\n\n                if (!cachedRowLevels[cachedRowLevels.length - 1].length) {\n                    this._hasContentToRender = false;\n                }\n\n                return {\n                    levelMarker: levelMarker || 0,\n                    rowLevels: rowLevels\n                };\n            },\n\n            createNextLayout: function() {\n                var clone = [];\n                var trimmedRowLevels;\n                var rowLevels;\n                var levelMarker;\n                var rowCount;\n\n                for (var rowLevelIndex = 0; rowLevelIndex < this.cachedRowLevels.length; rowLevelIndex++) {\n                    clone[rowLevelIndex] = this.cachedRowLevels[rowLevelIndex];\n                }\n\n                trimmedRowLevels = this._trimRowLevels(clone);\n                rowLevels = trimmedRowLevels.rowLevels.splice(trimmedRowLevels.levelMarker);\n                levelMarker = trimmedRowLevels.levelMarker;\n                rowCount = rowLevels[rowLevels.length - 1].length;\n\n                delete this._height;\n\n                for (var i = levelMarker; i < this.rowLevels.length; i++) {\n                    this.rowLevels[i] = this.rowLevels[i].concat(rowLevels[i - levelMarker]);\n                }\n\n                this.table\n                    .find(\".k-scheduler-times\").last().find(\"tbody\")\n                    .append(this._times(rowLevels, rowCount, this._isMobile()).find(\"tr\"));\n\n                this._updateDomRowLevels();\n\n                if (levelMarker > 0) {\n                    for (i = 0; i < levelMarker; i++) {\n                        var cell = this.table.find(\"[data-row-level=\" + i + \"]\").last();\n                        var rowSpan = parseInt(cell.attr(\"rowspan\"),10) + rowCount;\n                        cell.attr(\"rowspan\", rowSpan);\n                    }\n                }\n\n                this._virtualContent(rowLevels, this.columnLevels);\n                this.render(this._cachedEvents);\n            },\n\n            _tryRenderContent: function() {\n                var that = this;\n                var bufferHeight = that.table.innerHeight();\n                var height = that.content.find(\"table\").innerHeight();\n                var scrollTop = that.content.scrollTop();\n\n                while (that._hasContentToRender && height - bufferHeight < scrollTop) {\n                    that.createNextLayout();\n                    height = that.content.find(\"table\").innerHeight();\n                }\n            },\n\n            _isSchedulerHeightSet: function() {\n                var el = this.element;\n                var initialHeight, newHeight;\n                    if (el[0].style.height) {\n                        return true;\n                    } else {\n                        initialHeight = el.height();\n                    }\n\n                    el.height(\"auto\");\n                    newHeight = el.height();\n\n                    if (initialHeight != newHeight) {\n                        el.height(\"\");\n                        return true;\n                    }\n                    el.height(\"\");\n                    return false;\n            },\n\n            _updateDomRowLevels: function() {\n                var that = this;\n                var groupCells = that.times.find(\".k-scheduler-group-cell:not([data-row-level])\");\n\n                if (!this._rowLevelIndices) {\n                    this._rowLevelIndices = groupCells.map(function(index, item) {\n                        $(item).attr(\"data-row-level\", index);\n                        return index;\n                    }).toArray().reverse();\n                    return;\n                }\n\n                groupCells = groupCells.toArray().reverse();\n\n                for (var i = 0; i <= groupCells.length; i++) {\n                    $(groupCells[i]).attr(\"data-row-level\", this._rowLevelIndices[i]);\n                }\n            },\n\n            refreshLayout: function() {\n                var that = this,\n                    toolbar = that.element.find(\"> .k-scheduler-toolbar\"),\n                    height = that.element.innerHeight(),\n                    scrollbar = this._scrollbar,\n                    headerHeight = 0,\n                    paddingDirection = this._isRtl ? \"left\" : \"right\";\n\n                for (var idx = 0; idx < toolbar.length; idx++) {\n                    height -= outerHeight(toolbar.eq(idx));\n                }\n\n                if (that.datesHeader) {\n                    headerHeight = outerHeight(that.datesHeader);\n                }\n\n                if (that.timesHeader && outerHeight(that.timesHeader) > headerHeight) {\n                    headerHeight = outerHeight(that.timesHeader);\n                }\n\n                if (that.datesHeader && that.timesHeader) {\n                    var datesHeaderRows = that.datesHeader.find(\"table\").first().find(\"tr\");\n\n                    that.timesHeader.find(\"tr\").height(function(index) {\n                        $(this).height(datesHeaderRows.eq(index).height());\n                    });\n                }\n\n                if (headerHeight) {\n                    height -= headerHeight;\n                }\n\n                if (that.footer) {\n                    height -= outerHeight(that.footer);\n                }\n\n                var contentDiv = that.content[0],\n                    scrollbarWidth = !kendo.support.kineticScrollNeeded ? scrollbar : 0;\n\n                if (this._isSchedulerHeightSet()) { // set content height only if needed\n\n                    if (height > scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                        that.content.height(height);\n                    } else {\n                        that.content.height(scrollbar * 2 + 1);\n                    }\n\n                    if (that.times) {\n                        that.times.height(contentDiv.clientHeight);\n\n                        var timesTable = that.times.find(\"table\");\n                        if (timesTable.length) {\n                            timesTable.height(that.content.find(\"table\")[0].clientHeight);\n                        }\n                    }\n                }\n\n                if (that.table) {\n                    if (contentDiv.offsetWidth - contentDiv.clientWidth > 0) {\n                        that.table.addClass(\"k-scrollbar-v\");\n                        that.datesHeader.css(\"padding-\" + paddingDirection, scrollbarWidth - parseInt(that.datesHeader.children().css(\"border-\" + paddingDirection + \"-width\"), 10));\n                    } else {\n                        that.datesHeader.css(\"padding-\" + paddingDirection, \"0\");\n                    }\n                    if (contentDiv.offsetHeight - contentDiv.clientHeight > 0 || contentDiv.clientHeight > that.content.children(\".k-scheduler-table\").height()) {\n                        that.table.addClass(\"k-scrollbar-h\");\n                    } else {\n                        that.table.removeClass(\"k-scrollbar-h\");\n                    }\n                }\n            },\n\n            _topSection: function(columnLevels, allDaySlot, rowCount) {\n                var thElm = $(\"<tr>\");\n\n                this.timesHeader = timesHeader(columnLevels.length, allDaySlot, rowCount);\n                this.datesHeader = this._datesHeader(columnLevels, allDaySlot);\n\n                var dateGroup = this.datesHeader.find(\".k-nav-day\");\n\n                if (dateGroup.length) {\n                    dateGroup.closest(\"tr\").addClass(\"k-scheduler-date-group\");\n                }\n\n                if (this._isMobile()) {\n                    thElm.addClass(\"k-mobile-header\");\n                    thElm.addClass(\"k-mobile-\" + this._groupOrientation() + \"-header\");\n                }\n\n                return $(thElm).append(this.timesHeader.add(this.datesHeader).wrap(\"<td>\").parent());\n            },\n\n            _bottomSection: function(columnLevels, rowLevels, rowCount) {\n                this.times = this._times(rowLevels, rowCount, this._isMobile());\n\n                this.content = content(columnLevels[columnLevels.length - 1], rowLevels[rowLevels.length - 1]);\n\n                return $(\"<tr>\").append(this.times.add(this.content).wrap(\"<td>\").parent());\n            },\n\n            _scroller: function() {\n                var that = this;\n\n                this.content.on(\"scroll\" + NS, function() {\n                    kendo.scrollLeft(that.datesHeader.find(\">.k-scheduler-header-wrap\"), this.scrollLeft);\n                    that.times.scrollTop(this.scrollTop);\n                    if (that._isVirtualized()) {\n                        that._tryRenderContent();\n                    }\n                });\n\n                var touchScroller = kendo.touchScroller(this.content, {\n                    avoidScrolling: function(e) {\n                        return $(e.event.target).closest(\".k-event.k-event-active\").length > 0;\n                    }\n                });\n\n                if (touchScroller && touchScroller.movable) {\n\n                    this._touchScroller = touchScroller;\n\n                    this.content = touchScroller.scrollElement;\n\n                    touchScroller.movable.bind(\"change\", function(e) {\n                        kendo.scrollLeft(that.datesHeader.find(\">.k-scheduler-header-wrap\"), -e.sender.x);\n                        that.times.scrollTop(-e.sender.y);\n                        if (that._isVirtualized()) {\n                            that._tryRenderContent();\n                        }\n                    });\n                }\n            },\n\n            _resourcesForGroups: function() {\n                var result = [];\n                var groups = this.options.group;\n                var resources = this.options.resources;\n\n                groups = groups && groups.resources ? groups.resources : [];\n\n                if (resources && groups.length) {\n                    for (var idx = 0, length = resources.length; idx < length; idx++) {\n                        for (var groupIdx = 0, groupLength = groups.length; groupIdx < groupLength; groupIdx++) {\n                            if (resources[idx].name === groups[groupIdx]) {\n                                result.push(resources[idx]);\n                            }\n                        }\n                    }\n                }\n\n                this.groupedResources = result;\n            },\n\n            _createDateLayout: function(dates, inner, times) {\n                return createDateLayoutConfiguration(\"rows\", dates, inner, times);\n            },\n\n            _createColumnsLayout: function(resources, inner, template, dates, times, parentValue) {\n                return createLayoutConfiguration(\"columns\", resources, inner, template, dates, times, parentValue);\n            },\n\n            _groupOrientation: function() {\n                var groups = this.options.group;\n                return groups && groups.resources ? groups.orientation : \"horizontal\";\n            },\n\n            _isGroupedByDate: function() {\n                return this.options.group && this.options.group.date;\n            },\n\n            _isVerticallyGrouped: function() {\n                return this.groupedResources.length && this._groupOrientation() === \"vertical\";\n            },\n\n            _createRowsLayout: function(resources, inner, template, dates) {\n                return createLayoutConfiguration(\"rows\", resources, inner, template, dates);\n            },\n\n            selectionByElement: function() {\n                return null;\n            },\n\n            clearSelection: function() {\n                this.content\n                    .find(\".k-selected\")\n                    .removeAttr(\"id\")\n                    .removeClass(\"k-selected\");\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(this);\n\n                if (that._ongoingTimer) {\n                    clearInterval(that._ongoingTimer);\n                    that._ongoingTimer = null;\n                }\n\n                if (that.table) {\n                    kendo.destroy(that.table);\n                    that.table.remove();\n                }\n\n                if (that.footer) {\n                    that.footer.getKendoToolBar().destroy();\n                    that.footer.remove();\n                }\n\n                that.groups = null;\n                that.table = null;\n                that.content = null;\n                that.times = null;\n                that.datesHeader = null;\n                that.timesHeader = null;\n                that.footer = null;\n                that._resizeHint = null;\n                that._moveHint = null;\n            },\n\n            calendarInfo: function() {\n                return kendo.getCulture().calendars.standard;\n            },\n\n            prevGroupSlot: function(date, groupIndex, isDay) {\n                var collection;\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n\n                if (groupIndex <= 0) {\n                    return;\n                }\n\n                if (this._isGroupedByDate()) {\n                   return slot;\n                }\n\n                if (this._isVerticallyGrouped()) {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(group.daySlotCollectionCount() - 1, true);\n                        return collection.at(slot.index);\n                    } else {\n                        collection = group._collection(isDay ? slot.index : slot.collectionIndex, false);\n                        return collection.last();\n                    }\n                } else {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(slot.collectionIndex, true);\n                        return collection.last();\n                    } else {\n                        collection = group._collection(isDay ? 0 : group.timeSlotCollectionCount() - 1, isDay);\n                        return isDay ? collection.last() : collection.at(slot.index);\n                    }\n                }\n            },\n\n            nextGroupSlot: function(date, groupIndex, isDay) {\n                var collection;\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                var daySlotCollectionCount;\n\n                if (groupIndex >= this.groups.length - 1) {\n                    return;\n                }\n\n                if (this._isGroupedByDate()) {\n                   return slot;\n                }\n\n                if (this._isVerticallyGrouped()) {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(0, true);\n                        return collection.at(slot.index);\n                    } else {\n                        daySlotCollectionCount = group.daySlotCollectionCount();\n                        collection = group._collection(daySlotCollectionCount ? 0 : slot.collectionIndex, daySlotCollectionCount);\n\n                        return isDay ? collection.first() : collection.at(slot.collectionIndex);\n                    }\n                } else {\n                    if (!group.timeSlotCollectionCount()) {\n                        collection = group._collection(slot.collectionIndex, true);\n                        return collection.first();\n                    } else {\n                        collection = group._collection(0, isDay);\n                        return isDay ? collection.first() : collection.at(slot.index);\n                    }\n                }\n            },\n\n            _eventOptionsForMove: function() {\n                return {};\n            },\n\n            _updateEventForResize: function() {\n                return;\n            },\n\n            _updateEventForSelection: function(event) {\n                return event;\n            },\n\n            _innerElements: function(element, type, inner) {\n                var count = 0,\n                    countInner = function(el) {\n                        var innerSpan = el[inner],\n                            innerEls = el[type],\n                            current, innerCollection, i;\n\n                        if (innerSpan) {\n                            count += innerSpan;\n                            return;\n                        }\n\n                        if (!innerEls || innerEls.length === 0) {\n                            count += 1;\n                            return;\n                        }\n\n                        for (i = 0; i < innerEls.length; i++) {\n                            current = innerEls[i];\n                            innerCollection = current[type];\n\n                            if (innerCollection && innerCollection[0]) {\n                                if (!innerCollection[0][type] || innerCollection[0][type].length === 0) {\n                                    count += innerCollection.length;\n                                } else {\n                                    countInner(current);\n                                }\n                            } else {\n                                count += 1;\n                            }\n                        }\n                    };\n\n                countInner(element);\n\n                return count;\n            },\n\n            _times: function(rowLevels, rowCount, isMobile) {\n                var that = this;\n                var rows = new Array(rowCount).join().split(\",\");\n                var rowHeaderRows = [];\n                var rowIndex;\n\n                for (var rowLevelIndex = 0; rowLevelIndex < rowLevels.length; rowLevelIndex++) {\n                    var level = rowLevels[rowLevelIndex];\n                    var rowsBefore = 0;\n\n                    for (rowIndex = 0; rowIndex < level.length; rowIndex++) {\n                        var currentRow = level[rowIndex];\n                        var className = currentRow.className || \"\";\n                        var text = currentRow.text;\n                        var rowspan = that._innerElements(currentRow, \"rows\");\n\n                        rowsBefore += rowspan;\n\n                        if (currentRow.allDay) {\n                            className = \"k-scheduler-times-all-day\";\n                        }\n\n                        if (isMobile && className.indexOf(\"k-scheduler-group-cell\") !== -1) {\n                            text = '<span class=\"k-scheduler-group-text\">' + text + '</span>';\n                        }\n\n                        rows[rowsBefore - rowspan] += '<th class=\"' + className + '\" rowspan=\"' + rowspan + '\">' + text + \"</th>\";\n                    }\n                }\n\n                for (rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n                    rowHeaderRows.push(rows[rowIndex]);\n                }\n\n                if (rowCount < 1) {\n                    return $();\n                }\n\n                return $('<div class=\"k-scheduler-times\">' + table(rowHeaderRows) + '</div>');\n            },\n\n            _datesHeader: function(columnLevels, allDaySlot) {\n                var that = this;\n                var dateTableRows = [];\n                var columnIndex;\n\n                for (var columnLevelIndex = 0; columnLevelIndex < columnLevels.length; columnLevelIndex++) {\n                    var level = columnLevels[columnLevelIndex];\n                    var th = [];\n\n                    for (columnIndex = 0; columnIndex < level.length; columnIndex ++) {\n                        var column = level[columnIndex];\n                        var colspan = that._innerElements(column, \"columns\", \"colspan\");\n\n                        th.push('<th colspan=\"' + (column.colspan || colspan) + '\" class=\"' + (column.className || \"\") + '\">' + column.text + \"</th>\");\n                    }\n\n                    dateTableRows.push(th.join(\"\"));\n                }\n\n                var allDayTableRows = [];\n\n                if (allDaySlot) {\n                    var lastLevel = columnLevels[columnLevels.length - 1];\n                    var td = [];\n                    var cellContent = allDaySlot.cellContent;\n\n                    for (columnIndex = 0; columnIndex < lastLevel.length; columnIndex++) {\n                        td.push('<td class=\"' + (lastLevel[columnIndex].className || \"\") + '\">' + (cellContent ? cellContent(columnIndex) : '&nbsp;') + '</td>');\n                    }\n\n                    allDayTableRows.push(td.join(\"\"));\n                }\n\n                return $(\n                    '<div class=\"k-scheduler-header\">' +\n                        '<div class=\"k-scheduler-header-wrap\">' +\n                            table(dateTableRows) +\n                            allDayTable(allDayTableRows, \"k-scheduler-header-all-day\") +\n                        '</div>' +\n                    '</div>'\n                );\n            },\n\n            _formatEventAriaLabel: function(title, start, end, isAllDay) {\n                var labelMessages = this.options.messages.ariaEventLabel,\n                    sameDate = kendo.date.getDate(start).getTime() === kendo.date.getDate(end).getTime(),\n                    labelText;\n\n                if (typeof(labelMessages) === \"string\") {\n                    return kendo.format(labelMessages, title, start, start);\n                }\n\n                labelText = (labelMessages.prefix + SPACE + title + SPACE + labelMessages.on + SPACE + kendo.toString(start, \"D\")).trim();\n\n                if (isAllDay && sameDate) {\n                    return labelText + SPACE + labelMessages.allDay;\n                } else if (isAllDay) {\n                    return labelText + SPACE + labelMessages.to + SPACE + kendo.toString(end, \"D\") + SPACE + labelMessages.allDay;\n                } else {\n                    labelText = labelText + SPACE + labelMessages.at + SPACE + kendo.toString(start, \"t\") + SPACE + labelMessages.to + SPACE;\n\n                    if (sameDate) {\n                        return labelText + kendo.toString(end, \"t\");\n                    } else {\n                        return labelText + kendo.toString(end, \"D\") + SPACE + labelMessages.at + SPACE + kendo.toString(end, \"t\");\n                    }\n                }\n            },\n\n            _ongoingEvents: function(data) {\n                var that = this,\n                    ongoingOptions = that.options.ongoingEvents,\n                    shouldMarkOngoing = !!ongoingOptions && (ongoingOptions === true || ongoingOptions.enabled),\n                    interval;\n\n                if (shouldMarkOngoing) {\n                    that._ongoingUpdater(data);\n\n                    interval = ongoingOptions.updateInterval || 60000;\n\n                    if (that._ongoingTimer) {\n                        clearInterval(that._ongoingTimer);\n                        that._ongoingTimer = null;\n                    }\n\n                    if (!isNaN(interval)) {\n                        that._ongoingTimer = setInterval(this._ongoingUpdater.bind(that, data), interval);\n                    }\n                }\n            },\n\n            _ongoingUpdater: function(data) {\n                var currentTime = new Date(),\n                    ongoingClass = this.options.ongoingEvents.cssClass || ONGOING_CLASS;\n\n                this.content.find(DOT + ongoingClass).removeClass(ongoingClass);\n\n                if (this.groups && this.groups.length > 0) {\n                    this._updateOngoing(currentTime, data);\n                }\n            },\n\n            _updateOngoing: function(currentTime, data) {\n                var that = this,\n                    el = that.element,\n                    ongoingOptions = that.options.ongoingEvents,\n                    ongoingClass = ongoingOptions.cssClass || ONGOING_CLASS,\n                    useLocalTimezone = ongoingOptions.useLocalTimezone,\n                    timezone = that.options.timezone,\n                    timezoneOffset, currentTime;\n\n                if (!data) {\n                    return;\n                }\n\n                if (useLocalTimezone === false && !!timezone) {\n                    timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                    currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                }\n\n                data.forEach(function (appointment) {\n                    var uid,\n                        start = appointment.start,\n                        end = appointment.end;\n\n                    if (appointment.isAllDay) {\n                        end = new Date(end.getTime() + 1000 * 60 * 60 * 24 - 1);\n                    }\n\n                    if (start <= currentTime && end >= currentTime) {\n                        uid = appointment.uid;\n\n                        el.find(\"[data-uid=\" + uid + \"]\").addClass(ongoingClass);\n                    }\n                });\n            }\n        });\n\n        function collidingEvents(elements, start, end) {\n            var idx,\n                index,\n                startIndex,\n                overlaps,\n                endIndex;\n\n            for (idx = elements.length - 1; idx >= 0; idx--) {\n                index = rangeIndex(elements[idx]);\n                startIndex = index.start;\n                endIndex = index.end;\n\n                overlaps = startIndex <= start && endIndex >= start;\n\n                if (overlaps || (startIndex >= start && endIndex <= end) || (start <= startIndex && end >= startIndex)) {\n                    if (startIndex < start) {\n                        start = startIndex;\n                    }\n\n                    if (endIndex > end) {\n                        end = endIndex;\n                    }\n                }\n            }\n\n            return eventsForSlot(elements, start, end);\n        }\n\n        function rangeIndex(eventElement) {\n            return {\n                start: eventElement.start,\n                end: eventElement.end,\n                slotIndex: eventElement.slotIndex,\n                slotIndexEnd: eventElement.slotIndexEnd\n            };\n        }\n\n        function eventsForSlot(elements, slotStart, slotEnd) {\n            var events = [];\n\n            for (var idx = 0; idx < elements.length; idx++) {\n                var event = rangeIndex(elements[idx]);\n\n                if ((event.start < slotStart && event.end > slotStart) || (event.start >= slotStart && event.end <= slotEnd)) {\n                    events.push(elements[idx]);\n                }\n            }\n\n            return events;\n        }\n\n        function createColumns(eventElements) {\n            return _createColumns(eventElements);\n        }\n\n        function createRows(eventElements) {\n            return _createColumns(eventElements);\n        }\n\n        var Color = function(value) {\n            var color = this,\n                formats = Color.formats,\n                re,\n                processor,\n                parts,\n                i,\n                channels;\n\n            if (arguments.length === 1) {\n                value = color.resolveColor(value);\n\n                for (i = 0; i < formats.length; i++) {\n                    re = formats[i].re;\n                    processor = formats[i].process;\n                    parts = re.exec(value);\n\n                    if (parts) {\n                        channels = processor(parts);\n                        color.r = channels[0];\n                        color.g = channels[1];\n                        color.b = channels[2];\n                    }\n                }\n            } else {\n                color.r = arguments[0];\n                color.g = arguments[1];\n                color.b = arguments[2];\n            }\n\n            color.r = color.normalizeByte(color.r);\n            color.g = color.normalizeByte(color.g);\n            color.b = color.normalizeByte(color.b);\n        };\n\n        Color.prototype = {\n            resolveColor: function(value) {\n                value = value || \"#000\";\n\n                if (value.charAt(0) == \"#\") {\n                    value = value.substr(1, 6);\n                }\n\n                value = value.replace(/ /g, \"\");\n                value = value.toLowerCase();\n                value = Color.namedColors[value] || value;\n\n                return value;\n            },\n\n            normalizeByte: function(value) {\n                return (value < 0 || isNaN(value)) ? 0 : ((value > 255) ? 255 : value);\n            },\n\n            percBrightness: function() {\n                var color = this;\n                return math.sqrt(0.241 * color.r * color.r + 0.691 * color.g * color.g + 0.068 * color.b * color.b);\n            },\n\n            isDark: function() {\n                var color = this;\n                var brightnessValue = color.percBrightness();\n                return brightnessValue < 180;\n            }\n        };\n\n        Color.formats = [{\n                re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n                process: function(parts) {\n                    return [\n                        parseInt(parts[1], 10), parseInt(parts[2], 10), parseInt(parts[3], 10)\n                    ];\n                }\n            }, {\n                re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n                process: function(parts) {\n                    return [\n                        parseInt(parts[1], 16), parseInt(parts[2], 16), parseInt(parts[3], 16)\n                    ];\n                }\n            }, {\n                re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n                process: function(parts) {\n                    return [\n                        parseInt(parts[1] + parts[1], 16),\n                        parseInt(parts[2] + parts[2], 16),\n                        parseInt(parts[3] + parts[3], 16)\n                    ];\n                }\n            }\n        ];\n\n        Color.namedColors = {\n            aqua: \"00ffff\", azure: \"f0ffff\", beige: \"f5f5dc\",\n            black: \"000000\", blue: \"0000ff\", brown: \"a52a2a\",\n            coral: \"ff7f50\", cyan: \"00ffff\", darkblue: \"00008b\",\n            darkcyan: \"008b8b\", darkgray: \"a9a9a9\", darkgreen: \"006400\",\n            darkorange: \"ff8c00\", darkred: \"8b0000\", dimgray: \"696969\",\n            fuchsia: \"ff00ff\", gold: \"ffd700\", goldenrod: \"daa520\",\n            gray: \"808080\", green: \"008000\", greenyellow: \"adff2f\",\n            indigo: \"4b0082\", ivory: \"fffff0\", khaki: \"f0e68c\",\n            lightblue: \"add8e6\", lightgrey: \"d3d3d3\", lightgreen: \"90ee90\",\n            lightpink: \"ffb6c1\", lightyellow: \"ffffe0\", lime: \"00ff00\",\n            limegreen: \"32cd32\", linen: \"faf0e6\", magenta: \"ff00ff\",\n            maroon: \"800000\", mediumblue: \"0000cd\", navy: \"000080\",\n            olive: \"808000\", orange: \"ffa500\", orangered: \"ff4500\",\n            orchid: \"da70d6\", pink: \"ffc0cb\", plum: \"dda0dd\",\n            purple: \"800080\", red: \"ff0000\", royalblue: \"4169e1\",\n            salmon: \"fa8072\", silver: \"c0c0c0\", skyblue: \"87ceeb\",\n            slateblue: \"6a5acd\", slategray: \"708090\", snow: \"fffafa\",\n            steelblue: \"4682b4\", tan: \"d2b48c\", teal: \"008080\",\n            tomato: \"ff6347\", turquoise: \"40e0d0\", violet: \"ee82ee\",\n            wheat: \"f5deb3\", white: \"ffffff\", whitesmoke: \"f5f5f5\",\n            yellow: \"ffff00\", yellowgreen: \"9acd32\"\n        };\n\n        function _createColumns(eventElements) {\n            var columns = [];\n\n            for (var idx = 0; idx < eventElements.length; idx++) {\n                var event = eventElements[idx];\n                var eventRange = rangeIndex(event);\n                var column = null;\n\n                if (event.zeroWidthEventOffset && eventRange.end - eventRange.start < event.zeroWidthEventOffset) {\n                    eventRange.end = eventRange.start + event.zeroWidthEventOffset;\n                }\n\n                for (var j = 0, columnLength = columns.length; j < columnLength; j++) {\n                    var endOverlaps = (eventRange.start > columns[j].end) || (eventRange.slotIndex > columns[j].slotIndexEnd);\n\n                    if (eventRange.start < columns[j].start || eventRange.slotIndex < columns[j].slotIndex || endOverlaps) {\n\n                        column = columns[j];\n\n                        if (column.end < eventRange.end) {\n                            column.end = eventRange.end;\n                        }\n\n                        if (column.slotIndexEnd < eventRange.slotIndexEnd) {\n                            column.slotIndexEnd = eventRange.slotIndexEnd;\n                        }\n\n                        break;\n                    }\n                }\n\n                if (!column) {\n                    column = { slotIndex: eventRange.slotIndex, slotIndexEnd: eventRange.slotIndexEnd, start: eventRange.start, end: eventRange.end, events: [] };\n                    columns.push(column);\n                }\n\n                column.events.push(event);\n            }\n\n            return columns;\n        }\n\n        function createDateLayoutConfiguration(name, dates, inner, times) {\n             var configuration = [];\n\n             $.each(dates, function(index, item) {\n                var className = item.className ? \"k-slot-cell \" + item.className : \"k-slot-cell\";\n\n                var obj = {\n                    text: item.text,\n                    className: className\n                };\n\n                if (times && !item.minorTicks) {\n                    obj[name] = createDateLayoutConfiguration(name, item.columns, inner, times);\n                } else {\n                    obj[name] = inner;\n                }\n                configuration.push(obj);\n            });\n\n            return configuration;\n        }\n\n        function createLayoutConfiguration(name, resources, inner, template, dates, times, parentValue) {\n            var resource = resources[0];\n            var configuration = [];\n\n            if (resource) {\n                if (dates && inner) {\n                    $.each(dates, function(index, item) {\n                        if (times && !item.minorTicks) {\n                            item[name] = createLayoutConfiguration(name, resources, item.columns, template, item.columns, times, parentValue);\n                        } else {\n                            item[name] = createLayoutConfiguration(name, resources, null, template, null, null, parentValue);\n                        }\n                    });\n                    configuration = dates;\n                } else {\n                    var data = resource.dataSource.view();\n\n                    data = data.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined || itemParentValue === parentValue;\n                    });\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        var value = kendo.getter(resource.dataValueField)(data[dataIndex]);\n                        var obj = {\n                            text: template({\n                                text: kendo.htmlEncode(kendo.getter(resource.dataTextField)(data[dataIndex])),\n                                color: kendo.getter(resource.dataColorField)(data[dataIndex]),\n                                field: resource.field,\n                                title: resource.title,\n                                name: resource.name,\n                                value: value\n                            }),\n                            className: \"k-slot-cell k-scheduler-group-cell\",\n                            parentValue: parentValue,\n                            value: value\n                        };\n\n                        // filter-out those inner resources that are not relevant\n                        obj[name] = createLayoutConfiguration(name, resources.slice(1), inner, template, dates, times, value);\n\n                        configuration.push(obj);\n                    }\n                }\n                return configuration;\n            }\n            return inner;\n        }\n\n        function groupEqFilter(value) {\n            return function(item) {\n                if (Array.isArray(item) || item instanceof kendo.data.ObservableArray) {\n                    for (var idx = 0; idx < item.length; idx++) {\n                        if (item[idx] == value) {\n                            return true;\n                        }\n                    }\n                    return false;\n                }\n                return item == value;\n            };\n        }\n\n        var selectedStateRegExp = /\\s*k-selected/;\n        function addSelectedState(cell) {\n            cell.className = cell.className.replace(selectedStateRegExp, \"\") + \" k-selected\";\n        }\n\n        $.extend(ui.SchedulerView, {\n            createColumns: createColumns,\n            createRows: createRows,\n            rangeIndex: rangeIndex,\n            collidingEvents: collidingEvents,\n            groupEqFilter: groupEqFilter\n        });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}