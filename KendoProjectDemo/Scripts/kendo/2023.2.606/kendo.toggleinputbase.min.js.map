{"version":3,"file":"kendo.toggleinputbase.min.js","names":["factory","define","amd","$","kendo","ui","Widget","CHANGE","DISABLED","CHECKED","ToggleInputBase","window","jQuery","extend","init","element","options","that","this","fn","call","_wrapper","_initSettings","_attachEvents","notify","events","name","NS","RENDER_INPUT","noop","check","checked","attr","prop","destroy","wrapper","off","enable","enabled","toggle","on","_change","bind","trigger","inputMethod","removeClass","plugin"],"sources":["kendo.toggleinputbase.js"],"mappings":"CAAA,SAAWA,GACW,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,CAAC,kBAAmBD,GACxEA,GACH,CAHD,EAGG,WACC,IAQUG,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEAC,EAREP,EAuHPQ,OAAOP,MAAMQ,OAtHRR,EAAQO,OAAOP,MACfC,EAAKD,EAAMC,GACXC,EAASD,EAAGC,OACZC,EAAS,SACTC,EAAW,WACXC,EAAU,UAEVC,EAAkBJ,EAAOO,OAAO,CAChCC,KAAM,SAASC,EAASC,GACpB,IAAIC,EAAOC,KAEXZ,EAAOa,GAAGL,KAAKM,KAAKH,EAAMF,EAASC,GAEnCC,EAAKI,WAELJ,EAAKK,gBAELL,EAAKM,gBAELnB,EAAMoB,OAAOP,EAAMb,EAAMC,GAC7B,EAEAoB,OAAQ,CACJlB,GAGJS,QAAS,CACLU,KAAM,mBAGVC,GAAI,wBACJC,aAAczB,EAAE0B,KAEhBC,MAAO,SAASC,GACZ,IAAId,EAAOC,KACPH,EAAUE,EAAKF,QAAQ,GAE3B,QAtCZ,IAsCgBgB,EACA,OAAOhB,EAAQgB,QAGfhB,EAAQgB,UAAYA,IACpBd,EAAKD,QAAQe,QAAUhB,EAAQgB,QAAUA,GAGzCA,EACAd,EAAKF,QAAQiB,KAAKvB,EAASA,GAE3BQ,EAAKF,QAAQkB,KAAKxB,GAAS,EAEnC,EAEAyB,QAAS,WACL5B,EAAOa,GAAGe,QAAQd,KAAKF,MACvBA,KAAKiB,QAAQC,IAAIlB,KAAKS,GAC1B,EAEAU,OAAQ,SAASA,GACb,IAAItB,EAAUG,KAAKH,aAEE,IAAVsB,IACPA,GAAS,GAGbnB,KAAKF,QAAQsB,QAAUD,EAEnBA,EACAtB,EAAQkB,KAAKzB,GAAU,GAEvBO,EAAQiB,KAAKxB,EAAUA,EAE/B,EAEA+B,OAAQ,WACOrB,KAENY,OAFMZ,KAEMH,QAAQ,GAAGgB,QAChC,EAEAR,cAAe,WACXL,KAAKH,QAAQyB,GAAGjC,EAASW,KAAKS,GAAIT,KAAKuB,QAAQC,KAAKxB,MACxD,EAEAuB,QAAS,WACL,IAAIV,EAAUb,KAAKH,QAAQ,GAAGgB,QAE9Bb,KAAKyB,QAAQpC,EAAQ,CAAEwB,QAASA,GACpC,EAEAT,cAAe,WACX,IAAIL,EAAOC,KACPH,EAAUE,EAAKF,QAAQ,GACvBC,EAAUC,EAAKD,QAEK,OAApBA,EAAQe,UACRf,EAAQe,QAAUhB,EAAQgB,SAG9Bd,EAAKa,MAAMd,EAAQe,SAEnBf,EAAQsB,QAAUtB,EAAQsB,UAAYrB,EAAKF,QAAQiB,KAAKxB,GACxDS,EAAKoB,OAAOrB,EAAQsB,QACxB,EAEAjB,SAAU,WACN,IAAIJ,EAAOC,KACPF,EAAUC,EAAKD,SAInB4B,EAHkB3B,EAAKW,cAGXX,EAAKF,QAASZ,EAAEU,OAAO,CAAC,EAAGG,IACvCC,EAAKF,QAAQ8B,YAAY,0BAEzB5B,EAAKkB,QAAUlB,EAAKF,OACxB,IAGJV,EAAGyC,OAAOpC,EAGjB","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"toggleinputbase\",\n        name: \"ToggleInputBase\",\n        category: \"web\",\n        description: \"The ToggleInputBase component.\",\n        depends: [ \"core\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            CHANGE = \"change\",\n            DISABLED = \"disabled\",\n            CHECKED = \"checked\";\n\n        var ToggleInputBase = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._wrapper();\n\n                that._initSettings();\n\n                that._attachEvents();\n\n                kendo.notify(that, kendo.ui);\n            },\n\n            events: [\n                CHANGE\n            ],\n\n            options: {\n                name: \"ToggleInputBase\"\n            },\n\n            NS: \".kendoToggleInputBase\",\n            RENDER_INPUT: $.noop,\n\n            check: function(checked) {\n                var that = this,\n                    element = that.element[0];\n\n                if (checked === undefined$1) {\n                    return element.checked;\n                }\n\n                if (element.checked !== checked) {\n                    that.options.checked = element.checked = checked;\n                }\n\n                if (checked) {\n                    that.element.attr(CHECKED, CHECKED);\n                } else {\n                    that.element.prop(CHECKED, false);\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n                this.wrapper.off(this.NS);\n            },\n\n            enable: function(enable) {\n                var element = this.element;\n\n                if (typeof enable == \"undefined\") {\n                    enable = true;\n                }\n\n                this.options.enabled = enable;\n\n                if (enable) {\n                    element.prop(DISABLED, false);\n                } else {\n                    element.attr(DISABLED, DISABLED);\n                }\n            },\n\n            toggle: function() {\n                var that = this;\n\n                that.check(!that.element[0].checked);\n            },\n\n            _attachEvents: function() {\n                this.element.on(CHANGE + this.NS, this._change.bind(this));\n            },\n\n            _change: function() {\n                var checked = this.element[0].checked;\n\n                this.trigger(CHANGE, { checked: checked });\n            },\n\n            _initSettings: function() {\n                var that = this,\n                    element = that.element[0],\n                    options = that.options;\n\n                if (options.checked === null) {\n                    options.checked = element.checked;\n                }\n\n                that.check(options.checked);\n\n                options.enabled = options.enabled && !that.element.attr(DISABLED);\n                that.enable(options.enabled);\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    options = that.options,\n                    inputMethod = that.RENDER_INPUT;\n\n\n                inputMethod(that.element, $.extend({}, options));\n                that.element.removeClass('input-validation-error');\n\n                that.wrapper = that.element;\n            }\n        });\n\n        ui.plugin(ToggleInputBase);\n    })(window.kendo.jQuery);\n\n}));\n"]}