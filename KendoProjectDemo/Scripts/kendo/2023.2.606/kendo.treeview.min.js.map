{"version":3,"file":"kendo.treeview.min.js","names":["factory","define","amd","$","undefined$1","TreeView","subGroup","nodeContents","nodeIcon","spriteRe","kendo","window","ui","data","encode","htmlEncode","extend","template","isArray","Array","Widget","HierarchicalDataSource","keys","NS","TEMP_NS","SELECT","CHECK","NAVIGATE","CHANGE","ERROR","CHECKED","INDETERMINATE","DRAGSTART","DRAG","DROP","DRAGEND","DATABOUND","ITEMSLOADED","LOADCOMPLETED","REQUESTEND","CLICK","UNDEFINED","KSTATEHOVER","KTREEVIEW","NODE","TOGGLE_ICON","TOGGLE_ICON_ELM","STRING","ARIA_CHECKED","ARIA_SELECTED","ARIA_DISABLED","ARIA_EXPANDED","ARIA_ACTIVEDESCENDANT","ARIA_BUSY","DISABLED","bindings","text","url","spriteCssClass","imageUrl","isDomElement","o","HTMLElement","nodeType","nodeName","contentChild","filter","node","result","children","length","checkboxes","find","insertAction","indexOffset","nodeData","referenceNode","parentNode","group","closest","parent","is","this","_dataSourceMove","dataSource","model","referenceItem","dataItem","referenceNodeIndex","indexOf","index","_insert","updateNodeHtml","wrapper","toggleButton","checkbox","innerWrapper","hasClass","prependTo","remove","removeAttr","appendTo","append","eq","addClass","container","tmp","toLowerCase","nextSibling","nodeValue","trim","test","className","insertBefore","firstChild","appendChild","moveContents","DataBoundWidget","init","element","options","inferred","list","that","hasDataSource","loadOnDemand","prototype","call","_dataSourceUids","_animation","_accessors","_templates","root","_wrapper","_group","_applyCssClasses","_tabindex","attr","_dataSource","_attachEvents","_dragging","_syncHtmlAndDataSource","autoBind","_progress","fetch","_attemptLoadCompleted","bind","checkChildren","updateIndeterminate","id","_ariaId","format","guid","notify","clickableItems","MOUSEENTER","_clickHandler","_click","on","e","preventDefault","removeClass","_toggleButtonClick","_keydown","_keypress","_focus","_blur","_mousedown","_checkboxChange","_retryRequest","target","focus","i","item","uid","itemCheckbox","view","uidAttr","expandedAttr","checkboxesEnabled","items","expanded","hasChildren","checked","prop","next","animationOptions","animation","hasCollapseAnimation","collapse","expand","reverse","effects","hide","enabled","dragAndDrop","dragging","widget","HierarchicalDragAndDrop","reorderable","$angular","autoScroll","allowedContainers","itemSelector","hintText","_hintText","contains","source","destination","dropHintContainer","itemFromTarget","content","first","last","dropPositionFrom","dropHint","prevAll","dragstart","trigger","sourceNode","drag","originalEvent","dropTarget","pageY","pageX","statusClass","status","setStatusClass","setStatus","drop","navigationTarget","_tempPreventNavigation","destinationNode","valid","setValid","state","dropPosition","position","dragend","triggerDragEnd","current","insertAfter","destroy","ev","off","templates","dragClue","treeview","fieldAccessor","_fieldAccessor","ref","encoded","_checkboxes","setAttributes","attributes","hasOwnProperty","wrapperCssClass","firstLevel","cssClass","groupLength","textClass","isLink","selected","checkboxClass","toggleButtonClass","toggleIcon","icon","support","isRtl","groupAttributes","groupCssClass","r","renderItems","itemContent","itemElement","tag","textAttr","toJSON","loading","messages","retry","requestFailed","setDataSource","one","_bindDataSource","_refreshHandler","refresh","_errorHandler","_error","_loadCompletedHandler","_loadCompleted","_requestEndHandler","_dsRequestEnd","_loadedNodes","setTimeout","type","_loadCompletedFired","concat","nodes","_unbindDataSource","unbind","silentRead","fields","field","create","recursiveRead","_initChildren","events","name","duration","dataTextField","size","textField","fieldName","fieldBindings","count","getter","map","x","d","Math","min","level","setOptions","fn","_trigger","eventName","_setChecked","datasource","value","isFunction","_setCheckedValue","_setIndeterminate","siblings","all","indeterminate","subnodes","_bubbleIndeterminate","skipDownward","_skip","set","isChecked","_preventChange","currentTarget","toggle","browser","msie","edge","_clickTarget","_focusable","select","clickTarget","touch","_nextVisible","scrollContainer","containers","offsets","documentElement","document","scrollHeight","clientHeight","push","scrollTop","focusElement","_enabled","skipSelf","wrapperRe","itemRe","_expanded","nextParent","_previousVisible","lastChild","prev","key","keyCode","focused","rtl","RIGHT","LEFT","DOWN","UP","HOME","END","ENTER","SPACEBAR","matchToFocus","focusedNode","get","_match","clearTimeout","_matchTimer","_matchNextByText","startIndex","contents","href","wrap","_getSelectedNode","groupElement","css","_nodes","groupData","each","_updateNodeClasses","defaultTemplate","html","renderCheckBox","rounded","replace","textWrap","_processNodes","callback","getByUid","_dataItem","_insertNode","insertCallback","collapsed","childrenData","updatedGroupLength","nodeHtml","_renderItem","angular","elements","_renderGroup","_updateNodes","nodeWrapper","isCollapsed","context","render","setCheckedState","findByUid","toggleClass","end","_toggle","ns","_appendItems","dataItems","viewItems","rootItems","_refreshChildren","child","empty","_refreshRoot","groupHtml","parentElement","_angularItems","action","bubble","_remove","_loaded","load","retryHtml","replaceWith","loaded","enable","arguments","_current","_updateActiveDescendant","direction","height","kendoStop","kendoAnimate","reset","complete","force","showProgress","loadingText","_objectOrSelf","referenceDataItem","destTreeview","destDataSource","loadPromise","Deferred","resolve","promise","_toObservableData","obj","jQuery","ObservableArray","splice","apply","success","loadModel","inserted","done","max","add","noop","keepData","prevSibling","detach","findByText","getAttribute","expandPath","path","nodeIds","slice","nodeElement","then","proceed","shift","_parentIds","parents","unshift","expandTo","Node","len","cssProperties","registerPrefix","plugin"],"sources":["kendo.treeview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.data', 'kendo.treeview.draganddrop', 'kendo.html.input', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"treeview\",\n        name: \"TreeView\",\n        category: \"web\",\n        description: \"The TreeView widget displays hierarchical data in a traditional tree structure,with support for interactive drag-and-drop operations.\",\n        depends: [ \"data\", \"html.input\", \"icons\" ],\n        features: [{\n            id: \"treeview-dragging\",\n            name: \"Drag & Drop\",\n            description: \"Support for drag & drop\",\n            depends: [ \"treeview.draganddrop\" ]\n        }]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            data = kendo.data,\n            encode = kendo.htmlEncode,\n            extend = $.extend,\n            template = kendo.template,\n            isArray = Array.isArray,\n            Widget = ui.Widget,\n            HierarchicalDataSource = data.HierarchicalDataSource,\n            keys = kendo.keys,\n            NS = \".kendoTreeView\",\n            TEMP_NS = \".kendoTreeViewTemp\",\n            SELECT = \"select\",\n            CHECK = \"check\",\n            NAVIGATE = \"navigate\",\n            EXPAND = \"expand\",\n            CHANGE = \"change\",\n            ERROR = \"error\",\n            CHECKED = \"checked\",\n            INDETERMINATE = \"indeterminate\",\n            COLLAPSE = \"collapse\",\n            DRAGSTART = \"dragstart\",\n            DRAG = \"drag\",\n            DROP = \"drop\",\n            DRAGEND = \"dragend\",\n            DATABOUND = \"dataBound\",\n            ITEMSLOADED = \"itemsLoaded\",\n            LOADCOMPLETED = \"loadCompleted\",\n            REQUESTEND = \"requestEnd\",\n            CLICK = \"click\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            UNDEFINED = \"undefined\",\n            KSTATEHOVER = \"k-hover\",\n            KTREEVIEW = \"k-treeview\",\n            VISIBLE = \":visible\",\n            NODE = \".k-item\",\n            TOGGLE_ICON = \"k-toggle-icon\",\n            TOGGLE_ICON_ELM = \"<span class='\" + TOGGLE_ICON + \"'></span>\",\n            STRING = \"string\",\n            ARIA_CHECKED = \"aria-checked\",\n            ARIA_SELECTED = \"aria-selected\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_BUSY = \"aria-busy\",\n            DISABLED = \"k-disabled\",\n            TreeView,\n            subGroup, nodeContents, nodeIcon,\n            spriteRe,\n            bindings = {\n                text: \"dataTextField\",\n                url: \"dataUrlField\",\n                spriteCssClass: \"dataSpriteCssClassField\",\n                imageUrl: \"dataImageUrlField\"\n            },\n            isJQueryInstance = function(obj) {\n                return (obj instanceof kendo.jQuery) || (window.jQuery && obj instanceof window.jQuery);\n            },\n            isDomElement = function(o) {\n                return (\n                    typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n                    o && typeof o === \"object\" && o.nodeType === 1 && typeof o.nodeName === STRING\n                );\n            };\n\n        function contentChild(filter) {\n            return function(node) {\n                var result = node.children(\".k-animation-container\");\n\n                if (!result.length) {\n                    result = node;\n                }\n\n                return result.children(filter);\n            };\n        }\n\n        function templateNoWith(code) {\n            return kendo.template(code, { useWithBlock: false });\n        }\n\n        subGroup = contentChild(\".k-group\");\n        nodeContents = contentChild(\".k-group,.k-content\");\n        nodeIcon = function(node) {\n            return node.children(\"div\").find((\".k-treeview-toggle > .\" + TOGGLE_ICON));\n        };\n\n        function checkboxes(node) {\n             return node.find(\".k-checkbox-wrapper:first input[type=checkbox]\");\n        }\n\n        function insertAction(indexOffset) {\n            return function(nodeData, referenceNode) {\n                referenceNode = referenceNode.closest(NODE);\n\n                var group = referenceNode.parent(),\n                    parentNode;\n\n                if (group.parent().is(\"li\")) {\n                    parentNode = group.parent();\n                }\n\n                return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model) {\n                    var referenceItem = this.dataItem(referenceNode);\n                    var referenceNodeIndex = referenceItem && referenceNode.parent().children().length !== referenceItem.parent().length ? referenceItem.parent().indexOf(referenceItem) : referenceNode.index();\n\n                    return this._insert(dataSource.data(), model, referenceNodeIndex + indexOffset);\n                });\n            };\n        }\n\n        spriteRe = /k-sprite/;\n\n        function moveContents(node, container) {\n            var tmp;\n\n            while (node && node.nodeName.toLowerCase() != \"ul\") {\n                tmp = node;\n                node = node.nextSibling;\n\n                if (tmp.nodeType == 3) {\n                    tmp.nodeValue = kendo.trim(tmp.nodeValue);\n                }\n\n                if (spriteRe.test(tmp.className)) {\n                    container.insertBefore(tmp, container.firstChild);\n                } else {\n                    container.appendChild(tmp);\n                }\n            }\n        }\n\n        function updateNodeHtml(node) {\n            var wrapper = node.children(\"div\"),\n                group = node.children(\"ul\"),\n                toggleButton = wrapper.find((\".k-treeview-toggle > .\" + TOGGLE_ICON)),\n                checkbox = node.children(\"input[type=checkbox]\"),\n                innerWrapper = wrapper.children(\".k-in\");\n\n            if (node.hasClass(\"k-treeview\")) {\n                return;\n            }\n\n            if (!wrapper.length) {\n                wrapper = $(\"<div />\").prependTo(node);\n            }\n\n            if (!toggleButton.length && group.length) {\n                toggleButton = $((\"<span class='k-treeview-toggle'>\" + TOGGLE_ICON_ELM + \"</span>\")).prependTo(wrapper);\n            } else if (!group.length || !group.children().length) {\n                toggleButton.parent().remove();\n                group.remove();\n                node.removeAttr(ARIA_EXPANDED);\n            }\n\n            if (checkbox.length) {\n                $(\"<span class='k-checkbox-wrapper' />\").appendTo(wrapper).append(checkbox);\n            }\n\n            if (!innerWrapper.length) {\n                innerWrapper = node.children(\"a\").eq(0).addClass(\"k-in k-link\");\n\n                if (!innerWrapper.length) {\n                    innerWrapper = $(\"<span class='k-treeview-leaf k-in' />\");\n                }\n\n                innerWrapper.appendTo(wrapper);\n\n                if (wrapper.length) {\n                    moveContents(wrapper[0].nextSibling, innerWrapper[0]);\n                }\n            }\n        }\n\n        TreeView = kendo.ui.DataBoundWidget.extend({\n            init: function(element, options) {\n                var that = this,\n                    inferred = false,\n                    hasDataSource = options && !!options.dataSource,\n                    list;\n\n                if (isArray(options)) {\n                    options = { dataSource: options };\n                }\n\n                if (options && typeof options.loadOnDemand == UNDEFINED && isArray(options.dataSource)) {\n                    options.loadOnDemand = false;\n                }\n\n                Widget.prototype.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                that._dataSourceUids = {};\n\n                list = (element.is(\"ul\") && element) ||\n                       (element.hasClass(KTREEVIEW) && element.children(\"ul\"));\n\n                inferred = !hasDataSource && list.length;\n\n                if (inferred) {\n                    options.dataSource.list = list;\n                }\n\n                that._animation();\n\n                that._accessors();\n\n                that._templates();\n\n                // render treeview if it's not already rendered\n                if (!element.hasClass(KTREEVIEW)) {\n                    that._wrapper();\n\n                    if (list) {\n                        that.root = element;\n                        that._group(that.wrapper);\n                    }\n                } else {\n                    // otherwise just initialize properties\n                    that.wrapper = element;\n                    that.root = element.children(\"ul\").eq(0);\n                }\n\n                that._applyCssClasses();\n                that._tabindex();\n\n                that.wrapper.attr(\"role\", \"tree\");\n                that.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n                that._dataSource(inferred);\n\n                that._attachEvents();\n\n                that._dragging();\n\n                if (!inferred) {\n                    if (options.autoBind) {\n                        that._progress(true);\n                        that.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                    }\n                } else {\n                    that._syncHtmlAndDataSource();\n                }\n\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    that.updateIndeterminate();\n                }\n\n                if (that.element[0].id) {\n                    that._ariaId = kendo.format(\"{0}_tv_active\", that.element[0].id);\n                } else {\n                    that._ariaId = kendo.guid() + \"_tv_active\";\n                }\n\n                kendo.notify(that);\n            },\n\n            _attachEvents: function() {\n                var that = this,\n                    clickableItems = \".k-in:not(.k-selected,.k-disabled)\",\n                    MOUSEENTER = \"mouseenter\";\n\n                that._clickHandler = that._click.bind(that);\n\n                that.wrapper\n                    .on(MOUSEENTER + NS, \".k-in.k-selected\", function(e) { e.preventDefault(); })\n                    .on(MOUSEENTER + NS, clickableItems, function() { $(this).addClass(KSTATEHOVER); })\n                    .on(\"mouseleave\" + NS, clickableItems, function() { $(this).removeClass(KSTATEHOVER); })\n                    .on(CLICK + NS, clickableItems, that._clickHandler)\n                    .on(\"dblclick\" + NS, \".k-in:not(.k-disabled)\", that._toggleButtonClick.bind(that))\n                    .on(CLICK + NS, (\".\" + TOGGLE_ICON), that._toggleButtonClick.bind(that))\n                    .on(\"keydown\" + NS, that, that._keydown.bind(that))\n                    .on(\"keypress\" + NS, that._keypress.bind(that))\n                    .on(\"focus\" + NS, that._focus.bind(that))\n                    .on(\"blur\" + NS, that._blur.bind(that))\n                    .on(\"mousedown\" + NS, (\".k-in,.k-checkbox-wrapper :checkbox,.\" + TOGGLE_ICON), that._mousedown.bind(that))\n                    .on(\"change\" + NS, \".k-checkbox-wrapper :checkbox\", that._checkboxChange.bind(that))\n                    .on(\"click\" + NS, \".k-request-retry\", that._retryRequest.bind(that))\n                    .on(\"click\" + NS, \".k-link.k-disabled\", function(e) { e.preventDefault(); })\n                    .on(\"click\" + NS, function(e) {\n                        var target = $(e.target);\n\n                        if (!target.is(\":kendoFocusable\") && !target.find(\"input,select,textarea,button,object\").is(\":kendoFocusable\")) {\n                            that.focus();\n                        }\n                    });\n            },\n\n            _syncHtmlAndDataSource: function(root, dataSource) {\n                root = root || this.root;\n                dataSource = dataSource || this.dataSource;\n                var data = dataSource.view(),\n                    uidAttr = kendo.attr(\"uid\"),\n                    expandedAttr = kendo.attr(\"expanded\"),\n                    checkboxesEnabled = this.options.checkboxes,\n                    items = root.children(\"li\"),\n                    i,\n                    item,\n                    dataItem,\n                    uid,\n                    itemCheckbox;\n\n                for (i = 0; i < items.length; i++) {\n                    dataItem = data[i];\n                    uid = dataItem.uid;\n                    item = items.eq(i);\n                    item.attr(\"role\", \"treeitem\")\n                        .attr(uidAttr, uid)\n                        .attr(ARIA_SELECTED, item.hasClass(\"k-selected\"));\n\n                    dataItem.expanded = item.attr(expandedAttr) === \"true\";\n\n                    if (dataItem.hasChildren) {\n                        item.attr(ARIA_EXPANDED, dataItem.expanded);\n                    }\n\n                    if (checkboxesEnabled) {\n                        itemCheckbox = checkboxes(item);\n                        dataItem.checked = itemCheckbox.prop(CHECKED);\n                        itemCheckbox.attr(\"id\", \"_\" + uid);\n                        itemCheckbox.next(\".k-checkbox-label\").attr(\"for\", \"_\" + uid);\n\n                        item.attr(ARIA_CHECKED, item.checked);\n                    }\n\n                    this._syncHtmlAndDataSource(item.children(\"ul\"), dataItem.children);\n                }\n            },\n\n            _animation: function() {\n                var options = this.options,\n                    animationOptions = options.animation,\n                    hasCollapseAnimation = animationOptions.collapse && \"effects\" in animationOptions.collapse,\n                    collapse = extend({}, animationOptions.expand, animationOptions.collapse);\n\n                if (!hasCollapseAnimation) {\n                    collapse = extend(collapse, { reverse: true });\n                }\n\n                if (animationOptions === false) {\n                    animationOptions = {\n                        expand: { effects: {} },\n                        collapse: { hide: true, effects: {} }\n                    };\n                }\n\n                animationOptions.collapse = extend(collapse, { hide: true });\n                options.animation = animationOptions;\n            },\n\n            _dragging: function() {\n                var enabled = this.options.dragAndDrop;\n                var dragging = this.dragging;\n\n                if (enabled && !dragging) {\n                    var widget = this;\n\n                    this.dragging = new ui.HierarchicalDragAndDrop(this.element, {\n                        reorderable: true,\n                        $angular: this.options.$angular,\n                        autoScroll: this.options.autoScroll,\n                        filter: \"div:not(.k-disabled) .k-in\",\n                        allowedContainers: \".k-treeview\",\n                        itemSelector: \".k-treeview .k-item\",\n                        hintText: this._hintText.bind(this),\n                        contains: function(source, destination) {\n                            return $.contains(source, destination);\n                        },\n                        dropHintContainer: function(item) {\n                            return item;\n                        },\n                        itemFromTarget: function(target) {\n                            var item = target.closest(\".k-treeview-top,.k-treeview-mid,.k-treeview-bot\");\n                            return {\n                                item: item,\n                                content: target.closest(\".k-in\"),\n                                first: item.hasClass(\"k-treeview-top\"),\n                                last: item.hasClass(\"k-treeview-bot\")\n                            };\n                        },\n                        dropPositionFrom: function(dropHint) {\n                            return dropHint.prevAll(\".k-in\").length > 0 ? \"after\" : \"before\";\n                        },\n                        dragstart: function(source) {\n                            widget.wrapper.attr(kendo.attr(\"scrollable\"), false);\n                            return widget.trigger(DRAGSTART, { sourceNode: source[0] });\n                        },\n                        drag: function(options) {\n                            widget.trigger(DRAG, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source[0],\n                                dropTarget: options.target[0],\n                                pageY: options.pageY,\n                                pageX: options.pageX,\n                                statusClass: options.status,\n                                setStatusClass: options.setStatus\n                            });\n                        },\n                        drop: function(options) {\n                            var dropTarget = $(options.dropTarget);\n                            var navigationTarget = dropTarget.closest(\"a\");\n\n                            if (navigationTarget && navigationTarget.attr(\"href\")) {\n                                widget._tempPreventNavigation(navigationTarget);\n                            }\n\n                            return widget.trigger(DROP, {\n                                originalEvent: options.originalEvent,\n                                sourceNode: options.source,\n                                destinationNode: options.destination,\n                                valid: options.valid,\n                                setValid: function(state) {\n                                    this.valid = state;\n                                    options.setValid(state);\n                                },\n                                dropTarget: options.dropTarget,\n                                dropPosition: options.position\n                            });\n                        },\n                        dragend: function(options) {\n                            var source = options.source;\n                            var destination = options.destination;\n                            var position = options.position;\n\n                            widget.wrapper.removeAttr(kendo.attr(\"scrollable\"));\n\n                            function triggerDragEnd(source) {\n                                if (widget.options.checkboxes && widget.options.checkboxes.checkChildren) {\n                                    widget.updateIndeterminate();\n                                }\n\n                                widget.current(source);\n                                widget.element.focus();\n\n                                widget.trigger(DRAGEND, {\n                                    originalEvent: options.originalEvent,\n                                    sourceNode: source && source[0],\n                                    destinationNode: destination[0],\n                                    dropPosition: position\n                                });\n                            }\n\n                            // perform reorder / move\n                            // different handling is necessary because append might be async in remote bound tree\n                            if (position == \"over\") {\n                                widget.append(source, destination, triggerDragEnd);\n                            } else {\n                                if (position == \"before\") {\n                                    source = widget.insertBefore(source, destination);\n                                } else if (position == \"after\") {\n                                    source = widget.insertAfter(source, destination);\n                                }\n\n                                triggerDragEnd(source);\n                            }\n                        }\n                    });\n                } else if (!enabled && dragging) {\n                    dragging.destroy();\n                    this.dragging = null;\n                }\n            },\n\n            _tempPreventNavigation: function(node) {\n                node.on(CLICK + NS + TEMP_NS, function(ev) {\n                    ev.preventDefault();\n                    node.off(CLICK + NS + TEMP_NS);\n                });\n            },\n\n            _hintText: function(node) {\n                return this.templates.dragClue({\n                    item: this.dataItem(node),\n                    treeview: this.options\n                });\n            },\n\n            _templates: function() {\n                var this$1$1 = this;\n\n                var that = this,\n                    options = that.options,\n                    fieldAccessor = that._fieldAccessor.bind(that);\n\n                if (options.template && typeof options.template == STRING) {\n                    options.template = template(options.template);\n                } else if (!options.template) {\n                    options.template = function (ref) {\n                        var item = ref.item;\n\n                        var text = fieldAccessor(\"text\")(item);\n\n                        if (typeof item.encoded != 'undefined' && item.encoded === false) {\n                            return (\"<span class='k-treeview-leaf-text'>\" + text + \"</span>\");\n                        }\n\n                        return (\"<span class='k-treeview-leaf-text'>\" + (encode(text)) + \"</span>\");\n                    };\n                }\n\n                that._checkboxes();\n\n                that.templates = {\n                    setAttributes: function(item) {\n                        var result = \"\";\n                        var attributes = item.attr || {};\n\n                        for (var attr in attributes) {\n                            if (attributes.hasOwnProperty(attr) && attr !== \"class\") {\n                                result += attr + \"=\\\"\" + attributes[attr] + \"\\\" \";\n                            }\n                        }\n\n                        return result;\n                    },\n                    wrapperCssClass: function(group, item) {\n                        var result = \"k-item k-treeview-item\",\n                            index = item.index;\n\n                        if (group.firstLevel && index === 0) {\n                            result += \" k-first\";\n                        }\n\n                        if (index == group.length - 1) {\n                            result += \" k-last\";\n                        }\n\n                        return result;\n                    },\n                    cssClass: function(group, item) {\n                        var result = \"\",\n                            index = item.index,\n                            groupLength = group.length - 1;\n\n                        if (group.firstLevel && index === 0) {\n                            result += \"k-treeview-top \";\n                        }\n\n                        if (index === 0 && index != groupLength) {\n                            result += \"k-treeview-top\";\n                        } else if (index == groupLength) {\n                            result += \"k-treeview-bot\";\n                        } else {\n                            result += \"k-treeview-mid\";\n                        }\n\n                        return result;\n                    },\n                    textClass: function(item, isLink) {\n                        var result = \"k-treeview-leaf k-in\";\n\n                        if (isLink) {\n                            result += \" k-link\";\n                        }\n\n                        if (item.enabled === false) {\n                            result += \" k-disabled\";\n                        }\n\n                        if (item.selected === true) {\n                            result += \" k-selected\";\n                        }\n\n                        return result;\n                    },\n                    checkboxClass: function(item) {\n                        var result = \"k-checkbox\";\n\n                        if (item.enabled === false) {\n                            result += \" k-disabled\";\n                        }\n\n                        return result;\n                    },\n                    toggleButtonClass: function(item) {\n                        var result = \"k-treeview-toggle\";\n\n                        if (item.enabled === false) {\n                            result += \" k-disabled\";\n                        }\n\n                        return result;\n                    },\n                    toggleIcon: function(icon, item) {\n                        if (item.expanded !== true) {\n                            return ui.icon(icon, { icon: (\"caret-alt-\" + (kendo.support.isRtl(that.element) ? 'left' : 'right')) });\n                        } else {\n                            return ui.icon(icon, { icon: 'caret-alt-down' });\n                        }\n                    },\n                    groupAttributes: function(group) {\n                        var attributes = \"\";\n\n                        if (!group.firstLevel) {\n                            attributes = \"role='group'\";\n                        }\n\n                        return attributes + (group.expanded !== true ? \" style='display:none'\" : \"\");\n                    },\n                    groupCssClass: function(group) {\n                        var cssClass = \"k-group k-treeview-group\";\n\n                        if (group.firstLevel) {\n                            cssClass += \" k-treeview-lines\";\n                        }\n\n                        return cssClass;\n                    },\n                    dragClue: function (data) { return data.treeview.template(data); },\n                    group: function (data) { return \"<ul class='\" + (data.r.groupCssClass(data.group)) + \"'\" + (data.r.groupAttributes(data.group)) + \">\" +\n                        data.renderItems(data) +\n                    \"</ul>\"; },\n                    itemContent: function (data) {\n                        var imageUrl = fieldAccessor(\"imageUrl\")(data.item);\n                        var spriteCssClass = fieldAccessor(\"spriteCssClass\")(data.item);\n                        var result = \"\";\n\n                        if (imageUrl) {\n                            result += \"<img class='k-image' alt='' src='\" + imageUrl + \"'>\";\n                        }\n\n                        if (spriteCssClass) {\n                            result += \"<span class='k-sprite \" + spriteCssClass + \"'></span>\";\n                        }\n\n                        result += data.treeview.template(data);\n\n                        return result;\n                    },\n                    itemElement: function (data) {\n                        var that = this$1$1,\n                            item = data.item,\n                            r = data.r;\n                        var url = fieldAccessor(\"url\")(item),\n                            tag = url ? 'a' : 'span',\n                            textAttr = url ? ' href=\"' + url + '\"' : '';\n                        var result = \"<div class=\\\"\" + (r.cssClass(data.group, item)) + \"\\\">\";\n\n                        if (item.hasChildren) {\n                            result += \"<span class='\" + (r.toggleButtonClass(item)) + \"'>\" +\n                                        r.toggleIcon($(TOGGLE_ICON_ELM), item) +\n                                      \"</span>\";\n                        }\n\n                        if (data.treeview.checkboxes) {\n                            result += \"<span class='k-checkbox-wrapper' role='presentation'>\" +\n                                        data.treeview.checkboxes.template(data) +\n                                      \"</span>\";\n                        }\n\n                        result += \"<\" + tag + \" class='\" + (r.textClass(item, !!url)) + \"'\" + textAttr + \">\" +\n                                     r.itemContent(data) +\n                                  \"</\" + tag + \">\";\n\n                        result += \"</div>\";\n\n                        return result;\n                    },\n                    item: function (data) {\n                        var item = data.item,\n                            r = data.r;\n                        var result =\n                            \"<li role='treeitem' class=\\\"\" + (r.wrapperCssClass(data.group, item)) + \"\\\"\" +\n                            (kendo.attr(\"uid\")) + \"=\\\"\" + (item.uid) + \"\\\"\" +\n                            (r.setAttributes(item.toJSON ? item.toJSON() : item)) + \" \";\n\n                        if (data.treeview.checkboxes) {\n                            result +=\n                                \"aria-checked=\\\"\" + (item.checked ? 'true' : 'false') + \"\\\" \";\n                        }\n\n                        result +=\n                            \"aria-selected=\\\"\" + (item.selected ? 'true' : 'false') + \"\\\" \" +\n                                \"\" + (item.enabled === false ? 'aria-disabled=\"true\"' : '');\n\n                        if (item.hasChildren) {\n                            result += \"aria-expanded=\\\"\" + (item.expanded ? \"true\" : \"false\") + \"\\\" \";\n                        }\n\n                        result +=\n                            \"data-expanded=\\\"\" + (item.expanded ? \"true\" : \"false\") + \"\\\" >\" +\n                            r.itemElement(data) +\n                            \"</li>\";\n\n                        return result;\n                    },\n                    loading: function (ref) {\n                            var messages = ref.messages;\n\n                            return (\"<div class='k-icon k-i-loading'></div> \" + (encode(messages.loading)));\n                },\n                    retry: function (ref) {\n                            var messages = ref.messages;\n\n                            return (encode(messages.requestFailed)) + \" \" +\n                        \"<button class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-request-retry'><span class='k-button-text'>\" + (encode(messages.retry)) + \"</span></button>\";\n                }\n                };\n            },\n\n            items: function() {\n                return this.element.find(\".k-item > div:first-child\");\n            },\n\n            setDataSource: function(dataSource) {\n                var options = this.options;\n\n                options.dataSource = dataSource;\n\n                this._dataSourceUids = {};\n\n                this._dataSource();\n\n                if (options.checkboxes && options.checkboxes.checkChildren) {\n                    this.dataSource.one(\"change\", this.updateIndeterminate.bind(this, null));\n                }\n\n                if (this.options.autoBind) {\n                    this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n                }\n            },\n\n            _bindDataSource: function() {\n                var that = this;\n\n                that._refreshHandler = that.refresh.bind(that);\n                that._errorHandler = that._error.bind(that);\n                that._loadCompletedHandler = that._loadCompleted.bind(that);\n                that._requestEndHandler = that._dsRequestEnd.bind(that);\n                that._loadedNodes = [];\n\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n                that.dataSource.bind(ERROR, that._errorHandler);\n\n                that.dataSource.bind(ITEMSLOADED, that._loadCompletedHandler);\n                that.dataSource.bind(REQUESTEND, that._requestEndHandler);\n            },\n\n            _dsRequestEnd: function(e) {\n                var that = this;\n\n                setTimeout(function() {\n                    if (e.type === \"read\" && !that._loadCompletedFired) {\n                        that._attemptLoadCompleted();\n                    }\n                });\n            },\n\n            _loadCompleted: function(e) {\n                var that = this;\n                that._loadedNodes = that._loadedNodes.concat(e.nodes);\n\n                if (!that.dataSource.loading() && that.options.loadOnDemand === false) {\n                    that.trigger(LOADCOMPLETED, { nodes: that._loadedNodes });\n                    that._loadedNodes = [];\n                }\n            },\n\n            _attemptLoadCompleted: function() { // If there are no items to be loaded ensure event is triggered on dataBound\n                var that = this,\n                    items = that.dataSource.view(),\n                    current, i;\n\n                if (that.options.loadOnDemand === false) {\n                    for (i = 0; i < items.length; i++) {\n                        current = items[i];\n                        if (current.hasChildren && (!current.children || !current.children.data() || current.children.data().length === 0)) {\n                            return;\n                        }\n                    }\n\n                    that._loadCompletedFired = true;\n                    that.trigger(LOADCOMPLETED, { nodes: [] });\n                }\n            },\n\n            _unbindDataSource: function() {\n                var dataSource = this.dataSource;\n\n                if (dataSource) {\n                    dataSource.unbind(CHANGE, this._refreshHandler);\n                    dataSource.unbind(ERROR, this._errorHandler);\n                    dataSource.unbind(ITEMSLOADED, this._loadCompletedHandler);\n                    dataSource.unbind(REQUESTEND, this._requestEndHandler);\n                }\n            },\n\n            _dataSource: function(silentRead) {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                function recursiveRead(data) {\n                    for (var i = 0; i < data.length; i++) {\n                        data[i]._initChildren();\n\n                        data[i].children.fetch();\n\n                        recursiveRead(data[i].children.view());\n                    }\n                }\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                that._unbindDataSource();\n\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: \"text\" },\n                        { field: \"url\" },\n                        { field: \"spriteCssClass\" },\n                        { field: \"imageUrl\" }\n                    ];\n                }\n\n                that.dataSource = dataSource = HierarchicalDataSource.create(dataSource);\n\n                if (silentRead) {\n                    dataSource.fetch();\n\n                    recursiveRead(dataSource.view());\n                }\n\n                that._bindDataSource();\n            },\n\n            events: [\n                DRAGSTART,\n                DRAG,\n                DROP,\n                DRAGEND,\n\n                DATABOUND,\n                LOADCOMPLETED,\n\n                EXPAND,\n                COLLAPSE,\n                SELECT,\n                CHANGE,\n                NAVIGATE,\n                CHECK,\n                KENDOKEYDOWN\n            ],\n\n            options: {\n                name: \"TreeView\",\n                dataSource: {},\n                animation: {\n                    expand: {\n                        effects: \"expand:vertical\",\n                        duration: 200\n                    }, collapse: {\n                        duration: 100\n                    }\n                },\n                messages: {\n                    loading: \"Loading...\",\n                    requestFailed: \"Request failed.\",\n                    retry: \"Retry\"\n                },\n                dragAndDrop: false,\n                checkboxes: false,\n                autoBind: true,\n                autoScroll: false,\n                loadOnDemand: true,\n                template: \"\",\n                dataTextField: null,\n                size: \"medium\"\n            },\n\n            _accessors: function() {\n                var that = this,\n                    options = that.options,\n                    i, field, textField,\n                    element = that.element;\n\n                for (i in bindings) {\n                    field = options[bindings[i]];\n                    textField = element.attr(kendo.attr(i + \"-field\"));\n\n                    if (!field && textField) {\n                        field = textField;\n                    }\n\n                    if (!field) {\n                        field = i;\n                    }\n\n                    if (!isArray(field)) {\n                        field = [field];\n                    }\n\n                    options[bindings[i]] = field;\n                }\n            },\n\n            // generates accessor function for a given field name, honoring the data*Field arrays\n            _fieldAccessor: function(fieldName) {\n                var fieldBindings = this.options[bindings[fieldName]],\n                    count = fieldBindings.length;\n\n                return (function(item) {\n                    if (count === 0) {\n                        return kendo.getter(fieldName)(item);\n                    }\n\n                    return $.map(fieldBindings, function(x) {\n                        return function(d) { return kendo.getter(x)(d); };\n                    })[Math.min(item.level(), count - 1)](item);\n                });\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._animation();\n\n                this._dragging();\n\n                this._accessors();\n\n                this._templates();\n            },\n\n            _trigger: function(eventName, node) {\n                return this.trigger(eventName, {\n                    node: node.closest(NODE)[0]\n                });\n            },\n\n            _setChecked: function(datasource, value) {\n                if (!datasource || !kendo.isFunction(datasource.view)) {\n                    return;\n                }\n\n                for (var i = 0, nodes = datasource.view(); i < nodes.length; i++) {\n                    if (nodes[i].enabled !== false) {\n                        this._setCheckedValue(nodes[i], value);\n                    }\n\n                    if (nodes[i].children) {\n                        this._setChecked(nodes[i].children, value);\n                    }\n                }\n            },\n\n            _setCheckedValue: function(node, value) {\n                node[CHECKED] = value;\n            },\n\n            _setIndeterminate: function(node) {\n                var group = subGroup(node),\n                    siblings, length,\n                    all = true,\n                    i;\n\n                if (!group.length) {\n                    return;\n                }\n\n                siblings = checkboxes(group.children());\n\n                length = siblings.length;\n\n                if (!length) {\n                    return;\n                } else if (length > 1) {\n                    for (i = 1; i < length; i++) {\n                        if (siblings[i].checked != siblings[i - 1].checked ||\n                            siblings[i].indeterminate || siblings[i - 1].indeterminate) {\n                            all = false;\n                            break;\n                        }\n                    }\n                } else {\n                    all = !siblings[0].indeterminate;\n                }\n\n                node.attr(ARIA_CHECKED, all ? siblings[0].checked : \"mixed\");\n\n                return checkboxes(node)\n                    .data(INDETERMINATE, !all)\n                    .prop(INDETERMINATE, !all)\n                    .prop(CHECKED, all && siblings[0].checked);\n            },\n\n            updateIndeterminate: function(node) {\n                // top-down update of inital indeterminate state for all nodes\n                node = node || this.wrapper;\n\n                var subnodes = subGroup(node).children();\n                var i;\n                var checkbox;\n                var dataItem;\n\n                if (subnodes.length) {\n                    for (i = 0; i < subnodes.length; i++) {\n                        this.updateIndeterminate(subnodes.eq(i));\n                    }\n\n                    if (node.is(\".k-treeview\")) {\n                        return;\n                    }\n\n                    checkbox = this._setIndeterminate(node);\n\n                    dataItem = this.dataItem(node);\n\n                    if (checkbox && checkbox.prop(CHECKED)) {\n                        dataItem.checked = true;\n                    } else {\n                        if (dataItem) {\n                            delete dataItem.checked;\n                        }\n                    }\n                }\n            },\n\n            _bubbleIndeterminate: function(node, skipDownward) {\n                // bottom-up setting of indeterminate state of parent nodes\n                if (!node.length) {\n                    return;\n                }\n\n                if (!skipDownward) {\n                    //update the indeterminate state of the node itself\n                    this.updateIndeterminate(node);\n                }\n\n                var parentNode = this.parent(node),\n                    checkbox;\n\n                if (parentNode.length) {\n                    this._setIndeterminate(parentNode);\n\n                    checkbox = parentNode.children(\"div\").find(\".k-checkbox-wrapper input[type=checkbox]\");\n\n                    this._skip = true;\n                    if (checkbox.prop(INDETERMINATE) === false) {\n                        this.dataItem(parentNode).set(CHECKED, checkbox.prop(CHECKED));\n                    } else {\n                        // delete this.dataItem(parentNode).checked;\n                        this.dataItem(parentNode).set(CHECKED, false);\n                    }\n\n                    this._skip = false;\n\n                    this._bubbleIndeterminate(parentNode, true);\n                }\n            },\n\n            _checkboxChange: function(e) {\n                var that = this;\n                var checkbox = $(e.target);\n                var isChecked = checkbox.prop(CHECKED);\n                var node = checkbox.closest(NODE);\n                var dataItem = this.dataItem(node);\n\n                if (this._preventChange) {\n                    return;\n                }\n\n                if (dataItem.checked != isChecked) {\n                    dataItem.set(CHECKED, isChecked);\n                    node.attr(ARIA_CHECKED, isChecked);\n                    this._trigger(CHECK, node);\n                }\n\n                if (checkbox.is(\":focus\")) {\n                    that._trigger(NAVIGATE, node);\n                    that.focus();\n                }\n            },\n\n            _toggleButtonClick: function(e) {\n                var node = $(e.currentTarget).closest(NODE);\n\n                if (node.is(\"[aria-disabled='true']\")) {\n                    return;\n                }\n\n                this.toggle(node);\n            },\n\n            _mousedown: function(e) {\n                var that = this;\n                var currentTarget = $(e.currentTarget);\n                var node = $(e.currentTarget).closest(NODE);\n                var browser = kendo.support.browser;\n\n                if (node.is(\"[aria-disabled='true']\")) {\n                    return;\n                }\n\n                //IE does not trigger change for indeterminate checkboxes\n                if ((browser.msie || browser.edge) && currentTarget.is(\":checkbox\")) {\n                    if (currentTarget.prop(INDETERMINATE)) {\n                        that._preventChange = false;\n\n                        currentTarget.prop(CHECKED, !currentTarget.prop(CHECKED));\n                        currentTarget.trigger(CHANGE);\n\n                        currentTarget.on(CLICK + NS, function(e) {\n                            e.preventDefault();\n                        });\n\n                        that._preventChange = true;\n                    } else {\n                        currentTarget.off(CLICK + NS);\n                        that._preventChange = false;\n                    }\n                }\n\n                that._clickTarget = node;\n                that.current(node);\n            },\n\n            _focusable: function(node) {\n                return node && node.length && node.is(\":visible\") && !node.find(\".k-in\").first().hasClass(DISABLED);\n            },\n\n            _focus: function() {\n                var current = this.select(),\n                    clickTarget = this._clickTarget;\n\n                // suppress initial focus state on touch devices (until keyboard is used)\n                if (kendo.support.touch) {\n                    return;\n                }\n\n                if (clickTarget && clickTarget.length) {\n                    current = clickTarget;\n                }\n\n                if (!this._focusable(current)) {\n                    current = this.current();\n                }\n\n                if (!this._focusable(current)) {\n                    current = this._nextVisible($());\n                }\n\n                this.current(current);\n            },\n\n            focus: function() {\n                var wrapper = this.wrapper,\n                    scrollContainer = wrapper[0],\n                    containers = [],\n                    offsets = [],\n                    documentElement = document.documentElement,\n                    i;\n\n                do {\n                    scrollContainer = scrollContainer.parentNode;\n\n                    if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                        containers.push(scrollContainer);\n                        offsets.push(scrollContainer.scrollTop);\n                    }\n                } while (scrollContainer != documentElement);\n\n                kendo.focusElement(wrapper);\n\n                for (i = 0; i < containers.length; i++) {\n                    containers[i].scrollTop = offsets[i];\n                }\n            },\n\n            _blur: function() {\n                this.current().find(\".k-in\").first().removeClass(\"k-focus\");\n            },\n\n            _enabled: function(node) {\n                return !node.children(\"div\").children(\".k-in\").hasClass(DISABLED);\n            },\n\n            parent: function(node) {\n                var wrapperRe = /\\bk-treeview\\b(?!-)/,\n                    itemRe = /\\bk-item\\b/,\n                    result,\n                    skipSelf;\n\n                if (typeof node == STRING) {\n                    node = this.element.find(node);\n                }\n\n                if (!isDomElement(node)) {\n                    node = node[0];\n                }\n\n                skipSelf = itemRe.test(node.className);\n\n                do {\n                    node = node.parentNode;\n\n                    if (itemRe.test(node.className)) {\n                        if (skipSelf) {\n                            result = node;\n                        } else {\n                            skipSelf = true;\n                        }\n                    }\n                } while (!wrapperRe.test(node.className) && !result);\n\n                return $(result);\n            },\n\n            _nextVisible: function(node) {\n                var that = this,\n                    expanded = that._expanded(node),\n                    result;\n\n                function nextParent(node) {\n                    while (node.length && !node.next().length) {\n                        node = that.parent(node);\n                    }\n\n                    if (node.next().length) {\n                        return node.next();\n                    } else {\n                        return node;\n                    }\n                }\n\n                if (!node.length || !node.is(\":visible\")) {\n                    result = that.root.children().eq(0);\n                } else if (expanded) {\n                    result = subGroup(node).children().first();\n\n                    // expanded node with no children\n                    if (!result.length) {\n                        result = nextParent(node);\n                    }\n                } else {\n                    result = nextParent(node);\n                }\n\n                return result;\n            },\n\n            _previousVisible: function(node) {\n                var that = this,\n                    lastChild,\n                    result;\n\n                if (!node.length || node.prev().length) {\n                    if (node.length) {\n                        result = node.prev();\n                    } else {\n                        result = that.root.children().last();\n                    }\n\n                    while (that._expanded(result)) {\n                        lastChild = subGroup(result).children().last();\n\n                        if (!lastChild.length) {\n                            break;\n                        }\n\n                        result = lastChild;\n                    }\n                } else {\n                    result = that.parent(node) || node;\n                }\n\n                return result;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    key = e.keyCode,\n                    target,\n                    focused = that.current(),\n                    expanded = that._expanded(focused),\n                    checkbox = focused.find(\".k-checkbox-wrapper\").first().find(\":checkbox\"),\n                    rtl = kendo.support.isRtl(that.element);\n\n                if (e.target != e.currentTarget) {\n                    return;\n                }\n\n                if ((!rtl && key == keys.RIGHT) || (rtl && key == keys.LEFT)) {\n                    if (expanded) {\n                        target = that._nextVisible(focused);\n                    } else if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                        that.expand(focused);\n                    }\n                } else if ((!rtl && key == keys.LEFT) || (rtl && key == keys.RIGHT)) {\n                    if (expanded && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                        that.collapse(focused);\n                    } else {\n                        target = that.parent(focused);\n\n                        if (!that._enabled(target)) {\n                            target = undefined$1;\n                        }\n                    }\n                } else if (key == keys.DOWN) {\n                    target = that._nextVisible(focused);\n                } else if (key == keys.UP) {\n                    target = that._previousVisible(focused);\n                } else if (key == keys.HOME) {\n                    target = that._nextVisible($());\n                } else if (key == keys.END) {\n                    target = that._previousVisible($());\n                } else if (key == keys.ENTER && !focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                    if (!focused.find(\".k-in\").first().hasClass(\"k-selected\")) {\n                        if (!that._trigger(SELECT, focused)) {\n                            that.select(focused);\n                        }\n                    }\n                } else if (key == keys.SPACEBAR && checkbox.length) {\n                    if (!focused.find(\".k-in\").first().hasClass(DISABLED)) {\n                        checkbox.prop(CHECKED, !checkbox.prop(CHECKED))\n                            .data(INDETERMINATE, false)\n                            .prop(INDETERMINATE, false);\n\n                        that._checkboxChange({ target: checkbox });\n                    }\n                    target = focused;\n                }\n\n                if (target) {\n                    e.preventDefault();\n\n                    if (focused[0] != target[0]) {\n                        that._trigger(NAVIGATE, target);\n                        that.current(target);\n                    }\n                }\n            },\n\n            _keypress: function(e) {\n                var that = this;\n                var delay = 300;\n                var focusedNode = that.current().get(0);\n                var matchToFocus;\n                var key = e.key;\n                var isPrintable = key.length === 1;\n\n                if (!isPrintable) {\n                    return;\n                }\n\n                if (!that._match) {\n                    that._match = \"\";\n                }\n\n                that._match += key;\n                clearTimeout(that._matchTimer);\n                that._matchTimer = setTimeout(function() {\n                    that._match = \"\";\n                }, delay);\n\n                matchToFocus = focusedNode &&\n                                that._matchNextByText(\n                                    Array.prototype.indexOf.call(that.element.find(\".k-item\"),\n                                    focusedNode), that._match\n                                );\n\n                if (!matchToFocus.length) {\n                    matchToFocus = that._matchNextByText(-1, that._match);\n                }\n\n                if (matchToFocus.get(0) && matchToFocus.get(0) !== focusedNode) {\n                    that._trigger(NAVIGATE, matchToFocus);\n                    that.current(matchToFocus);\n                }\n            },\n\n            _matchNextByText: function(startIndex, text) {\n                var element = this.element;\n                var textNodes = element.find(\".k-in\").filter(function(i, element) {\n                    return (i > startIndex &&\n                            $(element).is(\":visible\") &&\n                            $(element).text().toLowerCase().indexOf(text) === 0);\n                });\n\n                return textNodes.eq(0).closest(NODE);\n            },\n\n            _click: function(e) {\n                var that = this,\n                    node = $(e.currentTarget),\n                    contents = nodeContents(node.closest(NODE)),\n                    href = node.attr(\"href\"),\n                    shouldNavigate;\n\n                if (href) {\n                    shouldNavigate = href == \"#\" || href.indexOf(\"#\" + this.element.id + \"-\") >= 0;\n                } else {\n                    shouldNavigate = contents.length && !contents.children().length;\n                }\n\n                if (shouldNavigate) {\n                    e.preventDefault();\n                }\n\n                if (!node.hasClass(\".k-selected\") && !that._trigger(SELECT, node)) {\n                    that.select(node);\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                    element = that.element,\n                    wrapper, root,\n                    wrapperClasses = \"k-treeview\";\n\n                if (element.is(\"ul\")) {\n                    wrapper = element.wrap('<div />').parent();\n                    root = element;\n                } else {\n                    wrapper = element;\n                    root = wrapper.children(\"ul\").eq(0);\n                }\n\n                that.wrapper = wrapper.addClass(wrapperClasses);\n                that.root = root;\n            },\n\n            _getSelectedNode: function() {\n                return this.element.find(\".k-selected\").closest(NODE);\n            },\n\n            _group: function(item) {\n                var that = this,\n                    firstLevel = item.hasClass(KTREEVIEW),\n                    group = {\n                        firstLevel: firstLevel,\n                        expanded: firstLevel || that._expanded(item)\n                    },\n                    groupElement = item.children(\"ul\");\n\n                groupElement\n                    .addClass(that.templates.groupCssClass(group))\n                    .css(\"display\", group.expanded ? \"\" : \"none\");\n\n                if (!firstLevel) {\n                    groupElement.attr(\"role\", \"group\");\n                }\n\n                that._nodes(groupElement, group);\n            },\n\n            _nodes: function(groupElement, groupData) {\n                var that = this,\n                    nodes = groupElement.children(\"li\"),\n                    nodeData;\n\n                groupData = extend({ length: nodes.length }, groupData);\n\n                nodes.each(function(i, node) {\n                    node = $(node);\n\n                    nodeData = { index: i, expanded: that._expanded(node) };\n\n                    updateNodeHtml(node);\n\n                    that._updateNodeClasses(node, groupData, nodeData);\n\n                    // iterate over child nodes\n                    that._group(node);\n                });\n            },\n\n            _checkboxes: function() {\n                var options = this.options;\n                var checkboxes = options.checkboxes;\n                var defaultTemplate, checkbox;\n\n                if (checkboxes) {\n                    defaultTemplate = kendo.html.renderCheckBox($(\"<input/>\"), $.extend({}, options, {\n                        rounded: \"medium\"\n                    }));\n\n                    defaultTemplate = defaultTemplate.replace(\">\", \"\");\n\n                    checkbox = function (ref) {\n                        var item = ref.item;\n\n                        return defaultTemplate +\n                    \" id=\\\"_\" + (item.uid) + \"\\\" aria-hidden=\\\"true\\\" type=\\\"checkbox\\\" tabindex=\\\"-1\\\"\" +\n                    (checkboxes.name ? 'name=\"' + checkboxes.name + '\"' : '') + \" \" +\n                    ((item.enabled === false) ? 'disabled' : '') + \" \" +\n                    (item.checked ? 'checked' : '') + \"/>\";\n                    };\n\n                    checkboxes = extend({\n                        template: checkbox\n                    }, options.checkboxes);\n\n                    if (typeof checkboxes.template == STRING) {\n                        checkboxes.template = template(checkboxes.template);\n                    }\n\n                    options.checkboxes = checkboxes;\n                }\n            },\n\n            _updateNodeClasses: function(node, groupData, nodeData) {\n                var wrapper = node.children(\"div\"),\n                    group = node.children(\"ul\"),\n                    templates = this.templates;\n\n                if (node.hasClass(\"k-treeview\")) {\n                    return;\n                }\n\n                nodeData = nodeData || {};\n                nodeData.expanded = typeof nodeData.expanded != UNDEFINED ? nodeData.expanded : this._expanded(node);\n                nodeData.index = typeof nodeData.index != UNDEFINED ? nodeData.index : node.index();\n                nodeData.enabled = typeof nodeData.enabled != UNDEFINED ? nodeData.enabled : !wrapper.children(\".k-in\").hasClass(\"k-disabled\");\n\n                groupData = groupData || {};\n                groupData.firstLevel = typeof groupData.firstLevel != UNDEFINED ? groupData.firstLevel : node.parent().parent().hasClass(KTREEVIEW);\n                groupData.length = typeof groupData.length != UNDEFINED ? groupData.length : node.parent().children().length;\n\n                // li\n                node.removeClass(\"k-first k-last\")\n                    .addClass(templates.wrapperCssClass(groupData, nodeData));\n\n                // div\n                wrapper.removeClass(\"k-treeview-top k-treeview-mid k-treeview-bot\")\n                       .addClass(templates.cssClass(groupData, nodeData));\n\n                // chekbox\n                var checkbox = wrapper.find(\".k-checkbox\");\n                checkbox.removeClass(\"k-checkbox k-disabled\").addClass(templates.checkboxClass(nodeData));\n\n                // span / a\n                var textWrap = wrapper.children(\".k-in\");\n                var isLink = textWrap[0] && textWrap[0].nodeName.toLowerCase() == \"a\";\n                textWrap.removeClass(\"k-in k-link k-disabled\")\n                    .addClass(templates.textClass(nodeData, isLink));\n\n                // toggle button\n                if (group.length || node.attr(\"data-hasChildren\") == \"true\") {\n                    var toggleButton = wrapper.find(\".k-treeview-toggle\");\n                    var toggleIcon = toggleButton.children((\".\" + TOGGLE_ICON));\n                    toggleButton.removeClass(\"k-treeview-toggle k-disabled\").addClass(templates.toggleButtonClass(nodeData));\n\n                    // renderv icon\n                    templates.toggleIcon(toggleIcon, nodeData);\n\n\n                    group.addClass(\"k-group k-treeview-group\");\n                }\n            },\n\n\n            _processNodes: function(nodes, callback) {\n                var that = this;\n                var items = that.element.find(nodes);\n                for (var i = 0; i < items.length; i++) {\n                    callback.call(that, i, $(items[i]).closest(NODE));\n                }\n            },\n\n            dataItem: function(node) {\n                var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                    dataSource = this.dataSource;\n\n                return dataSource && dataSource.getByUid(uid);\n            },\n\n            _dataItem: function(node) {\n                var uid = $(node).closest(NODE).attr(kendo.attr(\"uid\")),\n                    dataSource = this.dataSource;\n\n                return dataSource && this._dataSourceUids[uid];\n            },\n\n            _insertNode: function(nodeData, index, parentNode, insertCallback, collapsed) {\n                var that = this,\n                    group = subGroup(parentNode),\n                    updatedGroupLength = group.children().length + 1,\n                    childrenData,\n                    groupData = {\n                        firstLevel: parentNode.hasClass(KTREEVIEW),\n                        expanded: !collapsed,\n                        length: updatedGroupLength\n                    }, node, i, item, nodeHtml = \"\", firstChild, lastChild,\n                    append = function(item, group) {\n                        item.appendTo(group);\n                    };\n\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n\n                    item.index = index + i;\n\n                    nodeHtml += that._renderItem({\n                        group: groupData,\n                        item: item\n                    });\n                }\n\n                node = $(nodeHtml);\n\n                if (!node.length) {\n                    return;\n                }\n\n                that.angular(\"compile\", function() {\n                    return {\n                        elements: node.get(),\n                        data: nodeData.map(function(item) {\n                            return { dataItem: item };\n                        })\n                    };\n                });\n\n                if (!group.length) {\n                    group = $(that._renderGroup({\n                        group: groupData\n                    })).appendTo(parentNode);\n\n                    parentNode.attr(ARIA_EXPANDED, true);\n                }\n\n                insertCallback(node, group);\n\n                if (parentNode.hasClass(\"k-item\")) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode, groupData, { expanded: !collapsed });\n                }\n\n                firstChild = node.prev().first();\n                lastChild = node.next().last();\n\n                that._updateNodeClasses(firstChild, {}, { expanded: firstChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n                that._updateNodeClasses(lastChild, {}, { expanded: lastChild.attr(kendo.attr(\"expanded\")) == \"true\" });\n\n                // render sub-nodes\n                for (i = 0; i < nodeData.length; i++) {\n                    item = nodeData[i];\n\n                    if (item.hasChildren) {\n                        childrenData = item.children.data();\n\n                        if (childrenData.length) {\n                            that._insertNode(childrenData, item.index, node.eq(i), append, !item.expanded);\n                        }\n                    }\n                }\n\n                return node;\n            },\n\n            _updateNodes: function(items, field) {\n                var that = this;\n                var i, node, nodeWrapper, item, isChecked, isCollapsed, kin;\n                var context = { treeview: that.options, item: item };\n                var render = field != \"expanded\" && field != \"checked\";\n\n                function setCheckedState(root, state) {\n                    if (root.is(\".k-group\")) {\n                        root.find(\".k-item:not([aria-disabled])\").attr(ARIA_CHECKED, state);\n                    }\n\n                    root.find(\".k-checkbox-wrapper input[type=checkbox]:not([disabled])\")\n                        .prop(CHECKED, state)\n                        .data(INDETERMINATE, false)\n                        .prop(INDETERMINATE, false);\n                }\n\n                if (field == \"selected\") {\n                    item = items[0];\n\n                    node = that.findByUid(item.uid);\n                    kin = node.find(\".k-in\").first();\n\n                    kin.removeClass(\"k-hover\")\n                        .toggleClass(\"k-selected\", item[field])\n                        .end();\n\n                    if (item[field]) {\n                        that.current(node);\n                    }\n\n                    node.attr(ARIA_SELECTED, !!item[field]);\n                } else {\n                    var elements = $.map(items, function(item) {\n                        return that.findByUid(item.uid).children(\"div\");\n                    });\n\n                    if (render) {\n                        that.angular(\"cleanup\", function() { return { elements: elements }; });\n                    }\n\n                    for (i = 0; i < items.length; i++) {\n                        context.item = item = items[i];\n                        nodeWrapper = elements[i];\n                        node = nodeWrapper.parent();\n\n                        if (render) {\n                            if (kendo.unbind) {\n                                kendo.unbind(nodeWrapper);\n                            }\n                            nodeWrapper.children(\".k-in\")\n                                .html(that.templates.itemContent(context));\n                        }\n\n                        if (field == CHECKED) {\n                            isChecked = item[field];\n\n                            setCheckedState(nodeWrapper, isChecked);\n\n                            node.attr(ARIA_CHECKED, isChecked);\n\n                            if (that.options.checkboxes.checkChildren) {\n                                setCheckedState(node.children(\".k-group\"), isChecked);\n\n                                that._setChecked(item.children, isChecked);\n\n                                that._bubbleIndeterminate(node);\n                            }\n                        } else if (field == \"expanded\") {\n                            that._toggle(node, item, item[field]);\n                        } else if (field == \"enabled\") {\n                            node.find(\".k-checkbox-wrapper input[type=checkbox]\").prop(\"disabled\", !item[field]);\n\n                            isCollapsed = !nodeContents(node).is(VISIBLE);\n\n                            node.removeAttr(ARIA_DISABLED);\n\n                            if (!item[field]) {\n                                if (item.selected) {\n                                    item.set(\"selected\", false);\n                                }\n\n                                if (item.expanded) {\n                                    item.set(\"expanded\", false);\n                                }\n\n                                isCollapsed = true;\n                                node.attr(ARIA_SELECTED, false)\n                                    .attr(ARIA_DISABLED, true);\n                            }\n\n                            that._updateNodeClasses(node, {}, { enabled: item[field], expanded: !isCollapsed });\n                        }\n\n                        if (nodeWrapper.length) {\n                            this.trigger(\"itemChange\", { item: nodeWrapper, data: item, ns: ui });\n                        }\n                    }\n\n                    if (render) {\n                        that.angular(\"compile\", function() {\n                            return {\n                                elements: elements,\n                                data: $.map(items, function(item) {\n                                    return [{ dataItem: item }];\n                                })\n                            };\n                        });\n                    }\n                }\n            },\n\n            _appendItems: function(index, items, parentNode) {\n                var group = subGroup(parentNode);\n                var children = group.children();\n                var collapsed = !this._expanded(parentNode);\n\n                if (this.element === parentNode) {\n                    var dataItems = this.dataSource.data();\n                    var viewItems = this.dataSource.view();\n                    var rootItems = viewItems.length < dataItems.length ? viewItems : dataItems;\n                    index = rootItems.indexOf(items[0]);\n                } else if (items.length) {\n                    index = items[0].parent().indexOf(items[0]);\n                }\n\n                if (typeof index == UNDEFINED) {\n                    index = children.length;\n                }\n\n                this._insertNode(items, index, parentNode, function(item, group) {\n                    // insert node into DOM\n                    if (index >= children.length) {\n                        item.appendTo(group);\n                    } else {\n                        item.insertBefore(children.eq(index));\n                    }\n                }, collapsed);\n\n                if (!collapsed) {\n                    this._updateNodeClasses(parentNode, {}, { expanded: !collapsed });\n                    subGroup(parentNode).css(\"display\", \"block\");\n                }\n            },\n\n            _refreshChildren: function(parentNode, items, index) {\n                var i, children, child;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n\n                subGroup(parentNode).empty();\n\n                if (!items.length) {\n                    updateNodeHtml(parentNode);\n                } else {\n                    this._appendItems(index, items, parentNode);\n\n                    children = subGroup(parentNode).children();\n\n                    if (loadOnDemand && checkChildren) {\n                        this._bubbleIndeterminate(children.last());\n                    }\n\n                    for (i = 0; i < children.length; i++) {\n                        child = children.eq(i);\n                        this.trigger(\"itemChange\", {\n                            item: child.children(\"div\"),\n                            data: items[i],\n                            ns: ui\n                        });\n                    }\n                }\n            },\n\n            _refreshRoot: function(items) {\n                var groupHtml = this._renderGroup({\n                        items: items,\n                        group: {\n                            firstLevel: true,\n                            expanded: true\n                        }\n                    });\n\n                if (this.root.length && this.root[0].parentElement) {\n                    this._angularItems(\"cleanup\");\n\n                    var group = $(groupHtml);\n\n                    this.root\n                        .attr(\"class\", group.attr(\"class\"))\n                        .html(group.html());\n                } else {\n                    this.root = this.wrapper.html(groupHtml).children(\"ul\");\n                }\n\n                var elements = this.root.children(\".k-item\");\n                for (var i = 0; i < items.length; i++) {\n                    this.trigger(\"itemChange\", {\n                        item: elements.eq(i),\n                        data: items[i],\n                        ns: ui\n                    });\n                }\n                this._angularItems(\"compile\");\n            },\n\n            refresh: function(e) {\n                var node = e.node;\n                var action = e.action;\n                var items = e.items;\n                var parentNode = this.wrapper;\n                var options = this.options;\n                var loadOnDemand = options.loadOnDemand;\n                var checkChildren = options.checkboxes && options.checkboxes.checkChildren;\n                var i;\n\n                if (this._skip) {\n                    return;\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    this._dataSourceUids[items[i].uid] = items[i];\n                }\n\n                if (e.field) {\n                    if (!items[0] || !items[0].level) {\n                        return;\n                    }\n\n                    return this._updateNodes(items, e.field);\n                }\n\n                if (node) {\n                    parentNode = this.findByUid(node.uid);\n                    this._progress(parentNode, false);\n                }\n\n                if (checkChildren && action != \"remove\") {\n                    var bubble = false;\n\n                    for (i = 0; i < items.length; i++) {\n                        if (\"checked\" in items[i]) {\n                            bubble = true;\n                            break;\n                        }\n                    }\n\n                    if (!bubble && node && node.checked) {\n                        for (i = 0; i < items.length; i++) {\n                            items[i].checked = true;\n                        }\n                    }\n                }\n\n                if (action == \"add\") {\n                    this._appendItems(e.index, items, parentNode);\n                } else if (action == \"remove\") {\n                    this._remove(this.findByUid(items[0].uid), false);\n                } else if (action == \"itemchange\") {\n                    this._updateNodes(items);\n                } else if (action == \"itemloaded\") {\n                    this._refreshChildren(parentNode, items, e.index);\n                } else {\n                    this._refreshRoot(items);\n                    this.element.attr(ARIA_BUSY, false);\n                }\n\n                if (action != \"remove\") {\n                    for (i = 0; i < items.length; i++) {\n                        if (!loadOnDemand || items[i].expanded || items[i]._loaded) {\n                            items[i].load();\n                        }\n                    }\n                }\n\n                this.wrapper.find(\">ul\").attr(\"role\", \"none\");\n\n\n                this.trigger(DATABOUND, { node: node ? parentNode : undefined$1 });\n                if (this.dataSource.filter() && this.options.checkboxes.checkChildren) {\n                    this.updateIndeterminate(parentNode);\n                }\n            },\n\n            _error: function(e) {\n                var node = e.node && this.findByUid(e.node.uid);\n                var retryHtml = this.templates.retry({ messages: this.options.messages });\n\n                if (node) {\n                    this._progress(node, false);\n                    this._expanded(node, false);\n                    nodeIcon(node).replaceWith(ui.icon($(TOGGLE_ICON_ELM), { icon: \"arrow-rotate-cw\" }));\n                    e.node.loaded(false);\n                } else {\n                    this._progress(false);\n                    this.dataSource.data([]);\n                    this.element.html(retryHtml);\n                }\n            },\n\n            _retryRequest: function(e) {\n                e.preventDefault();\n\n                this.dataSource.fetch(this._attemptLoadCompleted.bind(this));\n            },\n\n            expand: function(nodes) {\n                this._processNodes(nodes, function(index, item) {\n                    this.toggle(item, true);\n                });\n            },\n\n            collapse: function(nodes) {\n                this._processNodes(nodes, function(index, item) {\n                    this.toggle(item, false);\n                });\n            },\n\n            enable: function(nodes, enable) {\n                if (typeof nodes === \"boolean\") {\n                    enable = nodes;\n                    nodes = this.items();\n                } else {\n                    enable = arguments.length == 2 ? !!enable : true;\n                }\n\n                this._processNodes(nodes, function(index, item) {\n                    this.dataItem(item).set(\"enabled\", enable);\n                });\n            },\n\n            current: function(node) {\n                var that = this,\n                    current = that._current,\n                    element = that.element;\n\n                if (arguments.length > 0 && node && node.length) {\n                    if (current) {\n                        current.find(\".k-in\").first().removeClass(\"k-focus\");\n                    }\n\n                    current = that._current = $(node, element).closest(NODE);\n                    current.find(\".k-in\").first().addClass(\"k-focus\");\n                    that._updateActiveDescendant();\n\n                    return;\n                }\n\n                if (!current) {\n                    current = that._nextVisible($());\n                }\n\n                return current;\n            },\n\n            _updateActiveDescendant: function() {\n                var current = this._current,\n                    id = current[0].id || this._ariaId,\n                    prev = this.element.find(\"#\" + this._ariaId);\n\n                if (prev.length > 0) {\n                    prev.removeAttr(\"id\");\n                }\n\n                this.wrapper.removeAttr(ARIA_ACTIVEDESCENDANT);\n                current.attr(\"id\", id);\n                this.wrapper.attr(ARIA_ACTIVEDESCENDANT, id);\n            },\n\n            select: function(node) {\n                var that = this,\n                    element = that.element;\n\n                if (!arguments.length) {\n                    return element.find(\".k-selected\").closest(NODE);\n                }\n\n                node = $(node, element).closest(NODE);\n\n                element.find(\".k-selected\").each(function() {\n                    var dataItem = that.dataItem(this);\n                    if (dataItem) {\n                        dataItem.set(\"selected\", false);\n                        delete dataItem.selected;\n                    } else {\n                        $(this).removeClass(\"k-selected\");\n                    }\n                });\n\n                if (node.length) {\n                    that.dataItem(node).set(\"selected\", true);\n                    that._clickTarget = node;\n                }\n\n                that.trigger(CHANGE);\n            },\n\n            _toggle: function(node, dataItem, expand) {\n                var options = this.options;\n                var contents = nodeContents(node);\n                var direction = expand ? \"expand\" : \"collapse\";\n                var loaded;\n\n                if (contents.data(\"animating\")) {\n                    return;\n                }\n\n                loaded = dataItem && dataItem.loaded();\n\n                if (expand && !loaded) {\n                    if (options.loadOnDemand) {\n                        this._progress(node, true);\n                    }\n\n                    contents.remove();\n                    dataItem.load();\n                } else {\n                    this._updateNodeClasses(node, {}, { expanded: expand });\n\n                    if (!expand) {\n                        contents.css(\"height\", contents.height()).css(\"height\");\n                    }\n\n                    contents\n                        .kendoStop(true, true)\n                        .kendoAnimate(extend(\n                            { reset: true },\n                            options.animation[direction],\n                            { complete: function() {\n                                if (expand) {\n                                    contents.css(\"height\", \"\");\n                                }\n                            } }\n                        ));\n                }\n\n            },\n\n            toggle: function(node, expand) {\n                node = $(node);\n\n                if (!nodeIcon(node)) {\n                    return;\n                }\n\n                if (arguments.length == 1) {\n                    expand = !this._expanded(node);\n                }\n\n                this._expanded(node, expand);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n\n                that.wrapper.off(NS);\n                that.wrapper.find(\".k-checkbox-wrapper :checkbox\").off(NS);\n                that._clickHandler = null;\n\n                that._unbindDataSource();\n\n                if (that.dragging) {\n                    that.dragging.destroy();\n                }\n\n                that._dataSourceUids = {};\n\n                kendo.destroy(that.element);\n\n                that.root = that.wrapper = that.element = null;\n            },\n\n            _expanded: function(node, value, force) {\n                var expandedAttr = kendo.attr(\"expanded\");\n                var dataItem;\n                var expanded = value;\n                var direction = expanded ? \"expand\" : \"collapse\";\n\n                if (arguments.length == 1) {\n                    dataItem = this._dataItem(node);\n                    return node.attr(expandedAttr) === \"true\" || (dataItem && dataItem.expanded);\n                }\n\n                dataItem = this.dataItem(node);\n\n                if (nodeContents(node).data(\"animating\")) {\n                    return;\n                }\n\n                if (force || !this._trigger(direction, node)) {\n                    if (expanded) {\n                        node.attr(expandedAttr, \"true\");\n                        node.attr(ARIA_EXPANDED, \"true\");\n                    } else {\n                        node.removeAttr(expandedAttr);\n                        node.attr(ARIA_EXPANDED, \"false\");\n                    }\n\n                    if (dataItem) {\n                        dataItem.set(\"expanded\", expanded);\n                        // necessary when expanding an item yields an error and the item is not expanded as a result\n                        expanded = dataItem.expanded;\n                    }\n                }\n            },\n\n            _progress: function(node, showProgress) {\n                var element = this.element;\n                var loadingText = this.templates.loading({ messages: this.options.messages });\n\n                if (arguments.length == 1) {\n                    showProgress = node;\n\n                    if (showProgress) {\n                        element.html(loadingText);\n                    } else {\n                        element.empty();\n                    }\n\n                    element.attr(ARIA_BUSY, showProgress);\n                } else {\n                    nodeIcon(node).replaceWith(\n                        $(TOGGLE_ICON_ELM)\n                            .toggleClass('k-i-loading', showProgress)\n                            .toggleClass('k-icon', showProgress));\n                    node.attr(ARIA_BUSY, showProgress);\n                }\n            },\n\n            text: function(node, text) {\n                var dataItem = this.dataItem(node),\n                    fieldBindings = this.options[bindings.text],\n                    level = dataItem.level(),\n                    length = fieldBindings.length,\n                    field = fieldBindings[Math.min(level, length - 1)];\n\n                if (text) {\n                    dataItem.set(field, text);\n                } else {\n                    return dataItem[field];\n                }\n            },\n\n            _objectOrSelf: function(node) {\n                return $(node).closest(\"[data-role=treeview]\").data(\"kendoTreeView\") || this;\n            },\n\n            _dataSourceMove: function(nodeData, group, parentNode, callback) {\n                var referenceDataItem,\n                    destTreeview = this._objectOrSelf(parentNode || group),\n                    destDataSource = destTreeview.dataSource;\n                var loadPromise = $.Deferred().resolve().promise();\n\n                if (parentNode && parentNode[0] != destTreeview.element[0]) {\n                    referenceDataItem = destTreeview.dataItem(parentNode);\n\n                    if (!referenceDataItem.loaded()) {\n                        destTreeview._progress(parentNode, true);\n                        loadPromise = referenceDataItem.load();\n                    }\n\n                    if (parentNode != this.root) {\n                        destDataSource = referenceDataItem.children;\n\n                        if (!destDataSource || !(destDataSource instanceof HierarchicalDataSource)) {\n                            referenceDataItem._initChildren();\n                            referenceDataItem.loaded(true);\n                            destDataSource = referenceDataItem.children;\n                        }\n                    }\n                }\n\n                nodeData = this._toObservableData(nodeData);\n\n                return callback.call(destTreeview, destDataSource, nodeData, loadPromise);\n            },\n\n            _toObservableData: function(node) {\n                var dataItem = node, dataSource, uid;\n\n                if (isJQueryInstance(node) || isDomElement(node)) {\n                    dataSource = this._objectOrSelf(node).dataSource;\n                    uid = $(node).attr(kendo.attr(\"uid\"));\n                    dataItem = dataSource.getByUid(uid);\n\n                    if (dataItem) {\n                        dataItem = dataSource.remove(dataItem);\n                    }\n                }\n\n                return dataItem;\n            },\n\n            _insert: function(data, model, index) {\n                if (!(model instanceof kendo.data.ObservableArray)) {\n                    if (!isArray(model)) {\n                        model = [model];\n                    }\n                } else {\n                    // items will be converted to new Node instances\n                    model = model.toJSON();\n                }\n\n                var parentNode = data.parent();\n\n                if (parentNode && parentNode._initChildren) {\n                    parentNode.hasChildren = true;\n                    parentNode._initChildren();\n                }\n\n                data.splice.apply(data, [ index, 0 ].concat(model));\n\n                return this.findByUid(data[index].uid);\n            },\n\n            insertAfter: insertAction(1),\n\n            insertBefore: insertAction(0),\n\n            append: function(nodeData, parentNode, success) {\n                var group = this.root;\n\n                if (parentNode && nodeData instanceof jQuery && parentNode[0] === nodeData[0]) {\n                    return;\n                }\n\n                parentNode = parentNode && parentNode.length ? parentNode : null;\n\n                if (parentNode) {\n                    group = subGroup(parentNode);\n                }\n\n                return this._dataSourceMove(nodeData, group, parentNode, function(dataSource, model, loadModel) {\n                    var inserted;\n                    var that = this;\n\n                    function add() {\n                        if (parentNode) {\n                            that._expanded(parentNode, true, true);\n                        }\n\n                        var data = dataSource.data(),\n                            index = Math.max(data.length, 0);\n\n                        return that._insert(data, model, index);\n                    }\n\n                    loadModel.done(function() {\n                        inserted = add();\n                        success = success || $.noop;\n                        success(inserted);\n                    });\n\n                    return inserted || null;\n                });\n            },\n\n            _remove: function(node, keepData) {\n                var that = this,\n                    parentNode,\n                    prevSibling, nextSibling;\n\n                node = $(node, that.element);\n\n                if (node.attr(\"id\") === that.element.attr(ARIA_ACTIVEDESCENDANT)) {\n                    that.element.removeAttr(ARIA_ACTIVEDESCENDANT);\n                }\n\n                this.angular(\"cleanup\", function() {\n                    return { elements: node.get() };\n                });\n\n                parentNode = node.parent().parent();\n                prevSibling = node.prev();\n                nextSibling = node.next();\n\n                node[keepData ? \"detach\" : \"remove\"]();\n\n                if (parentNode.hasClass(\"k-item\")) {\n                    updateNodeHtml(parentNode);\n                    that._updateNodeClasses(parentNode);\n                }\n\n                that._updateNodeClasses(prevSibling);\n                that._updateNodeClasses(nextSibling);\n\n                return node;\n            },\n\n            remove: function(node) {\n                var dataItem = this.dataItem(node);\n                if (dataItem) {\n                    this.dataSource.remove(dataItem);\n                }\n            },\n\n            detach: function(node) {\n                return this._remove(node, true);\n            },\n\n            findByText: function(text) {\n                return $(this.element).find(\".k-in\").filter(function(i, element) {\n                    return $(element).text() == text;\n                }).closest(NODE);\n            },\n\n            findByUid: function(uid) {\n                var items = this.element.find(\".k-item\");\n                var uidAttr = kendo.attr(\"uid\");\n                var result;\n\n                for (var i = 0; i < items.length; i++) {\n                    if (items[i].getAttribute(uidAttr) == uid) {\n                        result = items[i];\n                        break;\n                    }\n                }\n\n                return $(result);\n            },\n\n            expandPath: function(path, complete) {\n                var treeview = this;\n                var nodeIds = path.slice(0);\n                var callback = complete || $.noop;\n\n                function proceed() {\n                    nodeIds.shift();\n\n                    if (nodeIds.length) {\n                        expand(nodeIds[0]).then(proceed);\n                    } else {\n                        callback.call(treeview);\n                    }\n                }\n\n                function expand(id) {\n                    var result = $.Deferred();\n                    var node = treeview.dataSource.get(id);\n                    var expandedAttr = kendo.attr(\"expanded\");\n                    var nodeElement;\n\n                    if (node) {\n                        nodeElement = treeview.findByUid(node.uid);\n\n                        if (node.loaded()) {\n                            node.set(\"expanded\", true);\n                            nodeElement.attr(expandedAttr, true);\n                            nodeElement.attr(ARIA_EXPANDED, true);\n                            result.resolve();\n                        } else {\n                            // manually show progress of the node\n                            // should be moved to `refresh`\n                            // if the datasource starts triggering a `requestStart` event for nodes\n                            treeview._progress(nodeElement, true);\n\n                            node.load().then(function() {\n                                node.set(\"expanded\", true);\n                                nodeElement.attr(expandedAttr, true);\n                                nodeElement.attr(ARIA_EXPANDED, true);\n                                result.resolve();\n                            });\n                        }\n                    } else {\n                        result.resolve();\n                    }\n\n                    return result.promise();\n                }\n\n                // expand async nodes\n                expand(nodeIds[0]).then(proceed);\n            },\n\n            _parentIds: function(node) {\n                var parent = node && node.parentNode();\n                var parents = [];\n                while (parent && parent.parentNode) {\n                    parents.unshift(parent.id);\n                    parent = parent.parentNode();\n                }\n\n                return parents;\n            },\n\n            expandTo: function(node) {\n                if (!(node instanceof kendo.data.Node)) {\n                    node = this.dataSource.get(node);\n                }\n\n                var parents = this._parentIds(node);\n\n                this.expandPath(parents);\n            },\n\n            _renderItem: function(options) {\n                if (!options.group) {\n                    options.group = {};\n                }\n\n                options.treeview = this.options;\n\n                options.r = this.templates;\n\n                return this.templates.item(options);\n            },\n\n            _renderGroup: function(options) {\n                var that = this;\n\n                options.renderItems = function(options) {\n                        var html = \"\",\n                            i = 0,\n                            items = options.items,\n                            len = items ? items.length : 0,\n                            group = options.group;\n\n                        group.length = len;\n\n                        for (; i < len; i++) {\n                            options.group = group;\n                            options.item = items[i];\n                            options.item.index = i;\n                            html += that._renderItem(options);\n                        }\n\n                        return html;\n                    };\n\n                options.r = that.templates;\n\n                return that.templates.group(options);\n            }\n        });\n\n        kendo.cssProperties.registerPrefix(\"TreeView\", \"k-treeview-\");\n\n        ui.plugin(TreeView);\n    })(window.kendo.jQuery);\n\n}));\n"]}