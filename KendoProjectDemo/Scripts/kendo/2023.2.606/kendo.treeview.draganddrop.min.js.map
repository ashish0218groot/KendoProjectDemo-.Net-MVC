{"version":3,"file":"kendo.treeview.draganddrop.min.js","names":["factory","define","amd","$","kendo","ui","extend","VISIBILITY","DRAG_STATUS","DRAG_STATUS_ELEMENT","KSTATEHOVER","window","jQuery","HierarchicalDragAndDrop","Class","init","element","options","this","hovered","dragstart","noop","drag","drop","dragend","_draggable","Draggable","ignore","filter","autoScroll","cursorOffset","left","top","support","mobileOS","zoomLevel","hint","_hint","bind","dragcancel","$angular","holdToDrag","hintText","_removeTouchHover","touch","find","removeClass","_hintStatus","newStatus","statusElement","status","icon","replaceWith","e","source","currentTarget","closest","itemSelector","preventDefault","reorderable","dropHint","css","appendTo","hoveredItem","itemHeight","itemTop","itemContent","delta","insertOnTop","insertOnBottom","addChild","itemData","position","target","dropTarget","eventTarget","container","allowedContainers","length","contains","itemFromTarget","item","_outerHeight","content","getOffset","y","location","_lastHover","toggleClass","dropHintContainer","first","last","originalEvent","pageY","pageX","x","setStatus","value","indexOf","remove","destination","eventArgs","dropPrevented","dropPositionFrom","valid","setValid","newValid","dropped","destroy"],"sources":["kendo.treeview.draganddrop.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.data', 'kendo.draganddrop'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"treeview.draganddrop\",\n        name: \"Hierarchical Drag & Drop\",\n        category: \"framework\",\n        depends: [ \"core\", \"draganddrop\" ],\n        advanced: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo;\n        var ui = kendo.ui;\n        var extend = $.extend;\n        var VISIBILITY = \"visibility\";\n        var DRAG_STATUS = \"k-drag-status\";\n        var DRAG_STATUS_ELEMENT = \"<span class=\\\"\" + DRAG_STATUS + \"\\\"></span>\";\n        var KSTATEHOVER = \"k-hover\";\n        var INPUTSELECTOR = \"input,a:not(.k-in),textarea,.k-multiselect-wrap,select,button,a.k-button>.k-icon,button.k-button>.k-icon,span.k-toggle-icon,a.k-button>.k-svg-icon,button.k-button>.k-svg-icon\";\n        var DROPHINTTEMPLATE = \"<div class='k-drop-hint k-drop-hint-h'>\" +\n                                    \"<div class='k-drop-hint-start'></div>\" +\n                                    \"<div class='k-drop-hint-line'></div>\" +\n                                \"</div>\";\n\n        ui.HierarchicalDragAndDrop = kendo.Class.extend({\n            init: function(element, options) {\n                this.element = element;\n                this.hovered = element;\n                this.options = extend({\n                    dragstart: $.noop, drag: $.noop, drop: $.noop, dragend: $.noop\n                }, options);\n\n                this._draggable = new ui.Draggable(element, {\n                    ignore: INPUTSELECTOR,\n                    filter: options.filter,\n                    autoScroll: options.autoScroll,\n                    cursorOffset: {\n                        left: 10,\n                        top: kendo.support.mobileOS ? -40 / kendo.support.zoomLevel() : 10\n                    },\n                    hint: this._hint.bind(this),\n                    dragstart: this.dragstart.bind(this),\n                    dragcancel: this.dragcancel.bind(this),\n                    drag: this.drag.bind(this),\n                    dragend: this.dragend.bind(this),\n                    $angular: options.$angular,\n                    holdToDrag: options.holdToDrag\n                });\n            },\n\n            _hint: function(element) {\n                return \"<div class='k-drag-clue'>\" +\n                            DRAG_STATUS_ELEMENT +\n                            this.options.hintText(element) +\n                        \"</div>\";\n            },\n\n            _removeTouchHover: function() {\n                if (kendo.support.touch && this.hovered) {\n                    this.hovered.find(\".\" + KSTATEHOVER).removeClass(KSTATEHOVER);\n                    this.hovered = false;\n                }\n            },\n\n            _hintStatus: function(newStatus) {\n                var statusElement = this._draggable.hint.find((\".\" + DRAG_STATUS));\n                if (newStatus) {\n                    this.status = newStatus;\n                    ui.icon(statusElement, {\n                        icon: newStatus\n                    });\n                } else {\n                    this.status = '';\n                    statusElement.replaceWith(DRAG_STATUS_ELEMENT);\n                }\n            },\n\n            dragstart: function(e) {\n                this.source = e.currentTarget.closest(this.options.itemSelector);\n\n                if (this.options.dragstart(this.source)) {\n                    e.preventDefault();\n                }\n\n                if (this.options.reorderable) {\n                    this.dropHint = $(DROPHINTTEMPLATE)\n                        .css(VISIBILITY, \"hidden\")\n                        .appendTo(this.element);\n                } else {\n                    this.dropHint = $();\n                }\n            },\n\n            drag: function(e) {\n                var options = this.options;\n                var source = this.source;\n                var target = this.dropTarget = $(kendo.eventTarget(e));\n                var container = target.closest(options.allowedContainers);\n                var hoveredItem, itemHeight, itemTop, itemContent, delta;\n                var insertOnTop, insertOnBottom, addChild;\n                var itemData, position, status;\n\n                if (!container.length) {\n                    // dragging outside of allowed elements\n                    status = \"cancel\";\n                    this._removeTouchHover();\n                } else if (source[0] == target[0] || options.contains(source[0], target[0])) {\n                    // dragging item within itself\n                    status = \"cancel\";\n                } else {\n                    // moving or reordering item\n                    status = \"insert-middle\";\n\n                    itemData = options.itemFromTarget(target);\n                    hoveredItem = itemData.item;\n\n                    if (hoveredItem.length) {\n                        this._removeTouchHover();\n                        itemHeight = kendo._outerHeight(hoveredItem);\n                        itemContent = itemData.content;\n\n                        if (options.reorderable) {\n                            delta = itemHeight / (itemContent.length > 0 ? 4 : 2);\n                            itemTop = kendo.getOffset(hoveredItem).top;\n\n                            insertOnTop = e.y.location < (itemTop + delta);\n                            insertOnBottom = (itemTop + itemHeight - delta) < e.y.location;\n                            addChild = itemContent.length && !insertOnTop && !insertOnBottom;\n                        } else {\n                            addChild = true;\n                            insertOnTop = false;\n                            insertOnBottom = false;\n                        }\n\n                        this.hovered = addChild ? container : false;\n\n                        this.dropHint.css(VISIBILITY, addChild ? \"hidden\" : \"visible\");\n\n                        if (this._lastHover && this._lastHover[0] != itemContent[0]) {\n                            this._lastHover.removeClass(KSTATEHOVER);\n                        }\n\n                        this._lastHover = itemContent.toggleClass(KSTATEHOVER, addChild);\n\n                        if (addChild) {\n                            status = \"plus\";\n                        } else {\n                            position = hoveredItem.position();\n                            position.top += insertOnTop ? 0 : itemHeight;\n\n                            this.dropHint.css(position)\n                                [insertOnTop ? \"prependTo\" : \"appendTo\"]\n                                (options.dropHintContainer(hoveredItem));\n\n                            if (insertOnTop && itemData.first) {\n                                status = \"insert-top\";\n                            }\n\n                            if (insertOnBottom && itemData.last) {\n                                status = \"insert-bottom\";\n                            }\n                        }\n                    } else if (target[0] != this.dropHint[0]) {\n                        if (this._lastHover) {\n                            this._lastHover.removeClass(KSTATEHOVER);\n                        }\n\n                        if (!$.contains(this.element[0], container[0])) {\n                            // moving node to different element\n                            status = \"plus\";\n                        } else {\n                            status = \"cancel\";\n                        }\n                    }\n                }\n\n                this.options.drag({\n                    originalEvent: e.originalEvent,\n                    source: source,\n                    target: target,\n                    pageY: e.y.location,\n                    pageX: e.x.location,\n                    status: status,\n                    setStatus: function(value) {\n                        status = value;\n                    }\n                });\n\n                if (status.indexOf(\"insert\") !== 0) {\n                    this.dropHint.css(VISIBILITY, \"hidden\");\n                }\n\n                this._hintStatus(status);\n            },\n\n            dragcancel: function() {\n                this.dropHint.remove();\n            },\n\n            dragend: function(e) {\n                var position = \"over\",\n                    source = this.source,\n                    destination,\n                    dropHint = this.dropHint,\n                    dropTarget = this.dropTarget,\n                    eventArgs, dropPrevented;\n\n                if (dropHint.css(VISIBILITY) == \"visible\") {\n                    position = this.options.dropPositionFrom(dropHint);\n                    destination = dropHint.closest(this.options.itemSelector);\n                } else if (dropTarget) {\n                    destination = dropTarget.closest(this.options.itemSelector);\n\n                    // moving node to root element\n                    if (!destination.length) {\n                        destination = dropTarget.closest(this.options.allowedContainers);\n                    }\n                }\n\n                eventArgs = {\n                    originalEvent: e.originalEvent,\n                    source: source[0],\n                    destination: destination[0],\n                    valid: this.status != \"cancel\",\n                    setValid: function(newValid) {\n                        this.valid = newValid;\n                    },\n                    dropTarget: dropTarget[0],\n                    position: position\n                };\n\n                dropPrevented = this.options.drop(eventArgs);\n\n                dropHint.remove();\n                this._removeTouchHover();\n                if (this._lastHover) {\n                    this._lastHover.removeClass(KSTATEHOVER);\n                }\n\n                if (!eventArgs.valid || dropPrevented) {\n                    this._draggable.dropped = eventArgs.valid;\n                    return;\n                }\n\n                this._draggable.dropped = true;\n\n                this.options.dragend({\n                    originalEvent: e.originalEvent,\n                    source: source,\n                    destination: destination,\n                    position: position\n                });\n            },\n\n            destroy: function() {\n                this._lastHover = this.hovered = null;\n                this._draggable.destroy();\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}