{"version":3,"file":"kendo.dataviz.stock.min.js","names":["factory","define","amd","window","kendo","dataviz","elementStyles","deepExtend","toTime","datavizConstants","constants","Chart","drawing","FadeOutAnimation","Animation","extend","setup","this","_initialOpacity","parseFloat","element","opacity","step","pos","String","interpolateValue","abort","fn","call","display","cancel","createDiv","className","style","div","document","createElement","cssText","NavigatorHint","Class","init","container","chartService","options","padding","chartPadding","top","paddingTop","left","paddingLeft","createElements","appendChild","tooltip","scroll","innerHTML","show","from","to","bbox","ref","middle","toDate","scrollWidth","width","minPos","center","x","scale","max","min","offset","text","intl","format","template","getTemplate","clearHideTimeout","_visible","visibility","offsetWidth","y1","tooltipStyle","marginTop","borderTopWidth","height","_hideTimeout","clearTimeout","_hideAnimation","hide","this$1$1","setTimeout","play","hideDelay","destroy","removeChild","setDefaultOptions","NAVIGATOR_PANE","NAVIGATOR_AXIS","DEFAULT_PANE","Navigator","chart","obj","navigator","select","parseDate","defined","hint","visible","chartObserver","InstanceObserver","DRAG","DRAG_END","ZOOM","ZOOM_END","addObserver","value","clean","selection","removeObserver","redraw","_redrawSelf","initSelection","axis","mainAxis","ref$1","roundedRange","ref$2","mousewheel","axisClone","ClonedObject","prototype","categoriesCount","box","Selection","valueOrDefault","zoom","selectStart","selectEnd","setRange","_createPlotArea","namedCategoryAxes","filterAxes","silent","plotArea","_plotArea","last","panes","redrawSlaves","slavePanes","filter","pane","name","srcSeries","series","categoryAxis","clearSeriesPointsCache","_drag","e","duration","coords","_eventCoordinates","originalEvent","navigatorAxis","naviRange","inNavigator","containsPoint","range","axisRanges","limitValue","liveDrag","set","showHint","_dragEnd","readSelection","ref_selection_options","allAxes","idx","length","requiresHandlers","args","type","axisOptions","DateCategoryAxis","baseUnit","categories","addDuration","baseUnitStep","trigger","_zoom","ref_options","delta","fromIx","categoryIndex","toIx","preventDefault","Math","abs","scaleRange","_mousewheelZoomRate","_zoomEnd","backgroundBox","_selectStart","_select","_selectEnd","themeOptions","__navi","naviOptions","concat","paneOptions","position","push","unshift","forEach","attachAxes","attachSeries","categoryAxes","valueAxes","valueAxis","justifyAxis","filterSeriesByType","EQUALLY_SPACED_SERIES","base","roundToBaseUnit","justified","_collapse","majorTicks","labels","autoBind","autoBindElements","autoBaseUnitSteps","minutes","hours","days","weeks","months","years","user","maxDateGroups","title","plotBands","_overlap","mirror","majorGridLines","navigatorSeries","seriesColors","defaults","seriesDefaults","color","categoryField","dateField","visibleInLegend","StockChart","applyDefaults","elementSize","DEFAULT_WIDTH","theme","stockDefaults","axisDefaults","floor","_setElementClass","addClass","setOptions","destroyNavigator","noTransitionsRedraw","transitions","_fullRedraw","_resize","_redraw","_dirty","partialRedraw","seriesCount","grep","s","dirty","_seriesCount","_trackSharedTooltip","paneByPoint","_unsetActivePoint","bindCategories","copyNavigatorCategories","definitions","axisIx","_stopChartHandlers","_toggleDragZoomEvents","_dragZoomEnabled","touchAction","narrowRange","markers","highlight","line","legend","$","ChartInstanceObserver","ui","KendoStockChart","CHANGE","StockInstanceObserver","handlerMap","navigatorFilter","navigatorCreated","category","toString","persistSeriesVisibility","_createChart","_initNavigatorOptions","_instance","observer","sender","rtl","_isRtl","navigatorOptions","support","isTouch","touch","isFirefox","browser","mozilla","dataSource","_initDataSource","userOptions","hasServerFiltering","serverFiltering","hasSelect","dummyAxis","buildFilter","_onNavigatorCreated","_navigator","_initNavigatorDataSource","dsOptions","_navigatorDataChangedHandler","_onNavigatorDataChanged","bind","_navigatorDataSource","data","DataSource","create","fetch","_bindNavigatorSeries","seriesIx","currentSeries","seriesLength","_isBindable","currentAxis","naviCategories","instance","axesLength","view","_sourceSeries","_bindCategoryAxis","_model","_dataBound","_bindCategories","_onDataChanged","_removeNavigatorDataSource","_onNavigatorFilter","names","inArray","navigatorDataSource","unbind","field","operator","plugin","jQuery"],"sources":["kendo.dataviz.stock.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.dataviz.chart'], factory) :\n    factory();\n})((function () {\n    /***********************************************************************\n     * WARNING: this file is auto-generated.  If you change it directly,\n     * your modifications will eventually be lost.  The source code is in\n     * `kendo-charts` repository, you should make your changes there and\n     * run `src-modules/sync.sh` in this repository.\n     */\n\n    (function() {\n    /* eslint-disable space-before-blocks, space-before-function-paren */\n\n    window.kendo.dataviz = window.kendo.dataviz || {};\n    var dataviz = kendo.dataviz;\n    var elementStyles = dataviz.elementStyles;\n    var deepExtend = dataviz.deepExtend;\n    var toTime = dataviz.toTime;\n    var datavizConstants = dataviz.constants;\n    var Chart = dataviz.Chart;\n    var drawing = kendo.drawing;\n\n    var FadeOutAnimation = drawing.Animation.extend({\n        setup: function() {\n            this._initialOpacity = parseFloat(elementStyles(this.element, 'opacity').opacity);\n        },\n\n        step: function(pos) {\n            elementStyles(this.element, {\n                opacity: String(dataviz.interpolateValue(this._initialOpacity, 0, pos))\n            });\n        },\n\n        abort: function() {\n            drawing.Animation.fn.abort.call(this);\n            elementStyles(this.element, {\n                display: 'none',\n                opacity: String(this._initialOpacity)\n            });\n        },\n\n        cancel: function() {\n            drawing.Animation.fn.abort.call(this);\n            elementStyles(this.element, {\n                opacity: String(this._initialOpacity)\n            });\n        }\n    });\n\n    function createDiv(className, style) {\n        var div = document.createElement(\"div\");\n        div.className = className;\n        if (style) {\n            div.style.cssText = style;\n        }\n\n        return div;\n    }\n\n    var NavigatorHint = dataviz.Class.extend({\n        init: function(container, chartService, options) {\n\n            this.options = deepExtend({}, this.options, options);\n            this.container = container;\n            this.chartService = chartService;\n\n            var padding = elementStyles(container, [ \"paddingLeft\", \"paddingTop\" ]);\n            this.chartPadding = {\n                top: padding.paddingTop,\n                left: padding.paddingLeft\n            };\n\n            this.createElements();\n            container.appendChild(this.element);\n        },\n\n        createElements: function() {\n            var element = this.element = createDiv('k-navigator-hint', 'display: none; position: absolute; top: 1px; left: 1px;');\n            var tooltip = this.tooltip = createDiv('k-tooltip k-chart-tooltip');\n            var scroll = this.scroll = createDiv('k-scroll');\n\n            tooltip.innerHTML = '&nbsp;';\n\n            element.appendChild(tooltip);\n            element.appendChild(scroll);\n        },\n\n        show: function(from, to, bbox) {\n            var ref = this;\n            var element = ref.element;\n            var options = ref.options;\n            var scroll = ref.scroll;\n            var tooltip = ref.tooltip;\n            var middle = dataviz.toDate(toTime(from) + toTime(to - from) / 2);\n            var scrollWidth = bbox.width() * 0.4;\n            var minPos = bbox.center().x - scrollWidth;\n            var maxPos = bbox.center().x;\n            var posRange = maxPos - minPos;\n            var range = options.max - options.min;\n            var scale = posRange / range;\n            var offset = middle - options.min;\n            var text = this.chartService.intl.format(options.format, from, to);\n            var template = dataviz.getTemplate(options);\n\n            this.clearHideTimeout();\n\n            if (!this._visible) {\n                elementStyles(element, {\n                    visibility: 'hidden',\n                    display: 'block'\n                });\n                this._visible = true;\n            }\n\n            if (template) {\n                text = template({\n                    from: from,\n                    to: to\n                });\n            }\n\n            tooltip.innerHTML = text;\n            elementStyles(tooltip, {\n                left: bbox.center().x - tooltip.offsetWidth / 2,\n                top: bbox.y1\n            });\n\n            var tooltipStyle = elementStyles(tooltip, [ 'marginTop', 'borderTopWidth', 'height' ]);\n\n            elementStyles(scroll, {\n                width: scrollWidth,\n                left: minPos + offset * scale,\n                top: bbox.y1 + tooltipStyle.marginTop + tooltipStyle.borderTopWidth + tooltipStyle.height / 2\n            });\n\n            elementStyles(element, {\n                visibility: 'visible'\n            });\n        },\n\n        clearHideTimeout: function() {\n            if (this._hideTimeout) {\n                clearTimeout(this._hideTimeout);\n            }\n\n            if (this._hideAnimation) {\n                this._hideAnimation.cancel();\n            }\n        },\n\n        hide: function() {\n            var this$1$1 = this;\n\n            this.clearHideTimeout();\n\n            this._hideTimeout = setTimeout(function () {\n                this$1$1._visible = false;\n                this$1$1._hideAnimation = new FadeOutAnimation(this$1$1.element);\n                this$1$1._hideAnimation.setup();\n                this$1$1._hideAnimation.play();\n            }, this.options.hideDelay);\n        },\n\n        destroy: function() {\n            this.clearHideTimeout();\n            if (this.container) {\n                this.container.removeChild(this.element);\n            }\n            delete this.container;\n            delete this.chartService;\n            delete this.element;\n            delete this.tooltip;\n            delete this.scroll;\n        }\n    });\n\n    dataviz.setDefaultOptions(NavigatorHint, {\n        format: \"{0:d} - {1:d}\",\n        hideDelay: 500\n    });\n\n    var NAVIGATOR_PANE = \"_navigator\";\n    var NAVIGATOR_AXIS = NAVIGATOR_PANE;\n    var DEFAULT_PANE = \"_default\";\n\n    var constants = {\n    \tNAVIGATOR_AXIS: NAVIGATOR_AXIS,\n    \tNAVIGATOR_PANE: NAVIGATOR_PANE,\n    \tDEFAULT_PANE: DEFAULT_PANE\n    };\n\n    var ZOOM_ACCELERATION = 3;\n\n    var Navigator = dataviz.Class.extend({\n        init: function(chart) {\n\n            this.chart = chart;\n            var options = this.options = deepExtend({}, this.options, chart.options.navigator);\n            var select = options.select;\n            if (select) {\n                select.from = this.parseDate(select.from);\n                select.to = this.parseDate(select.to);\n            }\n\n            if (!dataviz.defined(options.hint.visible)) {\n                options.hint.visible = options.visible;\n            }\n\n            var obj;\n            this.chartObserver = new dataviz.InstanceObserver(this, ( obj = {}, obj[datavizConstants.DRAG] = '_drag', obj[datavizConstants.DRAG_END] = '_dragEnd', obj[datavizConstants.ZOOM] = '_zoom', obj[datavizConstants.ZOOM_END] = '_zoomEnd', obj ));\n            chart.addObserver(this.chartObserver);\n        },\n\n        parseDate: function(value) {\n            return dataviz.parseDate(this.chart.chartService.intl, value);\n        },\n\n        clean: function() {\n            if (this.selection) {\n                this.selection.destroy();\n                this.selection = null;\n            }\n\n            if (this.hint) {\n                this.hint.destroy();\n                this.hint = null;\n            }\n        },\n\n        destroy: function() {\n            if (this.chart) {\n                this.chart.removeObserver(this.chartObserver);\n                delete this.chart;\n            }\n\n            this.clean();\n        },\n\n        redraw: function() {\n            this._redrawSelf();\n            this.initSelection();\n        },\n\n        initSelection: function() {\n            var ref = this;\n            var chart = ref.chart;\n            var options = ref.options;\n            var axis = this.mainAxis();\n            var ref$1 = axis.roundedRange();\n            var min = ref$1.min;\n            var max = ref$1.max;\n            var ref$2 = options.select;\n            var from = ref$2.from;\n            var to = ref$2.to;\n            var mousewheel = ref$2.mousewheel;\n            var axisClone = clone(axis);\n\n            if (axis.categoriesCount() === 0) {\n                return;\n            }\n\n            this.clean();\n\n            // \"Freeze\" the selection axis position until the next redraw\n            axisClone.box = axis.box;\n\n            this.selection = new dataviz.Selection(chart, axisClone, {\n                min: min,\n                max: max,\n                from: from || min,\n                to: to || max,\n                mousewheel: dataviz.valueOrDefault(mousewheel, { zoom: \"left\" }),\n                visible: options.visible\n            }, new dataviz.InstanceObserver(this, {\n                selectStart: '_selectStart',\n                select: '_select',\n                selectEnd: '_selectEnd'\n            }));\n\n            if (options.hint.visible) {\n                this.hint = new NavigatorHint(chart.element, chart.chartService, {\n                    min: min,\n                    max: max,\n                    template: dataviz.getTemplate(options.hint),\n                    format: options.hint.format\n                });\n            }\n        },\n\n        setRange: function() {\n            var plotArea = this.chart._createPlotArea(true);\n            var axis = plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n\n            var ref = axis.roundedRange();\n            var min = ref.min;\n            var max = ref.max;\n\n            var select = this.options.select || {};\n            var from = select.from || min;\n            if (from < min) {\n                from = min;\n            }\n\n            var to = select.to || max;\n            if (to > max) {\n                to = max;\n            }\n\n            this.options.select = deepExtend({}, select, {\n                from: from,\n                to: to\n            });\n\n            this.filterAxes();\n        },\n\n        _redrawSelf: function(silent) {\n            var plotArea = this.chart._plotArea;\n\n            if (plotArea) {\n                plotArea.redraw(dataviz.last(plotArea.panes), silent);\n            }\n        },\n\n        redrawSlaves: function() {\n            var chart = this.chart;\n            var plotArea = chart._plotArea;\n            var slavePanes = plotArea.panes.filter(function (pane) { return pane.options.name !== NAVIGATOR_PANE; });\n\n            // Update the original series and categoryAxis before partial refresh.\n            plotArea.srcSeries = chart.options.series;\n            plotArea.options.categoryAxis = chart.options.categoryAxis;\n            plotArea.clearSeriesPointsCache();\n\n            plotArea.redraw(slavePanes);\n        },\n\n        _drag: function(e) {\n            var ref = this;\n            var chart = ref.chart;\n            var selection = ref.selection;\n            var coords = chart._eventCoordinates(e.originalEvent);\n            var navigatorAxis = this.mainAxis();\n            var naviRange = navigatorAxis.roundedRange();\n            var inNavigator = navigatorAxis.pane.box.containsPoint(coords);\n            var axis = chart._plotArea.categoryAxis;\n            var range = e.axisRanges[axis.options.name];\n            var select = this.options.select;\n            var duration;\n\n            if (!range || inNavigator || !selection) {\n                return;\n            }\n\n            if (select.from && select.to) {\n                duration = toTime(select.to) - toTime(select.from);\n            } else {\n                duration = toTime(selection.options.to) - toTime(selection.options.from);\n            }\n\n            var from = dataviz.toDate(dataviz.limitValue(\n                toTime(range.min),\n                naviRange.min, toTime(naviRange.max) - duration\n            ));\n\n            var to = dataviz.toDate(dataviz.limitValue(\n                toTime(from) + duration,\n                toTime(naviRange.min) + duration, naviRange.max\n            ));\n\n            this.options.select = { from: from, to: to };\n\n            if (this.options.liveDrag) {\n                this.filterAxes();\n                this.redrawSlaves();\n            }\n\n            selection.set(from, to);\n\n            this.showHint(from, to);\n        },\n\n        _dragEnd: function() {\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            if (this.hint) {\n                this.hint.hide();\n            }\n        },\n\n        readSelection: function() {\n            var ref = this;\n            var ref_selection_options = ref.selection.options;\n            var from = ref_selection_options.from;\n            var to = ref_selection_options.to;\n            var select = ref.options.select;\n\n            select.from = from;\n            select.to = to;\n        },\n\n        filterAxes: function() {\n            var ref = this;\n            var select = ref.options.select; if (select === void 0) { select = { }; }\n            var chart = ref.chart;\n            var allAxes = chart.options.categoryAxis;\n            var from = select.from;\n            var to = select.to;\n\n            for (var idx = 0; idx < allAxes.length; idx++) {\n                var axis = allAxes[idx];\n                if (axis.pane !== NAVIGATOR_PANE) {\n                    axis.min = from;\n                    axis.max = to;\n                }\n            }\n        },\n\n        filter: function() {\n            var ref = this;\n            var chart = ref.chart;\n            var select = ref.options.select;\n\n            if (!chart.requiresHandlers([ \"navigatorFilter\" ])) {\n                return;\n            }\n\n            var mainAxis = this.mainAxis();\n            var args = {\n                from: select.from,\n                to: select.to\n            };\n\n            if (mainAxis.options.type !== 'category') {\n                var axisOptions = new dataviz.DateCategoryAxis(deepExtend({\n                    baseUnit: \"fit\"\n                }, chart.options.categoryAxis[0], {\n                    categories: [ select.from, select.to ]\n                }), chart.chartService).options;\n\n                args.from = dataviz.addDuration(axisOptions.min, -axisOptions.baseUnitStep, axisOptions.baseUnit);\n                args.to = dataviz.addDuration(axisOptions.max, axisOptions.baseUnitStep, axisOptions.baseUnit);\n            }\n\n            this.chart.trigger(\"navigatorFilter\", args);\n        },\n\n        _zoom: function(e) {\n            var ref = this;\n            var axis = ref.chart._plotArea.categoryAxis;\n            var selection = ref.selection;\n            var ref_options = ref.options;\n            var select = ref_options.select;\n            var liveDrag = ref_options.liveDrag;\n            var mainAxis = this.mainAxis();\n            var delta = e.delta;\n\n            if (!selection) {\n                return;\n            }\n\n            var fromIx = mainAxis.categoryIndex(selection.options.from);\n            var toIx = mainAxis.categoryIndex(selection.options.to);\n            var coords = this.chart._eventCoordinates(e.originalEvent);\n\n            e.originalEvent.preventDefault();\n\n            if (Math.abs(delta) > 1) {\n                delta *= ZOOM_ACCELERATION;\n            }\n\n            if (toIx - fromIx > 1) {\n                selection.zoom(delta, coords);\n                this.readSelection();\n            } else {\n                axis.options.min = select.from;\n                select.from = axis.scaleRange(-e.delta * this.chart._mousewheelZoomRate(), coords).min;\n            }\n\n            if (liveDrag) {\n                this.filterAxes();\n                this.redrawSlaves();\n            }\n\n            selection.set(select.from, select.to);\n\n            this.showHint(this.options.select.from, this.options.select.to);\n        },\n\n        _zoomEnd: function(e) {\n            this._dragEnd(e);\n        },\n\n        showHint: function(from, to) {\n            var plotArea = this.chart._plotArea;\n\n            if (this.hint) {\n                this.hint.show(from, to, plotArea.backgroundBox());\n            }\n        },\n\n        _selectStart: function(e) {\n            return this.chart._selectStart(e);\n        },\n\n        _select: function(e) {\n            this.showHint(e.from, e.to);\n\n            return this.chart._select(e);\n        },\n\n        _selectEnd: function(e) {\n            if (this.hint) {\n                this.hint.hide();\n            }\n\n            this.readSelection();\n            this.filterAxes();\n            this.filter();\n            this.redrawSlaves();\n\n            return this.chart._selectEnd(e);\n        },\n\n        mainAxis: function() {\n            var plotArea = this.chart._plotArea;\n\n            if (plotArea) {\n                return plotArea.namedCategoryAxes[NAVIGATOR_AXIS];\n            }\n        },\n\n        select: function(from, to) {\n            var select = this.options.select;\n\n            if (from && to) {\n                select.from = this.parseDate(from);\n                select.to = this.parseDate(to);\n\n                this.filterAxes();\n                this.filter();\n                this.redrawSlaves();\n\n                this.selection.set(from, to);\n            }\n\n            return {\n                from: select.from,\n                to: select.to\n            };\n        }\n    });\n\n    Navigator.setup = function(options, themeOptions) {\n        if (options === void 0) { options = {}; }\n        if (themeOptions === void 0) { themeOptions = {}; }\n\n        if (options.__navi) {\n            return;\n        }\n        options.__navi = true;\n\n        var naviOptions = deepExtend({}, themeOptions.navigator, options.navigator);\n        var panes = options.panes = [].concat(options.panes);\n        var paneOptions = deepExtend({}, naviOptions.pane, { name: NAVIGATOR_PANE });\n\n        if (!naviOptions.visible) {\n            paneOptions.visible = false;\n            paneOptions.height = 0.1;\n        }\n\n        if (options.navigator.position !== 'top') {\n            panes.push(paneOptions);\n        } else {\n            panes.unshift(paneOptions);\n        }\n\n        panes.forEach(function (pane) { return pane.name = pane.name || DEFAULT_PANE; });\n\n        Navigator.attachAxes(options, naviOptions);\n        Navigator.attachSeries(options, naviOptions, themeOptions);\n    };\n\n    Navigator.attachAxes = function(options, naviOptions) {\n        var series = naviOptions.series || [];\n        var categoryAxes = options.categoryAxis = [].concat(options.categoryAxis);\n        var valueAxes = options.valueAxis = [].concat(options.valueAxis);\n        var allAxes = categoryAxes.concat(valueAxes);\n        allAxes.forEach(function (axis) { return axis.pane = axis.pane || DEFAULT_PANE; });\n\n        var equallySpacedSeries = dataviz.filterSeriesByType(series, datavizConstants.EQUALLY_SPACED_SERIES);\n        var justifyAxis = equallySpacedSeries.length === 0;\n\n        var base = deepExtend({\n            type: \"date\",\n            pane: NAVIGATOR_PANE,\n            roundToBaseUnit: !justifyAxis,\n            justified: justifyAxis,\n            _collapse: false,\n            majorTicks: { visible: true },\n            tooltip: { visible: false },\n            labels: { step: 1 },\n            autoBind: naviOptions.autoBindElements,\n            autoBaseUnitSteps: {\n                minutes: [ 1 ],\n                hours: [ 1, 2 ],\n                days: [ 1, 2 ],\n                weeks: [],\n                months: [ 1 ],\n                years: [ 1 ]\n            }\n        });\n        var user = naviOptions.categoryAxis;\n\n        categoryAxes.push(\n            deepExtend({}, base, {\n                maxDateGroups: 200\n            }, user, {\n                name: NAVIGATOR_AXIS,\n                title: null,\n                baseUnit: \"fit\",\n                baseUnitStep: \"auto\",\n                labels: { visible: false },\n                majorTicks: { visible: false }\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_labels\",\n                maxDateGroups: 20,\n                baseUnitStep: \"auto\",\n                labels: { position: \"\" },\n                plotBands: [],\n                autoBaseUnitSteps: {\n                    minutes: []\n                },\n                _overlap: true\n            }), deepExtend({}, base, user, {\n                name: NAVIGATOR_AXIS + \"_ticks\",\n                maxDateGroups: 200,\n                majorTicks: {\n                    width: 0.5\n                },\n                plotBands: [],\n                title: null,\n                labels: { visible: false, mirror: true },\n                _overlap: true\n            })\n        );\n\n        valueAxes.push(deepExtend({\n            name: NAVIGATOR_AXIS,\n            pane: NAVIGATOR_PANE,\n            majorGridLines: {\n                visible: false\n            },\n            visible: false\n        }, naviOptions.valueAxis));\n    };\n\n    Navigator.attachSeries = function(options, naviOptions, themeOptions) {\n        var series = options.series = options.series || [];\n        var navigatorSeries = [].concat(naviOptions.series || []);\n        var seriesColors = themeOptions.seriesColors;\n        var defaults = naviOptions.seriesDefaults;\n\n        for (var idx = 0; idx < navigatorSeries.length; idx++) {\n            series.push(\n                deepExtend({\n                    color: seriesColors[idx % seriesColors.length],\n                    categoryField: naviOptions.dateField,\n                    visibleInLegend: false,\n                    tooltip: {\n                        visible: false\n                    }\n                }, defaults, navigatorSeries[idx], {\n                    axis: NAVIGATOR_AXIS,\n                    categoryAxis: NAVIGATOR_AXIS,\n                    autoBind: naviOptions.autoBindElements\n                })\n            );\n        }\n    };\n\n    function ClonedObject() { }\n    function clone(obj) {\n        ClonedObject.prototype = obj;\n        return new ClonedObject();\n    }\n\n    var AUTO_CATEGORY_WIDTH = 28;\n\n    var StockChart = Chart.extend({\n        applyDefaults: function(options, themeOptions) {\n            var width = dataviz.elementSize(this.element).width || datavizConstants.DEFAULT_WIDTH;\n            var theme = themeOptions;\n\n            var stockDefaults = {\n                seriesDefaults: {\n                    categoryField: options.dateField\n                },\n                axisDefaults: {\n                    categoryAxis: {\n                        name: \"default\",\n                        majorGridLines: {\n                            visible: false\n                        },\n                        labels: {\n                            step: 2\n                        },\n                        majorTicks: {\n                            visible: false\n                        },\n                        maxDateGroups: Math.floor(width / AUTO_CATEGORY_WIDTH)\n                    }\n                }\n            };\n\n            if (theme) {\n                theme = deepExtend({}, theme, stockDefaults);\n            }\n\n            Navigator.setup(options, theme);\n\n            Chart.fn.applyDefaults.call(this, options, theme);\n        },\n\n        _setElementClass: function(element) {\n            dataviz.addClass(element, 'k-chart k-stockchart');\n        },\n\n        setOptions: function(options) {\n            this.destroyNavigator();\n            Chart.fn.setOptions.call(this, options);\n        },\n\n        noTransitionsRedraw: function() {\n            var transitions = this.options.transitions;\n\n            this.options.transitions = false;\n            this._fullRedraw();\n            this.options.transitions = transitions;\n        },\n\n        _resize: function() {\n            this.noTransitionsRedraw();\n        },\n\n        _redraw: function() {\n            var navigator = this.navigator;\n\n            if (!this._dirty() && navigator && navigator.options.partialRedraw) {\n                navigator.redrawSlaves();\n            } else {\n                this._fullRedraw();\n            }\n        },\n\n        _dirty: function() {\n            var options = this.options;\n            var series = [].concat(options.series, options.navigator.series);\n            var seriesCount = dataviz.grep(series, function(s) { return s && s.visible; }).length;\n            var dirty = this._seriesCount !== seriesCount;\n            this._seriesCount = seriesCount;\n\n            return dirty;\n        },\n\n        _fullRedraw: function() {\n            var navigator = this.navigator;\n\n            if (!navigator) {\n                navigator = this.navigator = new Navigator(this);\n                this.trigger(\"navigatorCreated\", { navigator: navigator });\n            }\n\n            navigator.clean();\n            navigator.setRange();\n\n            Chart.fn._redraw.call(this);\n\n            navigator.initSelection();\n        },\n\n        _trackSharedTooltip: function(coords) {\n            var plotArea = this._plotArea;\n            var pane = plotArea.paneByPoint(coords);\n\n            if (pane && pane.options.name === NAVIGATOR_PANE) {\n                this._unsetActivePoint();\n            } else {\n                Chart.fn._trackSharedTooltip.call(this, coords);\n            }\n        },\n\n        bindCategories: function() {\n            Chart.fn.bindCategories.call(this);\n            this.copyNavigatorCategories();\n        },\n\n        copyNavigatorCategories: function() {\n            var definitions = [].concat(this.options.categoryAxis);\n            var categories;\n\n            for (var axisIx = 0; axisIx < definitions.length; axisIx++) {\n                var axis = definitions[axisIx];\n                if (axis.name === NAVIGATOR_AXIS) {\n                    categories = axis.categories;\n                } else if (categories && axis.pane === NAVIGATOR_PANE) {\n                    axis.categories = categories;\n                }\n            }\n        },\n\n        destroyNavigator: function() {\n            if (this.navigator) {\n                this.navigator.destroy();\n                this.navigator = null;\n            }\n        },\n\n        destroy: function() {\n            this.destroyNavigator();\n            Chart.fn.destroy.call(this);\n        },\n\n        _stopChartHandlers: function(e) {\n            var coords = this._eventCoordinates(e);\n            var pane = this._plotArea.paneByPoint(coords);\n\n            return Chart.fn._stopChartHandlers.call(this, e) || (pane && pane.options.name === NAVIGATOR_PANE);\n        },\n\n        _toggleDragZoomEvents: function() {\n            if (!this._dragZoomEnabled) {\n                this.element.style.touchAction = \"none\";\n\n                this._dragZoomEnabled = true;\n            }\n        }\n    });\n\n    dataviz.setDefaultOptions(StockChart, {\n        dateField: \"date\",\n        axisDefaults: {\n            categoryAxis: {\n                type: \"date\",\n                baseUnit: \"fit\",\n                justified: true\n            },\n            valueAxis: {\n                narrowRange: true,\n                labels: {\n                    format: \"C\"\n                }\n            }\n        },\n        navigator: {\n            select: {},\n            seriesDefaults: {\n                markers: {\n                    visible: false\n                },\n                tooltip: {\n                    visible: false\n                },\n                highlight: {\n                    visible: false\n                },\n                line: {\n                    width: 2\n                }\n            },\n            hint: {},\n            visible: true\n        },\n        tooltip: {\n            visible: true\n        },\n        legend: {\n            visible: false\n        }\n    });\n\n    kendo.deepExtend(kendo.dataviz, {\n        constants: constants,\n        Navigator: Navigator,\n        NavigatorHint: NavigatorHint,\n        StockChart: StockChart\n    });\n\n    })();\n\n    (function($) {\n\n        var kendo = window.kendo;\n        var dataviz = kendo.dataviz;\n        var ChartInstanceObserver = dataviz.ChartInstanceObserver;\n        var Chart = dataviz.ui.Chart;\n        var KendoStockChart = dataviz.StockChart;\n        var constants = dataviz.constants;\n        var NAVIGATOR_AXIS = constants.NAVIGATOR_AXIS;\n        var NAVIGATOR_PANE = constants.NAVIGATOR_PANE;\n        var deepExtend = kendo.deepExtend;\n        var defined = dataviz.defined;\n\n        var CHANGE = \"change\";\n\n        var StockInstanceObserver = ChartInstanceObserver.extend({\n            handlerMap: {\n                navigatorFilter: '_onNavigatorFilter',\n                navigatorCreated: '_onNavigatorCreated'\n            }\n        });\n\n        var StockChart = Chart.extend({\n\n            options: {\n                name: \"StockChart\",\n                dateField: \"date\",\n                axisDefaults: {\n                    categoryAxis: {\n                        type: \"date\",\n                        baseUnit: \"fit\",\n                        justified: true\n                    },\n                    valueAxis: {\n                        narrowRange: true,\n                        labels: {\n                            format: \"C\"\n                        }\n                    }\n                },\n                navigator: {\n                    select: {},\n                    seriesDefaults: {\n                        markers: {\n                            visible: false\n                        },\n                        tooltip: {\n                            visible: true,\n                            template: function (ref) {\n                                var category = ref.category;\n\n                                return kendo.toString(category, 'd');\n        }\n                        },\n                        line: {\n                            width: 2\n                        }\n                    },\n                    hint: {},\n                    visible: true\n                },\n                tooltip: {\n                    visible: true\n                },\n                legend: {\n                    visible: false\n                },\n                persistSeriesVisibility: true\n            },\n\n            _createChart: function(options, themeOptions) {\n                this._initNavigatorOptions(options);\n                this._instance = new KendoStockChart(this.element[0], options, themeOptions, {\n                    observer: new StockInstanceObserver(this),\n                    sender: this,\n                    rtl: this._isRtl()\n                });\n            },\n\n            _initNavigatorOptions: function(options) {\n                var navigatorOptions = options.navigator || {};\n                var support = kendo.support;\n                var isTouch = support.touch;\n                var isFirefox = support.browser.mozilla;\n\n                deepExtend(navigatorOptions, {\n                    autoBindElements: !navigatorOptions.dataSource,\n                    partialRedraw: navigatorOptions.dataSource,\n                    liveDrag: !isTouch && !isFirefox\n                });\n            },\n\n            _initDataSource: function(userOptions) {\n                var options = userOptions || {},\n                    dataSource = options.dataSource,\n                    hasServerFiltering = dataSource && dataSource.serverFiltering,\n                    mainAxis = [].concat(options.categoryAxis)[0],\n                    naviOptions = options.navigator || {},\n                    select = naviOptions.select,\n                    hasSelect = select && select.from && select.to;\n\n                if (hasServerFiltering && hasSelect) {\n                    var filter = [].concat(dataSource.filter || []);\n\n                    var from = kendo.parseDate(select.from);\n                    var to = kendo.parseDate(select.to);\n                    var dummyAxis = new dataviz.DateCategoryAxis(deepExtend({\n                        baseUnit: \"fit\"\n                    }, mainAxis, {\n                        categories: [from, to]\n                    }), kendo);\n\n                    dataSource.filter = buildFilter(dummyAxis.range().min, to).concat(filter);\n                }\n\n                Chart.fn._initDataSource.call(this, userOptions);\n            },\n\n            _onNavigatorCreated: function(e) {\n                this._instance = e.sender;\n                this.options = e.sender.options;\n                this._navigator = this.navigator = e.navigator;\n                this._initNavigatorDataSource();\n            },\n\n            _initNavigatorDataSource: function() {\n                var navigatorOptions = this.options.navigator;\n                var autoBind = navigatorOptions.autoBind;\n                var dsOptions = navigatorOptions.dataSource;\n\n                if (dsOptions) {\n                    this._navigatorDataChangedHandler = this._navigatorDataChangedHandler || this._onNavigatorDataChanged.bind(this);\n                    this._navigatorDataSource = kendo.data.DataSource\n                        .create(dsOptions)\n                        .bind(CHANGE, this._navigatorDataChangedHandler);\n\n                    if (!defined(autoBind)) {\n                       autoBind = this.options.autoBind;\n                    }\n\n                    if (autoBind) {\n                        this._navigatorDataSource.fetch();\n                    }\n                }\n            },\n\n            _bindNavigatorSeries: function(series, data) {\n                var seriesIx, currentSeries,\n                    seriesLength = series.length;\n\n                for (seriesIx = 0; seriesIx < seriesLength; seriesIx++) {\n                    currentSeries = series[seriesIx];\n\n                    if (currentSeries.axis == NAVIGATOR_AXIS && this._isBindable(currentSeries)) {\n                        currentSeries.data = data;\n                    }\n                }\n            },\n\n            _onNavigatorDataChanged: function() {\n                var chart = this,\n                    instance = chart._instance,\n                    categoryAxes = chart.options.categoryAxis,\n                    axisIx,\n                    axesLength = categoryAxes.length,\n                    data = chart._navigatorDataSource.view(),\n                    currentAxis,\n                    naviCategories;\n\n                this._bindNavigatorSeries(chart.options.series, data);\n                if (chart._sourceSeries) {\n                    this._bindNavigatorSeries(chart._sourceSeries, data);\n                }\n\n                for (axisIx = 0; axisIx < axesLength; axisIx++) {\n                    currentAxis = categoryAxes[axisIx];\n\n                    if (currentAxis.pane == NAVIGATOR_PANE) {\n                        if (currentAxis.name == NAVIGATOR_AXIS) {\n                            chart._bindCategoryAxis(currentAxis, data, axisIx);\n                            naviCategories = currentAxis.categories;\n                        } else {\n                            currentAxis.categories = naviCategories;\n                        }\n                    }\n                }\n\n                if (instance._model) {\n                    var navigator = this.navigator;\n                    navigator.redraw();\n                    navigator.setRange();\n\n                    if (!chart.options.dataSource || (chart.options.dataSource && chart._dataBound)) {\n                        navigator.redrawSlaves();\n                    }\n                }\n            },\n\n            _bindCategories: function() {\n                Chart.fn._bindCategories.call(this);\n                if (this._instance) {\n                    this._instance.copyNavigatorCategories();\n                }\n            },\n\n            _onDataChanged: function() {\n                Chart.fn._onDataChanged.call(this);\n\n                this._dataBound = true;\n            },\n\n            setOptions: function(options) {\n                this._removeNavigatorDataSource();\n                this._initNavigatorOptions(options);\n                this._instance.destroyNavigator();\n                Chart.fn.setOptions.call(this, options);\n            },\n\n            _onNavigatorFilter: function(e) {\n                this.dataSource.filter(buildFilter(e.from, e.to));\n            },\n\n            requiresHandlers: function(names) {\n                if (dataviz.inArray('navigatorFilter', names)) {\n                    var dataSource = this.dataSource;\n                    var hasServerFiltering = dataSource && dataSource.options.serverFiltering;\n                    return hasServerFiltering && this.options.navigator.dataSource;\n                }\n\n                return Chart.fn.requiresHandlers.call(this, names);\n            },\n\n            _removeNavigatorDataSource: function() {\n                var navigatorDataSource = this._navigatorDataSource;\n                if (navigatorDataSource) {\n                    navigatorDataSource.unbind(CHANGE, this._navigatorDataChangedHandler);\n                    delete this._navigatorDataSource;\n                }\n            },\n\n            destroy: function() {\n                Chart.fn.destroy.call(this);\n                this._removeNavigatorDataSource();\n            }\n        });\n\n        dataviz.ui.plugin(StockChart);\n\n        function buildFilter(from, to) {\n            return [{\n                field: \"Date\", operator: \"gte\", value: from\n            }, {\n                field: \"Date\", operator: \"lt\", value: to\n            }];\n        }\n\n    })(window.kendo.jQuery);\n\n    var __meta__ = {\n        id: \"dataviz.stockchart\",\n        name: \"StockChart\",\n        category: \"dataviz\",\n        description: \"StockChart widget and associated financial series.\",\n        depends: [ \"dataviz.chart\" ]\n    };\n\n}));\n"]}