{"version":3,"file":"kendo.imagebrowser.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","FileBrowser","ui","isPlainObject","extend","isFunction","trimSlashesRegExp","ERROR","NS","NAMEFIELD","SIZEFIELD","TYPEFIELD","DEFAULTSORTORDER","field","dir","EMPTYTILE","template","ref","text","icon","iconClass","data","schemas","imagebrowser","items","model","id","fields","name","size","type","transports","RemoteTransport","init","options","fn","call","this","_call","path","read","create","destroy","update","ImageBrowser","element","addClass","fileTypes","value","that","selected","_selectedItem","imageUrl","transport","get","match","concatPaths","replace","format","encodeURIComponent","_fileUpload","e","file","filterRegExp","RegExp","split","join","fileName","files","fileSize","fileNameField","sizeField","test","_createFile","_uploading","upload","one","_insertFileToList","set","response","_getFieldName","_tiles","listView","filter","attr","_scroll","preventDefault","_showMessage","messages","invalidFileType","_content","list","appendTo","on","_dblClick","bind","ListView","layout","flex","direction","wrap","dataSource","_itemTmpl","editTemplate","_editTmpl","selectable","autoBind","dataBinding","toolbar","find","parent","action","progress","content","dataBound","view","length","append","emptyFolder","change","_listViewChange","_dataSource","typeSortOrder","nameSortOrder","sort","schema","_errorHandler","unbind","_error","DataSource","_loadImage","li","dataItem","getByUid","thumbnailUrl","img","alt","urlJoin","hide","prev","remove","end","fadeIn","after","indexOf","_override","Date","getTime","loaded","clearTimeout","_timeout","setTimeout","height","_outerHeight","viewTop","scrollTop","viewBottom","each","top","offsetTop","bottom","offsetHeight","showLoading","suffix","Math","round","plugin","jQuery"],"sources":["kendo.imagebrowser.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.filebrowser', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"imagebrowser\",\n        name: \"ImageBrowser\",\n        category: \"web\",\n        description: \"\",\n        hidden: true,\n        depends: [ \"filebrowser\", \"icons\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            FileBrowser = kendo.ui.FileBrowser,\n            isPlainObject = $.isPlainObject,\n            extend = $.extend,\n            isFunction = kendo.isFunction,\n            trimSlashesRegExp = /(^\\/|\\/$)/g,\n            ERROR = \"error\",\n            NS = \".kendoImageBrowser\",\n            NAMEFIELD = \"name\",\n            SIZEFIELD = \"size\",\n            TYPEFIELD = \"type\",\n            DEFAULTSORTORDER = { field: TYPEFIELD, dir: \"asc\" },\n            EMPTYTILE = kendo.template(function (ref) {\n                var text = ref.text;\n\n                return (\"<div class=\\\"k-listview-item k-listview-item-empty\\\"><span class=\\\"k-file-preview\\\">\" + (kendo.ui.icon({ icon: \"none\", iconClass: \"k-file-icon\" })) + \"</span><span class=\\\"k-file-name\\\">\" + text + \"</span></div>\");\n        });\n\n        extend(true, kendo.data, {\n            schemas: {\n                \"imagebrowser\": {\n                    data: function(data) {\n                        return data.items || data || [];\n                    },\n                    model: {\n                        id: \"name\",\n                        fields: {\n                            name: \"name\",\n                            size: \"size\",\n                            type: \"type\"\n                        }\n                    }\n                }\n            }\n        });\n\n        extend(true, kendo.data, {\n            transports: {\n                \"imagebrowser\": kendo.data.RemoteTransport.extend({\n                    init: function(options) {\n                        kendo.data.RemoteTransport.fn.init.call(this, $.extend(true, {}, this.options, options));\n                    },\n                    _call: function(type, options) {\n                        options.data = $.extend({}, options.data, { path: this.options.path() });\n\n                        if (isFunction(this.options[type])) {\n                            this.options[type].call(this, options);\n                        } else {\n                            kendo.data.RemoteTransport.fn[type].call(this, options);\n                        }\n                    },\n                    read: function(options) {\n                        this._call(\"read\", options);\n                    },\n                    create: function(options) {\n                        this._call(\"create\", options);\n                    },\n                    destroy: function(options) {\n                        this._call(\"destroy\", options);\n                    },\n                    update: function() {\n                        //updates are handled by the upload\n                    },\n                    options: {\n                        read: {\n                            type: \"POST\"\n                        },\n                        update: {\n                            type: \"POST\"\n                        },\n                        create: {\n                            type: \"POST\"\n                        },\n                        destroy: {\n                            type: \"POST\"\n                        }\n                    }\n                })\n            }\n        });\n\n        function offsetTop(element) {\n            return element.offsetTop - $(element).height();\n        }\n\n        function concatPaths(path, name) {\n            if (path === undefined$1 || !path.match(/\\/$/)) {\n                path = (path || \"\") + \"/\";\n            }\n            return path + name;\n        }\n\n        function sizeFormatter(value) {\n            if (!value) {\n                return \"\";\n            }\n\n            var suffix = \" bytes\";\n\n            if (value >= 1073741824) {\n                suffix = \" GB\";\n                value /= 1073741824;\n            } else if (value >= 1048576) {\n                suffix = \" MB\";\n                value /= 1048576;\n            } else if (value >= 1024) {\n                suffix = \" KB\";\n                value /= 1024;\n            }\n\n            return Math.round(value * 100) / 100 + suffix;\n        }\n\n        var ImageBrowser = FileBrowser.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                FileBrowser.fn.init.call(that, element, options);\n\n                that.element.addClass(\"k-imagebrowser\");\n            },\n\n            options: {\n                name: \"ImageBrowser\",\n                fileTypes: \"*.png,*.gif,*.jpg,*.jpeg\"\n            },\n\n            value: function() {\n                var that = this,\n                    selected = that._selectedItem(),\n                    path,\n                    imageUrl = that.options.transport.imageUrl;\n\n                if (selected && selected.get(TYPEFIELD) === \"f\") {\n                    path = concatPaths(that.path(), selected.get(NAMEFIELD)).replace(trimSlashesRegExp, \"\");\n                    if (imageUrl) {\n                        path = isFunction(imageUrl) ? imageUrl(path) : kendo.format(imageUrl, encodeURIComponent(path));\n                    }\n                    return path;\n                }\n            },\n\n            _fileUpload: function(e) {\n                var that = this,\n                    options = that.options,\n                    fileTypes = options.fileTypes,\n                    filterRegExp = new RegExp((\"(\" + fileTypes.split(\",\").join(\")|(\") + \")\").replace(/\\*\\./g , \".*.\"), \"i\"),\n                    fileName = e.files[0].name,\n                    fileSize = e.files[0].size,\n                    fileNameField = NAMEFIELD,\n                    sizeField = SIZEFIELD,\n                    file;\n\n                if (filterRegExp.test(fileName)) {\n                    e.data = { path: that.path() };\n\n                    file = that._createFile(fileName, fileSize);\n\n                    if (!file) {\n                        e.preventDefault();\n                    } else {\n                        file._uploading = true;\n\n                        that.upload.one(\"error\", function() {\n                            file = undefined$1;\n                        });\n\n                        that.upload.one(\"success\", function(e) {\n                            if (file) {\n                                delete file._uploading;\n\n                                var model = that._insertFileToList(file);\n\n                                model.set(fileNameField, e.response[that._getFieldName(fileNameField)]);\n                                model.set(sizeField, e.response[that._getFieldName(sizeField)]);\n\n                                that._tiles = that.listView.items().filter(\"[\" + kendo.attr(\"type\") + \"=f]\");\n                                that._scroll();\n                            }\n                        });\n                    }\n                } else {\n                    e.preventDefault();\n                    that._showMessage(kendo.format(options.messages.invalidFileType, fileName, fileTypes));\n                }\n            },\n\n            _content: function() {\n                var that = this;\n\n                that.list = $('<div class=\"k-filemanager-listview\" />')\n                    .appendTo(that.element)\n                    .on(\"dblclick\" + NS, \".k-listview-item\", that._dblClick.bind(that));\n\n                that.listView = new kendo.ui.ListView(that.list, {\n                    layout: \"flex\",\n                    flex: {\n                        direction: \"row\",\n                        wrap: \"wrap\"\n                    },\n                    dataSource: that.dataSource,\n                    template: that._itemTmpl(),\n                    editTemplate: that._editTmpl(),\n                    selectable: true,\n                    autoBind: false,\n                    dataBinding: function(e) {\n\n                        that.toolbar.find(\".k-i-x,.k-svg-i-x\").parent().addClass(\"k-disabled\");\n\n                        if (e.action === \"remove\" || e.action === \"sync\") {\n                            e.preventDefault();\n                            kendo.ui.progress(that.listView.content, false);\n                        }\n                    },\n                    dataBound: function() {\n                        if (that.dataSource.view().length) {\n                            that._tiles = this.items().filter(\"[\" + kendo.attr(\"type\") + \"=f]\");\n                            that._scroll();\n                        } else {\n                            this.content.append(EMPTYTILE({ text: that.options.messages.emptyFolder }));\n                        }\n                    },\n                    change: that._listViewChange.bind(that)\n                });\n\n                that.listView.content.on(\"scroll\" + NS, that._scroll.bind(that));\n            },\n\n            _dataSource: function() {\n                var that = this,\n                    options = that.options,\n                    transport = options.transport,\n                    typeSortOrder = extend({}, DEFAULTSORTORDER),\n                    nameSortOrder = { field: NAMEFIELD, dir: \"asc\" },\n                    schema,\n                    dataSource = {\n                        type: transport.type || \"imagebrowser\",\n                        sort: [typeSortOrder, nameSortOrder]\n                    };\n\n                if (isPlainObject(transport)) {\n                    transport.path = that.path.bind(that);\n                    dataSource.transport = transport;\n                }\n\n                if (isPlainObject(options.schema)) {\n                    dataSource.schema = options.schema;\n                } else if (transport.type && isPlainObject(kendo.data.schemas[transport.type])) {\n                    schema = kendo.data.schemas[transport.type];\n                }\n\n                if (that.dataSource && that._errorHandler) {\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.DataSource.create(dataSource)\n                    .bind(ERROR, that._errorHandler);\n            },\n\n            _loadImage: function(li) {\n                var that = this,\n                    element = $(li),\n                    dataItem = that.dataSource.getByUid(element.attr(kendo.attr(\"uid\"))),\n                    name = dataItem.get(NAMEFIELD),\n                    thumbnailUrl = that.options.transport.thumbnailUrl,\n                    img = $(\"<img />\", { alt: name }),\n                    urlJoin = \"?\";\n\n                if (dataItem._uploading) {\n                    return;\n                }\n\n                img.hide()\n                   .on(\"load\" + NS, function() {\n                       $(this).prev().remove().end().addClass(\"k-image k-file-image\").fadeIn();\n                   });\n\n                element.find(\".k-i-loading\").after(img);\n\n                if (isFunction(thumbnailUrl)) {\n                    thumbnailUrl = thumbnailUrl(that.path(), encodeURIComponent(name));\n                } else {\n                    if (thumbnailUrl.indexOf(\"?\") >= 0) {\n                        urlJoin = \"&\";\n                    }\n\n                    thumbnailUrl = thumbnailUrl + urlJoin + \"path=\" + encodeURIComponent(that.path() + name);\n                    if (dataItem._override) {\n                        thumbnailUrl += \"&_=\" + new Date().getTime();\n                        delete dataItem._override;\n                    }\n                }\n\n                // IE8 will trigger the load event immediately when the src is assigned\n                // if the image is loaded from the cache\n                img.attr(\"src\", thumbnailUrl);\n\n                li.loaded = true;\n            },\n\n            _scroll: function() {\n                var that = this;\n                if (that.options.transport && that.options.transport.thumbnailUrl) {\n                    clearTimeout(that._timeout);\n\n                    that._timeout = setTimeout(function() {\n\n                        var height = kendo._outerHeight(that.listView.content),\n                            viewTop = that.listView.content.scrollTop(),\n                            viewBottom = viewTop + height;\n\n                        that._tiles.each(function() {\n                            var top = offsetTop(this),\n                                bottom = top + this.offsetHeight;\n\n                            if ((top >= viewTop && top < viewBottom) || (bottom >= viewTop && bottom < viewBottom)) {\n                                that._loadImage(this);\n                            }\n\n                            if (top > viewBottom) {\n                                return false;\n                            }\n                        });\n\n                        that._tiles = that._tiles.filter(function() {\n                            return !this.loaded;\n                        });\n\n                    }, 250);\n                }\n            },\n\n            _itemTmpl: function() {\n                var that = this;\n\n                var result = function (data) {\n                    var showLoading = that.options.transport && that.options.transport.thumbnailUrl;\n\n                    return \"<div class=\\\"k-listview-item\\\" \" + (kendo.attr(\"uid\")) + \"=\\\"\" + (data.uid) + \"\\\" \" + (kendo.attr(\"type\")) + \"=\\\"\" + (data[TYPEFIELD]) + \"\\\">\" +\n                        \"\" + (data[TYPEFIELD] === 'd' ?\n                            (\"<div class=\\\"k-file-preview\\\">\" + (kendo.ui.icon({ icon: \"folder\", iconClass: \"k-file-icon\" })) + \"</div>\") :\n                            (\"<div class=\\\"k-file-preview\\\">\" + (showLoading ? '<span class=\"k-file-icon k-icon k-i-loading\"></span>' : kendo.ui.icon({ icon: \"file\", iconClass: \"k-file-icon\" })) + \"</div>\")) +\n                        \"<span class=\\\"k-file-name\\\">\" + (data[NAMEFIELD]) + \"</span>\" +\n                        \"\" + (data[TYPEFIELD] === 'f' ? (\"<span class=\\\"k-file-size\\\">\" + (sizeFormatter(data[SIZEFIELD])) + \"</span>\") : '') +\n                    \"</div>\";\n                };\n\n                return kendo.template(result);\n            }\n        });\n\n        kendo.ui.plugin(ImageBrowser);\n    })(window.kendo.jQuery);\n\n}));\n"]}