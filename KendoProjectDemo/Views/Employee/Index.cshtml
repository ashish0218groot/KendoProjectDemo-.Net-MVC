@model IEnumerable<KendoProjectDemo.Models.DataModel.Employees>

@{
    ViewBag.Title = "Employee List";
}

<h2>Employee List</h2>

<script>
    $(document).ready(function () {
        kendo.culture("en-US");

        // Select All checkbox
        $("#selectAll").click(function () {
            $("input[name='selectedEmployees']").prop("checked", this.checked);
        });

        // Handle delete button click
        $("#deleteButton").click(function () {
            var selectedIds = [];

            $("input[name='selectedEmployees']:checked").each(function () {
                selectedIds.push($(this).val());
            });


            if (selectedIds.length > 0) {
                $.ajax({
                    url: "@Url.Action("DeleteEmployee", "Employee")",
                    type: "POST",
                    traditional: true,
                    data: { ids: selectedIds },
                    success: function (response) {
                        if (response) {
                            alert("Employees deleted successfully!");
                            // Refresh the grid
                            $("#grid").data("kendoGrid").dataSource.read();
                        } else {
                            alert("Failed to delete employees!");
                        }
                    },
                    error: function () {
                        alert("An error occurred while deleting employees.");
                    }
                });
            } else {
                alert("Please select at least one employee to delete.");
            }
        });
    });
</script>



<div class="row">
    <div class="col-md-6  ">
        @(Html.Partial("~/Views/Shared/_AddEmployee.cshtml"))
    </div>

    <div class="col-md-6  ">
        @(Html.Partial("~/Views/Shared/_AddOrder.cshtml"))
    </div>

</div>
<div class="d-flex justify-content-end mb-3">
    <button id="deleteButton" class="k-button" style="background-color: black; color: white;">Delete</button>
</div>

<div class="row">
    <div class="col-12">
        @(Html.Kendo().Grid<KendoProjectDemo.Models.DataModel.Employees>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Template(@<text></text>).ClientTemplate("<input type='checkbox' name='selectedEmployees' value='#=Id#' />").Width(40).HeaderTemplate("<input type='checkbox' id='selectAll' />").HtmlAttributes(new { style = "text-align: center;" });
                columns.Bound(p => p.FirstName).Title("First Name");
                columns.Bound(p => p.LastName).Title("Last Name");
                columns.Bound(p => p.DateOfBirth)
                    .Title("Date of Birth")
                    .Format("{0:MM/dd/yyyy}");
                columns.Command(c =>
                {
                    c.Custom("Edit").Click("editEmployee");
                }).Width(90);
            })
            //.Editable(e => e.Mode(GridEditMode.InLine))
            //.ToolBar(toolbar =>
            //{
            //    toolbar.Create().Text("Add Employee");
            //})
            .Pageable()
            .Sortable()
            .Scrollable()
            .Filterable()
            .HtmlAttributes(new { style = "height:550px;" })
            .DataSource(dataSource => dataSource
                .Ajax().Model(s => s.Id(m => m.Id))
                .PageSize(5)
                .Read(read => read.Action("ReadEmployees1", "Employee")).Group(c => c.Add(g => g.FirstName))
                .Create(c => c.Action("CreateEmployee", "Employee"))
                .Update(c => c.Action("UpdateEmployee", "Employee"))
                .Destroy(c => c.Action("DeleteEmployee", "Employee"))
            )
            .ClientDetailTemplateId("detail-template")
        )
    </div>
</div>

<div id="orderFormContainer"></div>

<script id="detail-template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<KendoProjectDemo.Models.DataModel.Order>()
        .Name("childGrid_#=Id#") // Unique name for each child grid
        .Columns(columns =>
        {
            columns.Bound(p => p.Id);
            columns.Bound(p => p.OrderDate);
            columns.Bound(p => p.OrderNumber);
            //columns.Bound(p => p.Employee.FirstName).Title("Employee");
            columns.Bound(p => p.TotalAmount);
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("ReadOrders", "Order", new { employeeId = "#=Id#" })) // Pass the employeeId as a route value
        )
        .ToClientTemplate()
    )
</script>






<script>
    $(document).ready(function () {
        // Event handler for Add Employee button
        $("#addEmployeeButton").click(function () {
            $.get("/Employee/AddedEmp", function (data) {
                // Render the partial view in a specific area of the page
                //    $("#addEmployeeContainer").html(data);
            });
        });
    });

    // Callback function to handle the success of adding an employee
    function handleSuccess(data) {
        if (data) {
            alert("Employee added successfully!");
            // Refresh the grid
            $("#grid").data("kendoGrid").dataSource.read();
            // Clear the form if needed
            $("#addEmployeeForm")[0].reset();
        } else {
            alert("Failed to add employee!");
        }
    }
</script>





<script>
   $(document).ready(function () {
  // Event handler for "Add Order" button
  $("#addOrderButton").click(function () {
    var selectedEmployees = $("input[name='selectedEmployees']:checked");
    if (selectedEmployees.length > 0) {
      var employeeIds = selectedEmployees.map(function () {
        return $(this).val();
      }).get();

      // Prepare the form data
      var formData = {
        request: { // DataSourceRequest object
          page: 1, // Set the appropriate page number if needed
          pageSize: 10, // Set the appropriate page size if needed
          sort: null, // Set the sort configuration if needed
          filter: null // Set the filter configuration if needed
        },
        ids: employeeIds, // Array of employee IDs
        order: { // Order object
            OrderNumber: $("#OrderNumber").val(), // Set the appropriate value
            TotalAmount: parseInt($("#TotalAmount").val()), // Set the appropriate value
            OrderDate: $("#OrderDate").val() // Set the appropriate value
        }
      };

      // Submit the form using AJAX
      $.ajax({
        url: "@Url.Action("CreateOrder", "Order")",
        type: "POST",
        contentType: "application/json",
        data: JSON.stringify(formData),
        success: function (response) {
          if (response) {
            alert("Order created successfully!");
            // Perform any additional actions upon successful order creation
          } else {
            alert("Failed to create order!");
          }
        },
        error: function () {
          alert("An error occurred while creating the order.");
        }
      });
    } else {
      alert("Please select at least one employee to create an order.");
    }
  });
});
</script>


<div id="editEmployeeModal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Employee</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

<script>
    function editEmployee(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var employeeId = dataItem.Id;
         $.ajax({
            url: "@Url.Action("EditEmployee", "Employee")",
            type: "GET",
            data: { id: employeeId },
            success: function (response) {

                $("#editEmployeeModal .modal-body").html(response);
                $("#editEmployeeModal").modal("show");
            },
            error: function () {
                alert("An error occurred while loading the edit form.");
            }
        });
    }
</script>


<script>
    $(document).ready(function () {
        $("#addEmployeeButton").click(function () {
            window.location.href = "/Employee/AddedEmp";
        });
    });
</script>



<!-- AddEmployeeContainer HTML element to hold the partial view -->
<div id="addEmployeeContainer"></div>
