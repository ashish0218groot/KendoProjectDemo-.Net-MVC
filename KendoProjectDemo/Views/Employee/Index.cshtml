@model IEnumerable<KendoProjectDemo.Models.DataModel.Employees>

@{
    ViewBag.Title = "Employee List";
}

<h2>Employee List</h2>

<script>
    $(document).ready(function () {
        kendo.culture("en-US");

        // Select All checkbox
        $("#selectAll").click(function () {
            $("input[name='selectedEmployees']").prop("checked", this.checked);
        });

        // Handle delete button click
        $("#deleteButton").click(function () {
            var selectedIds = [];

            $("input[name='selectedEmployees']:checked").each(function () {
                selectedIds.push($(this).val());
            });

            if (selectedIds.length > 0) {
                $.ajax({
                    url: "@Url.Action("DeleteEmployee", "Employee")",
                    type: "POST",
                    traditional: true,
                    data: { ids: selectedIds },
                    success: function (response) {
                        if (response) {
                            alert("Employees deleted successfully!");
                            // Refresh the grid
                            $("#grid").data("kendoGrid").dataSource.read();
                        } else {
                            alert("Failed to delete employees!");
                        }
                    },
                    error: function () {
                        alert("An error occurred while deleting employees.");
                    }
                });
            } else {
                alert("Please select at least one employee to delete.");
            }
        });
    });
</script>

<div>
    <button id="deleteButton" class="k-button">Delete</button>
</div>

<div class="row">
    <div class="col-12">
        @(Html.Kendo().Grid<KendoProjectDemo.Models.DataModel.Employees>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Template(@<text></text>).ClientTemplate("<input type='checkbox' name='selectedEmployees' value='#=Id#' />").Width(40).HeaderTemplate("<input type='checkbox' id='selectAll' />").HtmlAttributes(new { style = "text-align: center;" });
                columns.Bound(p => p.FirstName).Title("First Name");
                columns.Bound(p => p.LastName).Title("Last Name");
                columns.Bound(p => p.DateOfBirth)
                    .Title("Date of Birth")
                    .Format("{0:MM/dd/yyyy}");
                columns.Command(c =>
                {
                    c.Edit().Text("Edit");
                    c.Destroy().Text("Delete");
                }).Width(90);
            })
            .Editable(e => e.Mode(GridEditMode.InLine))
            .ToolBar(toolbar =>
            {
                toolbar.Create().Text("Add Employee");
            })
            .Pageable()
            .Sortable()
            .Scrollable()
            .Filterable()
            .HtmlAttributes(new { style = "height:550px;" })
            .DataSource(dataSource => dataSource
                .Ajax().Model(s => s.Id(m => m.Id))
                .PageSize(5)
                .Read(read => read.Action("ReadEmployees1", "Employee"))
                .Create(c => c.Action("CreateEmployee", "Employee"))
                .Update(c => c.Action("UpdateEmployee", "Employee"))
                .Destroy(c => c.Action("DeleteEmployee", "Employee"))
            )
            .ClientDetailTemplateId("detail-template")
        )
    </div>
</div>

<script id="detail-template" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<KendoProjectDemo.Models.DataModel.Order>()
        .Name("childGrid_#=Id#") // Unique name for each child grid
        .Columns(columns =>
        {
            columns.Bound(p => p.Id);
            columns.Bound(p => p.OrderDate);
            columns.Bound(p => p.OrderNumber);
            //columns.Bound(p => p.Employee.FirstName).Title("Employee");
            columns.Bound(p => p.TotalAmount);
        })
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("ReadOrders", "Order", new { employeeId = "#=Id#" })) // Pass the employeeId as a route value
        )
        .ToClientTemplate()
    )
</script>
